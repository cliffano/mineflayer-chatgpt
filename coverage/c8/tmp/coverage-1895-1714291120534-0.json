{"result":[{"scriptId":"12","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9499,"endOffset":9570,"count":107}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9575,"endOffset":9624,"count":587}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9629,"endOffset":9674,"count":91}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11239,"endOffset":11306,"count":17}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11964,"endOffset":11992,"count":210}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12136,"endOffset":12164,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12293,"endOffset":12321,"count":214}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12745,"endOffset":12801,"count":2}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":13140,"endOffset":13182,"count":492}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":13686,"endOffset":13960,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13831,"endOffset":13955,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13861,"endOffset":13910,"count":82}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":15280,"endOffset":15836,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15315,"endOffset":15835,"count":90},{"startOffset":15485,"endOffset":15504,"count":28},{"startOffset":15577,"endOffset":15831,"count":192},{"startOffset":15615,"endOffset":15638,"count":0},{"startOffset":15831,"endOffset":15834,"count":192}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15706,"endOffset":15815,"count":192},{"startOffset":15788,"endOffset":15807,"count":62}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnVoid","ranges":[{"startOffset":16178,"endOffset":16580,"count":189}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16213,"endOffset":16579,"count":189},{"startOffset":16310,"endOffset":16320,"count":64},{"startOffset":16367,"endOffset":16575,"count":385},{"startOffset":16405,"endOffset":16428,"count":193},{"startOffset":16429,"endOffset":16442,"count":192},{"startOffset":16575,"endOffset":16578,"count":385}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16496,"endOffset":16559,"count":385},{"startOffset":16541,"endOffset":16551,"count":125}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/per_context/domexception","functions":[{"functionName":"DOMException","ranges":[{"startOffset":1102,"endOffset":1728,"count":2},{"startOffset":1232,"endOffset":1611,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5789,"endOffset":6051,"count":119}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6211,"endOffset":6365,"count":4939},{"startOffset":6347,"endOffset":6362,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":8874,"endOffset":8949,"count":234}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":8960,"endOffset":9054,"count":1058}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":9317,"endOffset":9426,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9437,"endOffset":9782,"count":649},{"startOffset":9513,"endOffset":9675,"count":0},{"startOffset":9731,"endOffset":9755,"count":113},{"startOffset":9755,"endOffset":9781,"count":536}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":9940,"endOffset":10652,"count":117},{"startOffset":10021,"endOffset":10213,"count":0},{"startOffset":10277,"endOffset":10574,"count":13},{"startOffset":10536,"endOffset":10540,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":10656,"endOffset":11418,"count":121},{"startOffset":10694,"endOffset":10713,"count":108},{"startOffset":10713,"endOffset":11417,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11155,"endOffset":11258,"count":13}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":11714,"endOffset":12058,"count":130},{"startOffset":11833,"endOffset":12048,"count":4939},{"startOffset":11910,"endOffset":11919,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12062,"endOffset":12884,"count":3951}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13079,"endOffset":13444,"count":3836}],"isBlockCoverage":false},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":13560,"endOffset":13836,"count":64},{"startOffset":13657,"endOffset":13710,"count":12},{"startOffset":13710,"endOffset":13800,"count":52},{"startOffset":13753,"endOffset":13800,"count":0}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/errors","functions":[{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5751,"endOffset":6258,"count":969},{"startOffset":5981,"endOffset":6004,"count":0},{"startOffset":6105,"endOffset":6148,"count":0},{"startOffset":6227,"endOffset":6255,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10461,"endOffset":11463,"count":287}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11208,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11628,"endOffset":11893,"count":19}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12515,"endOffset":13388,"count":287},{"startOffset":12928,"endOffset":13387,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":13406,"endOffset":13486,"count":36}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":13543,"endOffset":13695,"count":36}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13748,"endOffset":14150,"count":323}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":14477,"endOffset":15718,"count":36},{"startOffset":14560,"endOffset":14578,"count":0},{"startOffset":14772,"endOffset":14841,"count":0},{"startOffset":15456,"endOffset":15578,"count":108},{"startOffset":15504,"endOffset":15522,"count":72},{"startOffset":15524,"endOffset":15547,"count":36},{"startOffset":15547,"endOffset":15578,"count":72},{"startOffset":15650,"endOffset":15676,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48765,"endOffset":48918,"count":287}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3721,"endOffset":3783,"count":26}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3789,"endOffset":3859,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4967,"endOffset":5234,"count":6},{"startOffset":5095,"endOffset":5233,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5686,"endOffset":5717,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8780,"endOffset":8942,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9044,"endOffset":9240,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13587,"endOffset":13623,"count":162}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14526,"endOffset":14561,"count":13}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4448,"endOffset":4473,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5610,"endOffset":5888,"count":116},{"startOffset":5836,"endOffset":5886,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5994,"endOffset":7040,"count":7},{"startOffset":6116,"endOffset":6139,"count":5},{"startOffset":6142,"endOffset":6494,"count":2},{"startOffset":6175,"endOffset":6420,"count":0},{"startOffset":6851,"endOffset":6858,"count":0}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7782,"endOffset":8088,"count":7}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8663,"endOffset":8844,"count":109},{"startOffset":8706,"endOffset":8781,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9465,"endOffset":9547,"count":7}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9549,"endOffset":9632,"count":7}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":10715,"endOffset":11366,"count":7},{"startOffset":11273,"endOffset":11335,"count":2}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12430,"endOffset":12501,"count":7}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12815,"endOffset":14748,"count":109},{"startOffset":12894,"endOffset":12918,"count":0},{"startOffset":13355,"endOffset":13370,"count":0},{"startOffset":13687,"endOffset":13783,"count":0},{"startOffset":14345,"endOffset":14401,"count":0},{"startOffset":14503,"endOffset":14524,"count":0},{"startOffset":14675,"endOffset":14704,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14753,"endOffset":15243,"count":1},{"startOffset":14953,"endOffset":15225,"count":0}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":17811,"endOffset":18133,"count":109}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":18137,"endOffset":18310,"count":109}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14460,"endOffset":14530,"count":142}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14905,"endOffset":15195,"count":142},{"startOffset":15161,"endOffset":15194,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16007,"endOffset":16070,"count":689}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16072,"endOffset":16131,"count":135}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16133,"endOffset":16188,"count":142}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16249,"endOffset":16310,"count":142}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16801,"endOffset":16977,"count":135},{"startOffset":16949,"endOffset":16975,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":16980,"endOffset":17100,"count":135},{"startOffset":17044,"endOffset":17069,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17445,"endOffset":18015,"count":135},{"startOffset":17665,"endOffset":17715,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18080,"endOffset":18691,"count":135},{"startOffset":18196,"endOffset":18209,"count":0},{"startOffset":18288,"endOffset":18394,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":946,"endOffset":1008,"count":239}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1629,"endOffset":1940,"count":320},{"startOffset":1722,"endOffset":1890,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2567,"count":476},{"startOffset":2306,"endOffset":2360,"count":0},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2497,"endOffset":2563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2811,"endOffset":3274,"count":478},{"startOffset":2983,"endOffset":3051,"count":0},{"startOffset":3085,"endOffset":3153,"count":0},{"startOffset":3190,"endOffset":3270,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3512,"endOffset":3944,"count":320},{"startOffset":3582,"endOffset":3646,"count":0},{"startOffset":3678,"endOffset":3742,"count":0},{"startOffset":3766,"endOffset":3769,"count":0},{"startOffset":3866,"endOffset":3942,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4097,"endOffset":4229,"count":6200}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4430,"endOffset":4898,"count":322},{"startOffset":4528,"endOffset":4582,"count":0},{"startOffset":4603,"endOffset":4617,"count":0},{"startOffset":4635,"endOffset":4649,"count":0},{"startOffset":4690,"endOffset":4711,"count":0},{"startOffset":4714,"endOffset":4896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5084,"endOffset":5417,"count":4},{"startOffset":5155,"endOffset":5415,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5228,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5573,"endOffset":5708,"count":1},{"startOffset":5651,"endOffset":5706,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5820,"endOffset":6001,"count":105},{"startOffset":5961,"endOffset":5979,"count":64},{"startOffset":5980,"endOffset":5998,"count":41}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6266,"endOffset":6821,"count":35},{"startOffset":6571,"endOffset":6588,"count":32},{"startOffset":6614,"endOffset":6636,"count":0},{"startOffset":6676,"endOffset":6746,"count":0},{"startOffset":6749,"endOffset":6817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7376,"endOffset":7556,"count":1},{"startOffset":7417,"endOffset":7445,"count":0},{"startOffset":7446,"endOffset":7476,"count":0},{"startOffset":7478,"endOffset":7552,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9948,"endOffset":10178,"count":238},{"startOffset":10013,"endOffset":10176,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11802,"endOffset":11918,"count":328}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1754,"endOffset":2066,"count":188},{"startOffset":2023,"endOffset":2065,"count":0}],"isBlockCoverage":true},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2660,"endOffset":3309,"count":17}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2759,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2806,"endOffset":3306,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4058,"endOffset":5056,"count":17}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4482,"endOffset":4668,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5326,"endOffset":5400,"count":5},{"startOffset":5372,"endOffset":5398,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5579,"endOffset":5710,"count":238},{"startOffset":5649,"endOffset":5667,"count":1},{"startOffset":5683,"endOffset":5709,"count":0}],"isBlockCoverage":true},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":7733,"endOffset":8072,"count":1},{"startOffset":7849,"endOffset":8016,"count":52},{"startOffset":7941,"endOffset":7973,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":8074,"endOffset":8230,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8125,"endOffset":8227,"count":1}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11072,"endOffset":12933,"count":22},{"startOffset":11192,"endOffset":11248,"count":1},{"startOffset":11335,"endOffset":11612,"count":0},{"startOffset":12719,"endOffset":12881,"count":68}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11812,"endOffset":12331,"count":0}],"isBlockCoverage":false},{"functionName":"defineOperation","ranges":[{"startOffset":15607,"endOffset":15808,"count":1}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":15860,"endOffset":16080,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16301,"endOffset":16444,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16547,"endOffset":16743,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17222,"endOffset":17373,"count":12},{"startOffset":17263,"endOffset":17294,"count":0}],"isBlockCoverage":true},{"functionName":"lazyDOMExceptionClass","ranges":[{"startOffset":17978,"endOffset":18074,"count":1}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":18868,"endOffset":19058,"count":362}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21160,"endOffset":21288,"count":1236},{"startOffset":21204,"endOffset":21266,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":21416,"endOffset":22093,"count":1},{"startOffset":21886,"endOffset":22063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":1639},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":600,"endOffset":731,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":1638},{"startOffset":1084,"endOffset":1185,"count":5},{"startOffset":1185,"endOffset":1225,"count":1633}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1718,"endOffset":1776,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1780,"endOffset":1835,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":785}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":8}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/linkedlist","functions":[{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":14}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":7},{"startOffset":594,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":997,"endOffset":1057,"count":7}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":7},{"startOffset":826,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":879,"endOffset":917,"count":1}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1589,"endOffset":2077,"count":7},{"startOffset":1764,"endOffset":1986,"count":0}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2081,"endOffset":2411,"count":7},{"startOffset":2239,"endOffset":2253,"count":0},{"startOffset":2255,"endOffset":2407,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/util/inspect","functions":[{"functionName":"stylizeNoColor","ranges":[{"startOffset":17167,"endOffset":17213,"count":1}],"isBlockCoverage":true},{"functionName":"formatNumber","ranges":[{"startOffset":52634,"endOffset":53422,"count":1},{"startOffset":52825,"endOffset":52865,"count":0},{"startOffset":52907,"endOffset":53421,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":72105,"endOffset":72186,"count":175}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":72188,"endOffset":72375,"count":32}],"isBlockCoverage":true},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":72377,"endOffset":72559,"count":1}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":72745,"endOffset":76769,"count":207},{"startOffset":72909,"endOffset":76572,"count":200},{"startOffset":72938,"endOffset":72965,"count":175},{"startOffset":72965,"endOffset":73052,"count":25},{"startOffset":73052,"endOffset":76411,"count":662},{"startOffset":73108,"endOffset":76405,"count":35},{"startOffset":73260,"endOffset":74036,"count":34},{"startOffset":73367,"endOffset":73456,"count":0},{"startOffset":73495,"endOffset":73584,"count":0},{"startOffset":73622,"endOffset":73666,"count":0},{"startOffset":73667,"endOffset":73723,"count":0},{"startOffset":73785,"endOffset":74001,"count":0},{"startOffset":74049,"endOffset":74135,"count":0},{"startOffset":74148,"endOffset":74571,"count":1},{"startOffset":74255,"endOffset":74344,"count":0},{"startOffset":74383,"endOffset":74433,"count":0},{"startOffset":74584,"endOffset":74680,"count":0},{"startOffset":74693,"endOffset":74921,"count":0},{"startOffset":74934,"endOffset":75404,"count":0},{"startOffset":75417,"endOffset":75747,"count":0},{"startOffset":75760,"endOffset":75846,"count":0},{"startOffset":75859,"endOffset":75991,"count":0},{"startOffset":76004,"endOffset":76088,"count":0},{"startOffset":76134,"endOffset":76211,"count":26},{"startOffset":76274,"endOffset":76397,"count":0},{"startOffset":76411,"endOffset":76568,"count":25},{"startOffset":76572,"endOffset":76600,"count":32},{"startOffset":76600,"endOffset":76753,"count":0},{"startOffset":76753,"endOffset":76768,"count":32}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":948},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":519,"endOffset":991,"count":1},{"startOffset":610,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":885,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":973,"endOffset":984,"count":8}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1419,"endOffset":1427,"count":1456}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1548,"endOffset":2106,"count":7},{"startOffset":1623,"endOffset":2078,"count":4},{"startOffset":1642,"endOffset":2031,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1731,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2326,"endOffset":3352,"count":15}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2357,"endOffset":2453,"count":8}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2468,"endOffset":2862,"count":7},{"startOffset":2715,"endOffset":2745,"count":4},{"startOffset":2752,"endOffset":2791,"count":2},{"startOffset":2798,"endOffset":2852,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2892,"endOffset":2961,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2923,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2980,"endOffset":3175,"count":7},{"startOffset":3028,"endOffset":3058,"count":4},{"startOffset":3065,"endOffset":3104,"count":2},{"startOffset":3111,"endOffset":3165,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3246,"endOffset":3280,"count":1}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2894,"endOffset":6205,"count":6},{"startOffset":2984,"endOffset":6167,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3439,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3601,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4079,"endOffset":4603,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4740,"endOffset":5110,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5171,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5419,"endOffset":5610,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5670,"endOffset":5875,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":5965,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6339,"endOffset":6408,"count":92}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6893,"endOffset":6949,"count":6}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7859,"endOffset":7937,"count":164}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8045,"endOffset":8093,"count":22}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9989,"endOffset":10586,"count":92}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12161,"endOffset":12310,"count":14},{"startOffset":12279,"endOffset":12309,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13467,"endOffset":15770,"count":239}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15773,"endOffset":17666,"count":91}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17844,"endOffset":17936,"count":91}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":18329,"endOffset":18593,"count":3},{"startOffset":18531,"endOffset":18591,"count":0}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":18595,"endOffset":18836,"count":36}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19027,"endOffset":19153,"count":36}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19763,"endOffset":21057,"count":37},{"startOffset":19912,"endOffset":19924,"count":0},{"startOffset":19997,"endOffset":20009,"count":2},{"startOffset":20009,"endOffset":20068,"count":35},{"startOffset":20070,"endOffset":20330,"count":32},{"startOffset":20121,"endOffset":20155,"count":0},{"startOffset":20251,"endOffset":20312,"count":0},{"startOffset":20330,"endOffset":21031,"count":3},{"startOffset":20449,"endOffset":20588,"count":7},{"startOffset":20486,"endOffset":20518,"count":4},{"startOffset":20520,"endOffset":20578,"count":3},{"startOffset":20626,"endOffset":20638,"count":0},{"startOffset":20691,"endOffset":20852,"count":0},{"startOffset":20895,"endOffset":20918,"count":2},{"startOffset":20979,"endOffset":21023,"count":0},{"startOffset":21031,"endOffset":21056,"count":35}],"isBlockCoverage":true},{"functionName":"_listeners","ranges":[{"startOffset":22706,"endOffset":23101,"count":22},{"startOffset":22816,"endOffset":22826,"count":5},{"startOffset":22826,"endOffset":22899,"count":17},{"startOffset":22899,"endOffset":22909,"count":0},{"startOffset":22909,"endOffset":23022,"count":17},{"startOffset":23007,"endOffset":23021,"count":0},{"startOffset":23022,"endOffset":23073,"count":0},{"startOffset":23074,"endOffset":23098,"count":0}],"isBlockCoverage":true},{"functionName":"listeners","ranges":[{"startOffset":23291,"endOffset":23358,"count":22}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24297,"endOffset":25002,"count":86},{"startOffset":24398,"endOffset":24987,"count":66},{"startOffset":24480,"endOffset":24626,"count":31},{"startOffset":24510,"endOffset":24603,"count":0},{"startOffset":24626,"endOffset":24983,"count":35},{"startOffset":24662,"endOffset":24983,"count":0},{"startOffset":24987,"endOffset":25001,"count":55}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":25254,"endOffset":25727,"count":54},{"startOffset":25426,"endOffset":25458,"count":38},{"startOffset":25463,"endOffset":25503,"count":16},{"startOffset":25508,"endOffset":25556,"count":0},{"startOffset":25561,"endOffset":25617,"count":0},{"startOffset":25622,"endOffset":25686,"count":0},{"startOffset":25690,"endOffset":25726,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4084,"endOffset":4243,"count":33}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4259,"endOffset":4381,"count":174}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8273,"endOffset":8301,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8559,"endOffset":9524,"count":35}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11471,"endOffset":11626,"count":322},{"startOffset":11557,"endOffset":11624,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":11729,"endOffset":11974,"count":1},{"startOffset":11813,"endOffset":11826,"count":0},{"startOffset":11827,"endOffset":11838,"count":0},{"startOffset":11840,"endOffset":11941,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":12153,"endOffset":12228,"count":239}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12469,"endOffset":12558,"count":82}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":12858,"endOffset":13190,"count":239},{"startOffset":12901,"endOffset":12935,"count":1},{"startOffset":12935,"endOffset":12974,"count":238},{"startOffset":12974,"endOffset":13153,"count":154},{"startOffset":13022,"endOffset":13035,"count":30},{"startOffset":13153,"endOffset":13189,"count":84}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13192,"endOffset":13738,"count":29}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13740,"endOffset":14193,"count":29}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14195,"endOffset":14892,"count":6},{"startOffset":14339,"endOffset":14435,"count":0},{"startOffset":14512,"endOffset":14557,"count":0},{"startOffset":14616,"endOffset":14839,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":15635,"endOffset":15689,"count":5}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":16057,"endOffset":16208,"count":238}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":17424,"endOffset":17692,"count":20},{"startOffset":17546,"endOffset":17554,"count":14},{"startOffset":17630,"endOffset":17638,"count":6}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17827,"endOffset":17891,"count":5}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17904,"endOffset":17950,"count":256}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19282,"endOffset":19307,"count":4}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19320,"endOffset":19385,"count":4}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19769,"endOffset":19820,"count":20}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19833,"endOffset":19899,"count":11}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21219,"endOffset":23043,"count":280},{"startOffset":21306,"endOffset":21605,"count":255},{"startOffset":21369,"endOffset":21605,"count":0},{"startOffset":21610,"endOffset":22029,"count":5},{"startOffset":21650,"endOffset":21674,"count":1},{"startOffset":21674,"endOffset":21732,"count":4},{"startOffset":21732,"endOffset":22029,"count":0},{"startOffset":22034,"endOffset":22188,"count":0},{"startOffset":22193,"endOffset":22349,"count":0},{"startOffset":22354,"endOffset":22735,"count":20},{"startOffset":22428,"endOffset":22454,"count":0},{"startOffset":22514,"endOffset":22626,"count":0},{"startOffset":22636,"endOffset":22735,"count":0},{"startOffset":22740,"endOffset":22872,"count":0},{"startOffset":22877,"endOffset":23037,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24447,"endOffset":25026,"count":256},{"startOffset":24519,"endOffset":24567,"count":0},{"startOffset":24619,"endOffset":24629,"count":0},{"startOffset":24659,"endOffset":24669,"count":0},{"startOffset":24718,"endOffset":24730,"count":0},{"startOffset":24746,"endOffset":24767,"count":0},{"startOffset":24793,"endOffset":24803,"count":0},{"startOffset":24839,"endOffset":24873,"count":0},{"startOffset":24944,"endOffset":24985,"count":0}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":382}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29764,"endOffset":30013,"count":33}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30291,"endOffset":30427,"count":199}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30682,"endOffset":30754,"count":1}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:internal/worker/js_transferable","functions":[{"functionName":"makeTransferable","ranges":[{"startOffset":1313,"endOffset":1968,"count":1},{"startOffset":1442,"endOffset":1453,"count":0},{"startOffset":1688,"endOffset":1850,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1323,"endOffset":1791,"count":1}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7593,"endOffset":11695,"count":1},{"startOffset":7881,"endOffset":8172,"count":153},{"startOffset":7933,"endOffset":8168,"count":120},{"startOffset":8030,"endOffset":8162,"count":59},{"startOffset":8640,"endOffset":9062,"count":22},{"startOffset":8694,"endOffset":9058,"count":10},{"startOffset":8783,"endOffset":8852,"count":2},{"startOffset":8917,"endOffset":8986,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8176,"endOffset":8588,"count":28},{"startOffset":8246,"endOffset":8260,"count":27},{"startOffset":8262,"endOffset":8274,"count":2},{"startOffset":8274,"endOffset":8351,"count":26},{"startOffset":8351,"endOffset":8520,"count":2},{"startOffset":8401,"endOffset":8448,"count":1},{"startOffset":8520,"endOffset":8587,"count":24}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9096,"endOffset":9158,"count":189}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9468,"endOffset":9544,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":9550,"endOffset":9619,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":9625,"endOffset":9698,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9704,"endOffset":9756,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":9762,"endOffset":10577,"count":1},{"startOffset":10488,"endOffset":10576,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":10583,"endOffset":10748,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":10754,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":10937,"endOffset":10998,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11004,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11885,"endOffset":12215,"count":1},{"startOffset":11965,"endOffset":12140,"count":0},{"startOffset":12172,"endOffset":12213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":52},{"startOffset":1135,"endOffset":1138,"count":26},{"startOffset":1139,"endOffset":1142,"count":26}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":26},{"startOffset":1748,"endOffset":1781,"count":0},{"startOffset":1914,"endOffset":1956,"count":0},{"startOffset":1969,"endOffset":2020,"count":0},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":26},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":0},{"startOffset":2785,"endOffset":2836,"count":0},{"startOffset":2841,"endOffset":2906,"count":0},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2119,"endOffset":2209,"count":26},{"startOffset":2199,"endOffset":2202,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6636,"endOffset":9797,"count":26},{"startOffset":6794,"endOffset":6973,"count":0},{"startOffset":7038,"endOffset":9701,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":104}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":26}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":26}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":52},{"startOffset":3388,"endOffset":3509,"count":26}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":52}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":26},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":52},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1832,"endOffset":1857,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2355,"endOffset":3539,"count":7},{"startOffset":2408,"endOffset":2415,"count":0},{"startOffset":2475,"endOffset":2521,"count":0},{"startOffset":2612,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2691,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4241,"endOffset":4898,"count":7},{"startOffset":4408,"endOffset":4415,"count":0},{"startOffset":4445,"endOffset":4486,"count":0},{"startOffset":4491,"endOffset":4538,"count":0},{"startOffset":4543,"endOffset":4764,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5218,"endOffset":5584,"count":44},{"startOffset":5261,"endOffset":5280,"count":7},{"startOffset":5282,"endOffset":5349,"count":7},{"startOffset":5349,"endOffset":5410,"count":37},{"startOffset":5412,"endOffset":5582,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7516,"endOffset":8069,"count":109},{"startOffset":7703,"endOffset":7744,"count":0},{"startOffset":7749,"endOffset":7796,"count":0},{"startOffset":7801,"endOffset":8022,"count":0}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":702,"endOffset":1032,"count":1},{"startOffset":763,"endOffset":1030,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":247508}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":2711},{"startOffset":2354,"endOffset":4069,"count":247373},{"startOffset":2387,"endOffset":2429,"count":244662},{"startOffset":2429,"endOffset":2520,"count":2711},{"startOffset":2472,"endOffset":2478,"count":2576},{"startOffset":2478,"endOffset":2520,"count":135},{"startOffset":2520,"endOffset":2553,"count":244797},{"startOffset":2553,"endOffset":3970,"count":31640},{"startOffset":2585,"endOffset":2598,"count":28164},{"startOffset":2600,"endOffset":2625,"count":3691},{"startOffset":2625,"endOffset":3927,"count":27949},{"startOffset":2647,"endOffset":3682,"count":62},{"startOffset":2676,"endOffset":2702,"count":34},{"startOffset":2703,"endOffset":2777,"count":1},{"startOffset":2778,"endOffset":2852,"count":1},{"startOffset":2854,"endOffset":3542,"count":61},{"startOffset":2886,"endOffset":3363,"count":33},{"startOffset":3006,"endOffset":3082,"count":0},{"startOffset":3363,"endOffset":3532,"count":28},{"startOffset":3391,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3674,"count":29},{"startOffset":3605,"endOffset":3623,"count":1},{"startOffset":3624,"endOffset":3630,"count":28},{"startOffset":3682,"endOffset":3927,"count":27887},{"startOffset":3728,"endOffset":3797,"count":25204},{"startOffset":3797,"endOffset":3872,"count":2683},{"startOffset":3927,"endOffset":3970,"count":31607},{"startOffset":3970,"endOffset":4065,"count":213157},{"startOffset":3998,"endOffset":4012,"count":6143},{"startOffset":4014,"endOffset":4035,"count":384},{"startOffset":4035,"endOffset":4065,"count":212773}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33668,"endOffset":33687,"count":6}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33812,"endOffset":34735,"count":2576},{"startOffset":33935,"endOffset":33955,"count":6768},{"startOffset":33962,"endOffset":34289,"count":4198},{"startOffset":33990,"endOffset":33999,"count":4192},{"startOffset":34000,"endOffset":34012,"count":6},{"startOffset":34115,"endOffset":34142,"count":2},{"startOffset":34142,"endOffset":34289,"count":4196},{"startOffset":34674,"endOffset":34724,"count":0},{"startOffset":34725,"endOffset":34730,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34801,"endOffset":35414,"count":135},{"startOffset":34887,"endOffset":34898,"count":0},{"startOffset":35226,"endOffset":35320,"count":0},{"startOffset":35354,"endOffset":35366,"count":0},{"startOffset":35390,"endOffset":35402,"count":1},{"startOffset":35403,"endOffset":35409,"count":134}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35481,"endOffset":35637,"count":382}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":35706,"endOffset":36120,"count":5},{"startOffset":35755,"endOffset":35766,"count":0},{"startOffset":35825,"endOffset":36032,"count":10},{"startOffset":35961,"endOffset":36018,"count":5},{"startOffset":36069,"endOffset":36080,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":36210,"endOffset":38570,"count":1},{"startOffset":36323,"endOffset":36333,"count":0},{"startOffset":36460,"endOffset":36470,"count":0},{"startOffset":36743,"endOffset":36750,"count":0},{"startOffset":36978,"endOffset":37053,"count":0},{"startOffset":37082,"endOffset":38044,"count":0},{"startOffset":38222,"endOffset":38383,"count":55},{"startOffset":38248,"endOffset":38318,"count":54},{"startOffset":38320,"endOffset":38377,"count":5},{"startOffset":38354,"endOffset":38360,"count":1},{"startOffset":38361,"endOffset":38368,"count":4}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38636,"endOffset":38712,"count":2401}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38778,"endOffset":39454,"count":701},{"startOffset":38861,"endOffset":38872,"count":0},{"startOffset":39046,"endOffset":39299,"count":7104},{"startOffset":39117,"endOffset":39201,"count":700},{"startOffset":39201,"endOffset":39293,"count":6404},{"startOffset":39327,"endOffset":39354,"count":1},{"startOffset":39348,"endOffset":39353,"count":0},{"startOffset":39354,"endOffset":39383,"count":700},{"startOffset":39391,"endOffset":39403,"count":0},{"startOffset":39403,"endOffset":39453,"count":700}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":39550,"endOffset":41977,"count":184},{"startOffset":39611,"endOffset":39641,"count":0},{"startOffset":39773,"endOffset":39793,"count":0},{"startOffset":39794,"endOffset":39825,"count":0},{"startOffset":39827,"endOffset":41351,"count":0},{"startOffset":41399,"endOffset":41884,"count":1912},{"startOffset":41470,"endOffset":41694,"count":184},{"startOffset":41694,"endOffset":41878,"count":1728},{"startOffset":41716,"endOffset":41878,"count":184},{"startOffset":41912,"endOffset":41922,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42043,"endOffset":43733,"count":6},{"startOffset":42376,"endOffset":43338,"count":70},{"startOffset":42472,"endOffset":42718,"count":6},{"startOffset":42692,"endOffset":42718,"count":0},{"startOffset":42718,"endOffset":42741,"count":64},{"startOffset":42741,"endOffset":42898,"count":6},{"startOffset":42898,"endOffset":42928,"count":64},{"startOffset":42928,"endOffset":43128,"count":5},{"startOffset":43057,"endOffset":43120,"count":0},{"startOffset":43128,"endOffset":43332,"count":59},{"startOffset":43155,"endOffset":43332,"count":44},{"startOffset":43364,"endOffset":43385,"count":5},{"startOffset":43386,"endOffset":43479,"count":5},{"startOffset":43480,"endOffset":43649,"count":5},{"startOffset":43577,"endOffset":43609,"count":0},{"startOffset":43610,"endOffset":43648,"count":0},{"startOffset":43651,"endOffset":43675,"count":1},{"startOffset":43675,"endOffset":43732,"count":5}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":43960,"endOffset":46432,"count":2},{"startOffset":44110,"endOffset":44121,"count":0},{"startOffset":44291,"endOffset":44321,"count":0},{"startOffset":44641,"endOffset":45603,"count":38},{"startOffset":44737,"endOffset":44983,"count":2},{"startOffset":44957,"endOffset":44983,"count":0},{"startOffset":44983,"endOffset":45006,"count":36},{"startOffset":45006,"endOffset":45163,"count":2},{"startOffset":45163,"endOffset":45193,"count":36},{"startOffset":45193,"endOffset":45393,"count":0},{"startOffset":45393,"endOffset":45597,"count":36},{"startOffset":45420,"endOffset":45597,"count":0},{"startOffset":45663,"endOffset":45676,"count":0},{"startOffset":45677,"endOffset":45680,"count":0},{"startOffset":45720,"endOffset":45817,"count":0},{"startOffset":45818,"endOffset":45993,"count":0},{"startOffset":46074,"endOffset":46273,"count":0},{"startOffset":46365,"endOffset":46411,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"node:internal/vm","functions":[{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":1761,"endOffset":2126,"count":176}],"isBlockCoverage":true},{"functionName":"internalCompileFunction","ranges":[{"startOffset":2128,"endOffset":3011,"count":176},{"startOffset":2574,"endOffset":2647,"count":0},{"startOffset":2674,"endOffset":2731,"count":0},{"startOffset":2787,"endOffset":2860,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":620,"endOffset":645,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1859,"endOffset":1922,"count":104}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1924,"endOffset":2466,"count":1},{"startOffset":2032,"endOffset":2187,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2468,"endOffset":3068,"count":73},{"startOffset":2770,"endOffset":2803,"count":0},{"startOffset":2856,"endOffset":2992,"count":0},{"startOffset":2994,"endOffset":3067,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":3070,"endOffset":3513,"count":82},{"startOffset":3391,"endOffset":3419,"count":51},{"startOffset":3445,"endOffset":3467,"count":31},{"startOffset":3467,"endOffset":3512,"count":51}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3515,"endOffset":5217,"count":104},{"startOffset":3717,"endOffset":3737,"count":0},{"startOffset":3740,"endOffset":3747,"count":0},{"startOffset":3881,"endOffset":4005,"count":0},{"startOffset":4041,"endOffset":4107,"count":82},{"startOffset":4196,"endOffset":4213,"count":31},{"startOffset":4213,"endOffset":4385,"count":73},{"startOffset":4386,"endOffset":4400,"count":0},{"startOffset":4427,"endOffset":4589,"count":0},{"startOffset":4589,"endOffset":5215,"count":73},{"startOffset":4618,"endOffset":4861,"count":0},{"startOffset":5157,"endOffset":5211,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5749,"endOffset":6269,"count":73},{"startOffset":5886,"endOffset":5961,"count":18},{"startOffset":5968,"endOffset":6048,"count":0},{"startOffset":6059,"endOffset":6267,"count":55}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6459,"endOffset":6804,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6761,"endOffset":6800,"count":13045}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6806,"endOffset":7086,"count":55},{"startOffset":7034,"endOffset":7084,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":7180,"endOffset":7851,"count":18},{"startOffset":7583,"endOffset":7589,"count":0},{"startOffset":7711,"endOffset":7767,"count":0},{"startOffset":7771,"endOffset":7849,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8036,"endOffset":8363,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8114,"endOffset":8220,"count":118}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3902,"endOffset":4691,"count":2202}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4470,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4539,"endOffset":4614,"count":2573}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4618,"endOffset":4689,"count":2573}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":17719,"endOffset":17814,"count":8531}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":17830,"endOffset":18256,"count":2202},{"startOffset":17901,"endOffset":17949,"count":0},{"startOffset":18076,"endOffset":18107,"count":1016},{"startOffset":18173,"endOffset":18220,"count":287},{"startOffset":18220,"endOffset":18255,"count":1915}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":19117,"endOffset":20056,"count":2291},{"startOffset":19853,"endOffset":20052,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20060,"endOffset":20170,"count":663},{"startOffset":20101,"endOffset":20135,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":20174,"endOffset":20284,"count":657},{"startOffset":20215,"endOffset":20249,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":21505,"endOffset":21672,"count":1738},{"startOffset":21550,"endOffset":21584,"count":0}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":23653,"endOffset":23989,"count":801},{"startOffset":23698,"endOffset":23732,"count":0},{"startOffset":23893,"endOffset":23918,"count":0}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":24640,"endOffset":24966,"count":2385},{"startOffset":24685,"endOffset":24719,"count":0},{"startOffset":24790,"endOffset":24830,"count":0},{"startOffset":24853,"endOffset":24891,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":25210,"endOffset":25569,"count":188},{"startOffset":25253,"endOffset":25287,"count":0},{"startOffset":25357,"endOffset":25568,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":25573,"endOffset":25813,"count":188},{"startOffset":25621,"endOffset":25655,"count":0}],"isBlockCoverage":true},{"functionName":"get hash","ranges":[{"startOffset":26175,"endOffset":26434,"count":188},{"startOffset":26216,"endOffset":26250,"count":0},{"startOffset":26303,"endOffset":26345,"count":0},{"startOffset":26371,"endOffset":26433,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":26438,"endOffset":26666,"count":188},{"startOffset":26484,"endOffset":26518,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":39509,"endOffset":40030,"count":801},{"startOffset":39572,"endOffset":39628,"count":0},{"startOffset":39706,"endOffset":39989,"count":78785},{"startOffset":39737,"endOffset":39985,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":40032,"endOffset":40371,"count":801},{"startOffset":40099,"endOffset":40120,"count":55},{"startOffset":40120,"endOffset":40214,"count":746},{"startOffset":40150,"endOffset":40214,"count":0},{"startOffset":40252,"endOffset":40293,"count":0},{"startOffset":40313,"endOffset":40340,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":41184,"endOffset":41960,"count":338},{"startOffset":41277,"endOffset":41348,"count":0},{"startOffset":41476,"endOffset":41549,"count":0},{"startOffset":41607,"endOffset":41678,"count":0},{"startOffset":41736,"endOffset":41814,"count":0},{"startOffset":41872,"endOffset":41939,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":41962,"endOffset":43939,"count":338},{"startOffset":42013,"endOffset":42059,"count":0},{"startOffset":42061,"endOffset":42826,"count":0},{"startOffset":43129,"endOffset":43168,"count":0},{"startOffset":43171,"endOffset":43222,"count":0},{"startOffset":43228,"endOffset":43244,"count":0},{"startOffset":43700,"endOffset":43772,"count":0},{"startOffset":43829,"endOffset":43897,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":43941,"endOffset":44078,"count":789},{"startOffset":44016,"endOffset":44037,"count":703},{"startOffset":44037,"endOffset":44077,"count":86}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:internal/bootstrap/browser","functions":[{"functionName":"","ranges":[{"startOffset":781,"endOffset":1010,"count":1}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1891,"endOffset":1991,"count":32}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5848,"endOffset":6493,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6057,"endOffset":6152,"count":96},{"startOffset":6090,"endOffset":6113,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6164,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6324,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6435,"endOffset":6465,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6585,"endOffset":7993,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":8085,"endOffset":9537,"count":32},{"startOffset":8311,"endOffset":8325,"count":0},{"startOffset":8399,"endOffset":8425,"count":0},{"startOffset":8464,"endOffset":8659,"count":0},{"startOffset":8717,"endOffset":8745,"count":0},{"startOffset":9102,"endOffset":9129,"count":7},{"startOffset":9183,"endOffset":9467,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9632,"endOffset":10042,"count":32},{"startOffset":9846,"endOffset":9967,"count":0},{"startOffset":9988,"endOffset":10010,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10135,"endOffset":10315,"count":32}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10678,"endOffset":11567,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10746,"endOffset":11564,"count":32},{"startOffset":11016,"endOffset":11034,"count":0},{"startOffset":11509,"endOffset":11554,"count":26}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11596,"endOffset":11683,"count":32}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20440,"endOffset":21479,"count":1},{"startOffset":20808,"endOffset":21478,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21374,"endOffset":21475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":12561,"endOffset":12745,"count":1}],"isBlockCoverage":true},{"functionName":"EventTarget","ranges":[{"startOffset":12988,"endOffset":13034,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":28495,"endOffset":29689,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":28679,"endOffset":28750,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28756,"endOffset":29634,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":29717,"endOffset":30407,"count":1},{"startOffset":30148,"endOffset":30310,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":29786,"endOffset":29927,"count":82}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2369,"endOffset":2489,"count":69}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":5909,"endOffset":6547,"count":22},{"startOffset":5994,"endOffset":6051,"count":0},{"startOffset":6110,"endOffset":6177,"count":0},{"startOffset":6220,"endOffset":6350,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10340,"endOffset":10433,"count":23}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10437,"endOffset":10538,"count":23}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10542,"endOffset":10603,"count":23}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1423,"endOffset":3025,"count":2},{"startOffset":1575,"endOffset":1709,"count":0},{"startOffset":1715,"endOffset":1909,"count":0},{"startOffset":2216,"endOffset":2244,"count":0},{"startOffset":2246,"endOffset":2467,"count":0},{"startOffset":2650,"endOffset":2904,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2840,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3638,"endOffset":3729,"count":2},{"startOffset":3692,"endOffset":3727,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3731,"endOffset":4423,"count":4},{"startOffset":3768,"endOffset":3782,"count":3},{"startOffset":3782,"endOffset":4016,"count":1},{"startOffset":4016,"endOffset":4074,"count":0},{"startOffset":4074,"endOffset":4422,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4089,"endOffset":4267,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4425,"endOffset":5116,"count":15},{"startOffset":4462,"endOffset":4476,"count":14},{"startOffset":4476,"endOffset":4710,"count":1},{"startOffset":4710,"endOffset":4768,"count":0},{"startOffset":4768,"endOffset":5115,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4782,"endOffset":4960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":370,"endOffset":531,"count":974}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":725,"endOffset":898,"count":1},{"startOffset":804,"endOffset":896,"count":0}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":4}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":4}],"isBlockCoverage":false}]},{"scriptId":"59","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5280,"endOffset":5540,"count":5680},{"startOffset":5479,"endOffset":5499,"count":440}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7707,"endOffset":8237,"count":1},{"startOffset":7782,"endOffset":7811,"count":0},{"startOffset":8119,"endOffset":8145,"count":0},{"startOffset":8147,"endOffset":8200,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10866,"endOffset":11096,"count":238},{"startOffset":11009,"endOffset":11021,"count":0},{"startOffset":11023,"endOffset":11078,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":11098,"endOffset":11409,"count":238},{"startOffset":11216,"endOffset":11268,"count":0},{"startOffset":11355,"endOffset":11367,"count":0},{"startOffset":11369,"endOffset":11386,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11411,"endOffset":11666,"count":238},{"startOffset":11609,"endOffset":11621,"count":0},{"startOffset":11623,"endOffset":11640,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11890,"endOffset":13288,"count":238},{"startOffset":12059,"endOffset":12065,"count":0},{"startOffset":12205,"endOffset":12208,"count":0},{"startOffset":12338,"endOffset":12361,"count":0},{"startOffset":12613,"endOffset":12982,"count":0},{"startOffset":13042,"endOffset":13138,"count":0},{"startOffset":13160,"endOffset":13200,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13833,"endOffset":13973,"count":238}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14965,"endOffset":15361,"count":238}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":18030,"endOffset":19031,"count":238},{"startOffset":18172,"endOffset":18378,"count":0},{"startOffset":18402,"endOffset":18423,"count":0},{"startOffset":18514,"endOffset":18533,"count":0},{"startOffset":18566,"endOffset":18696,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":39178,"endOffset":39781,"count":3},{"startOffset":39315,"endOffset":39381,"count":0},{"startOffset":39408,"endOffset":39461,"count":0},{"startOffset":39743,"endOffset":39769,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":43646,"endOffset":44067,"count":44},{"startOffset":43945,"endOffset":43968,"count":0},{"startOffset":43970,"endOffset":43997,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":68437,"endOffset":68647,"count":267},{"startOffset":68504,"endOffset":68627,"count":534},{"startOffset":68582,"endOffset":68621,"count":267},{"startOffset":68627,"endOffset":68646,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":68652,"endOffset":68939,"count":266},{"startOffset":68737,"endOffset":68767,"count":0},{"startOffset":68787,"endOffset":68938,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":69345,"endOffset":69420,"count":2941}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":69594,"endOffset":73506,"count":417},{"startOffset":69718,"endOffset":69736,"count":0},{"startOffset":69897,"endOffset":69932,"count":151},{"startOffset":69932,"endOffset":70494,"count":266},{"startOffset":70494,"endOffset":70666,"count":0},{"startOffset":70666,"endOffset":70803,"count":266},{"startOffset":70803,"endOffset":73433,"count":2941},{"startOffset":70915,"endOffset":71046,"count":267},{"startOffset":71046,"endOffset":71204,"count":2674},{"startOffset":71291,"endOffset":71319,"count":2932},{"startOffset":71321,"endOffset":71474,"count":2501},{"startOffset":71428,"endOffset":71452,"count":0},{"startOffset":71474,"endOffset":71540,"count":440},{"startOffset":71577,"endOffset":71626,"count":0},{"startOffset":71626,"endOffset":72930,"count":440},{"startOffset":71978,"endOffset":72066,"count":439},{"startOffset":72066,"endOffset":72487,"count":1},{"startOffset":72426,"endOffset":72479,"count":0},{"startOffset":72487,"endOffset":72850,"count":1},{"startOffset":72894,"endOffset":72924,"count":1},{"startOffset":72930,"endOffset":73222,"count":1},{"startOffset":73222,"endOffset":73245,"count":0},{"startOffset":73247,"endOffset":73429,"count":0},{"startOffset":73433,"endOffset":73447,"count":266}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":82417,"endOffset":82608,"count":104},{"startOffset":82465,"endOffset":82606,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":84814,"endOffset":84882,"count":26}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":84939,"endOffset":85009,"count":26}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":85201,"endOffset":85277,"count":26}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":85342,"endOffset":85420,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":86115,"endOffset":86211,"count":26}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3590,"endOffset":3790,"count":655},{"startOffset":3641,"endOffset":3672,"count":238},{"startOffset":3674,"endOffset":3788,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7755,"endOffset":8381,"count":740},{"startOffset":7839,"endOffset":7871,"count":655},{"startOffset":7873,"endOffset":7905,"count":85},{"startOffset":7905,"endOffset":7942,"count":655},{"startOffset":7942,"endOffset":8060,"count":238},{"startOffset":8060,"endOffset":8182,"count":417},{"startOffset":8099,"endOffset":8182,"count":0},{"startOffset":8182,"endOffset":8296,"count":655},{"startOffset":8296,"endOffset":8360,"count":0},{"startOffset":8360,"endOffset":8380,"count":655}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8439,"endOffset":8968,"count":1203},{"startOffset":8509,"endOffset":8644,"count":36},{"startOffset":8644,"endOffset":8676,"count":1167},{"startOffset":8676,"endOffset":8966,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9109,"endOffset":9699,"count":785},{"startOffset":9339,"endOffset":9359,"count":0},{"startOffset":9429,"endOffset":9497,"count":0},{"startOffset":9516,"endOffset":9698,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":10442,"endOffset":10749,"count":8}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10785,"endOffset":10842,"count":5}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10874,"endOffset":10931,"count":7}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11530,"endOffset":11612,"count":32}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":12099,"endOffset":12210,"count":32}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":13382,"endOffset":13924,"count":8}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":14265,"endOffset":14495,"count":12},{"startOffset":14302,"endOffset":14380,"count":0},{"startOffset":14382,"endOffset":14449,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14613,"endOffset":15692,"count":8},{"startOffset":14693,"endOffset":15219,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":16094,"endOffset":17350,"count":320},{"startOffset":16175,"endOffset":16230,"count":0},{"startOffset":16253,"endOffset":16279,"count":0},{"startOffset":16336,"endOffset":16347,"count":0},{"startOffset":16369,"endOffset":16406,"count":0},{"startOffset":16411,"endOffset":16437,"count":0},{"startOffset":16442,"endOffset":16454,"count":0},{"startOffset":16476,"endOffset":16512,"count":0},{"startOffset":16518,"endOffset":16565,"count":0},{"startOffset":16570,"endOffset":16581,"count":0},{"startOffset":16603,"endOffset":16660,"count":0},{"startOffset":16666,"endOffset":16712,"count":0},{"startOffset":16717,"endOffset":16728,"count":0},{"startOffset":16750,"endOffset":16805,"count":0},{"startOffset":16811,"endOffset":16859,"count":0},{"startOffset":16864,"endOffset":16875,"count":0},{"startOffset":16897,"endOffset":16955,"count":0},{"startOffset":16960,"endOffset":16971,"count":0},{"startOffset":16993,"endOffset":17051,"count":0},{"startOffset":17057,"endOffset":17104,"count":0},{"startOffset":17109,"endOffset":17120,"count":0},{"startOffset":17142,"endOffset":17198,"count":0},{"startOffset":17203,"endOffset":17214,"count":0},{"startOffset":17236,"endOffset":17292,"count":0},{"startOffset":17296,"endOffset":17349,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18327,"endOffset":18706,"count":238},{"startOffset":18383,"endOffset":18450,"count":0},{"startOffset":18471,"endOffset":18538,"count":0},{"startOffset":18579,"endOffset":18702,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19212,"endOffset":19482,"count":785},{"startOffset":19274,"endOffset":19296,"count":0},{"startOffset":19298,"endOffset":19384,"count":0},{"startOffset":19460,"endOffset":19480,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19527,"endOffset":19662,"count":368}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19705,"endOffset":19826,"count":476},{"startOffset":19756,"endOffset":19775,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25531,"endOffset":26001,"count":238},{"startOffset":25631,"endOffset":25999,"count":0}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:url","functions":[{"functionName":"pathToFileURL","ranges":[{"startOffset":31795,"endOffset":31891,"count":4}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2204,"endOffset":2273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3441,"endOffset":3532,"count":1},{"startOffset":3488,"endOffset":3524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3581,"endOffset":3624,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3665,"endOffset":3719,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":5161,"endOffset":5575,"count":1207},{"startOffset":5259,"endOffset":5357,"count":1194},{"startOffset":5335,"endOffset":5353,"count":271},{"startOffset":5357,"endOffset":5430,"count":936},{"startOffset":5430,"endOffset":5444,"count":923},{"startOffset":5446,"endOffset":5556,"count":265},{"startOffset":5556,"endOffset":5574,"count":936}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":6066,"endOffset":6268,"count":370},{"startOffset":6138,"endOffset":6148,"count":360},{"startOffset":6165,"endOffset":6218,"count":360},{"startOffset":6175,"endOffset":6217,"count":186},{"startOffset":6220,"endOffset":6266,"count":349}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":6385,"endOffset":6541,"count":655},{"startOffset":6466,"endOffset":6481,"count":0},{"startOffset":6483,"endOffset":6539,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":6725,"endOffset":6964,"count":37},{"startOffset":6826,"endOffset":6841,"count":0},{"startOffset":6843,"endOffset":6962,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6911,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":7135,"endOffset":7892,"count":180},{"startOffset":7448,"endOffset":7458,"count":0},{"startOffset":7476,"endOffset":7840,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9854,"endOffset":9879,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":10599,"endOffset":11099,"count":1}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":11983,"endOffset":13262,"count":85},{"startOffset":12105,"endOffset":12186,"count":34},{"startOffset":12186,"endOffset":12280,"count":51},{"startOffset":12280,"endOffset":12324,"count":6},{"startOffset":12325,"endOffset":12392,"count":1},{"startOffset":12418,"endOffset":13243,"count":0},{"startOffset":13243,"endOffset":13261,"count":51}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":13571,"endOffset":13807,"count":584},{"startOffset":13660,"endOffset":13671,"count":376},{"startOffset":13671,"endOffset":13716,"count":208},{"startOffset":13716,"endOffset":13726,"count":0},{"startOffset":13728,"endOffset":13771,"count":0},{"startOffset":13771,"endOffset":13806,"count":208}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14072,"endOffset":14292,"count":276},{"startOffset":14161,"endOffset":14274,"count":523},{"startOffset":14240,"endOffset":14270,"count":153},{"startOffset":14274,"endOffset":14291,"count":123}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14476,"endOffset":14952,"count":180},{"startOffset":14700,"endOffset":14934,"count":179},{"startOffset":14751,"endOffset":14764,"count":0},{"startOffset":14902,"endOffset":14930,"count":172},{"startOffset":14934,"endOffset":14951,"count":8}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":15075,"endOffset":15368,"count":268},{"startOffset":15127,"endOffset":15144,"count":5},{"startOffset":15144,"endOffset":15202,"count":263},{"startOffset":15202,"endOffset":15366,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":15576,"endOffset":16504,"count":268},{"startOffset":15635,"endOffset":15652,"count":5},{"startOffset":15652,"endOffset":15774,"count":263},{"startOffset":15775,"endOffset":15800,"count":40},{"startOffset":15802,"endOffset":15825,"count":223},{"startOffset":15825,"endOffset":15872,"count":40},{"startOffset":15872,"endOffset":15898,"count":0},{"startOffset":15898,"endOffset":16064,"count":40},{"startOffset":15960,"endOffset":16035,"count":0},{"startOffset":16064,"endOffset":16502,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":16852,"endOffset":17670,"count":260},{"startOffset":17059,"endOffset":17074,"count":130},{"startOffset":17089,"endOffset":17201,"count":130},{"startOffset":17201,"endOffset":17223,"count":93},{"startOffset":17225,"endOffset":17668,"count":10},{"startOffset":17505,"endOffset":17664,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":17963,"endOffset":21970,"count":269},{"startOffset":18073,"endOffset":18096,"count":6},{"startOffset":18096,"endOffset":18159,"count":263},{"startOffset":18136,"endOffset":18159,"count":0},{"startOffset":18292,"endOffset":18315,"count":39},{"startOffset":18315,"endOffset":18898,"count":230},{"startOffset":18537,"endOffset":18891,"count":0},{"startOffset":18973,"endOffset":19429,"count":130},{"startOffset":19079,"endOffset":19164,"count":28},{"startOffset":19099,"endOffset":19163,"count":0},{"startOffset":19165,"endOffset":19423,"count":28},{"startOffset":19334,"endOffset":19421,"count":0},{"startOffset":19474,"endOffset":19628,"count":130},{"startOffset":19591,"endOffset":19624,"count":28},{"startOffset":19628,"endOffset":19690,"count":230},{"startOffset":19690,"endOffset":21951,"count":401},{"startOffset":19822,"endOffset":19832,"count":373},{"startOffset":19833,"endOffset":19854,"count":368},{"startOffset":19856,"endOffset":19879,"count":136},{"startOffset":19879,"endOffset":19907,"count":265},{"startOffset":19907,"endOffset":20047,"count":260},{"startOffset":20000,"endOffset":20041,"count":10},{"startOffset":20047,"endOffset":21418,"count":255},{"startOffset":20199,"endOffset":21183,"count":20},{"startOffset":20232,"endOffset":20421,"count":19},{"startOffset":20287,"endOffset":20347,"count":0},{"startOffset":20421,"endOffset":21175,"count":1},{"startOffset":20475,"endOffset":21115,"count":0},{"startOffset":21206,"endOffset":21412,"count":235},{"startOffset":21286,"endOffset":21346,"count":204},{"startOffset":21418,"endOffset":21438,"count":255},{"startOffset":21438,"endOffset":21449,"count":122},{"startOffset":21451,"endOffset":21677,"count":85},{"startOffset":21553,"endOffset":21609,"count":0},{"startOffset":21677,"endOffset":21697,"count":255},{"startOffset":21697,"endOffset":21773,"count":218},{"startOffset":21773,"endOffset":21951,"count":37},{"startOffset":21951,"endOffset":21969,"count":2}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":24047,"endOffset":25235,"count":186},{"startOffset":24319,"endOffset":24358,"count":0},{"startOffset":24679,"endOffset":25113,"count":15929},{"startOffset":24775,"endOffset":24983,"count":1983},{"startOffset":24802,"endOffset":24942,"count":1622},{"startOffset":24983,"endOffset":25107,"count":13946},{"startOffset":25003,"endOffset":25107,"count":6017},{"startOffset":25038,"endOffset":25064,"count":4395},{"startOffset":25064,"endOffset":25099,"count":1622}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":25370,"endOffset":26657,"count":268},{"startOffset":25450,"endOffset":25516,"count":0},{"startOffset":25601,"endOffset":25800,"count":158},{"startOffset":25681,"endOffset":25731,"count":117},{"startOffset":25732,"endOffset":25799,"count":0},{"startOffset":25802,"endOffset":26129,"count":110},{"startOffset":25862,"endOffset":25877,"count":105},{"startOffset":25879,"endOffset":25989,"count":105},{"startOffset":25989,"endOffset":26029,"count":5},{"startOffset":26118,"endOffset":26124,"count":0},{"startOffset":26129,"endOffset":26197,"count":158},{"startOffset":26198,"endOffset":26217,"count":158},{"startOffset":26219,"endOffset":26468,"count":0},{"startOffset":26468,"endOffset":26656,"count":158}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":28113,"endOffset":28757,"count":1},{"startOffset":28282,"endOffset":28575,"count":0},{"startOffset":28577,"endOffset":28729,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":29423,"endOffset":32576,"count":480},{"startOffset":29506,"endOffset":30334,"count":475},{"startOffset":29965,"endOffset":30330,"count":100},{"startOffset":30145,"endOffset":30217,"count":0},{"startOffset":30262,"endOffset":30330,"count":0},{"startOffset":30334,"endOffset":30387,"count":380},{"startOffset":30387,"endOffset":30659,"count":0},{"startOffset":30659,"endOffset":30812,"count":380},{"startOffset":30812,"endOffset":31182,"count":90},{"startOffset":30892,"endOffset":31130,"count":6},{"startOffset":30988,"endOffset":31015,"count":5},{"startOffset":31017,"endOffset":31085,"count":1},{"startOffset":31085,"endOffset":31130,"count":5},{"startOffset":31130,"endOffset":31178,"count":84},{"startOffset":31182,"endOffset":31242,"count":293},{"startOffset":31242,"endOffset":31325,"count":113},{"startOffset":31325,"endOffset":31424,"count":180},{"startOffset":31424,"endOffset":31455,"count":175},{"startOffset":31472,"endOffset":31613,"count":1},{"startOffset":31613,"endOffset":31717,"count":180},{"startOffset":31717,"endOffset":31786,"count":176},{"startOffset":31786,"endOffset":32548,"count":180},{"startOffset":31891,"endOffset":32294,"count":0},{"startOffset":32476,"endOffset":32544,"count":0},{"startOffset":32548,"endOffset":32575,"count":180}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":33038,"endOffset":36174,"count":381},{"startOffset":33135,"endOffset":33160,"count":113},{"startOffset":33160,"endOffset":33210,"count":268},{"startOffset":33210,"endOffset":33229,"count":0},{"startOffset":33231,"endOffset":34324,"count":0},{"startOffset":34324,"endOffset":34419,"count":268},{"startOffset":34419,"endOffset":34467,"count":0},{"startOffset":34469,"endOffset":35111,"count":0},{"startOffset":35111,"endOffset":35272,"count":268},{"startOffset":35272,"endOffset":35468,"count":0},{"startOffset":35468,"endOffset":35608,"count":268},{"startOffset":35608,"endOffset":35628,"count":266},{"startOffset":35628,"endOffset":35740,"count":2},{"startOffset":35740,"endOffset":35813,"count":7},{"startOffset":35795,"endOffset":35807,"count":0},{"startOffset":35813,"endOffset":36173,"count":2}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":36601,"endOffset":37182,"count":10},{"startOffset":36799,"endOffset":36928,"count":0},{"startOffset":37047,"endOffset":37181,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":37831,"endOffset":38680,"count":180},{"startOffset":38166,"endOffset":38196,"count":0},{"startOffset":38198,"endOffset":38250,"count":0},{"startOffset":38530,"endOffset":38578,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":38967,"endOffset":39266,"count":475},{"startOffset":39027,"endOffset":39145,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":39792,"endOffset":42146,"count":176},{"startOffset":40177,"endOffset":40945,"count":0},{"startOffset":41808,"endOffset":41906,"count":22},{"startOffset":41940,"endOffset":42144,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":39909,"endOffset":40161,"count":4}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":42467,"endOffset":44293,"count":176},{"startOffset":42558,"endOffset":42568,"count":0},{"startOffset":42586,"endOffset":42739,"count":0},{"startOffset":42872,"endOffset":42896,"count":0},{"startOffset":42898,"endOffset":43634,"count":0},{"startOffset":43857,"endOffset":43887,"count":5},{"startOffset":43912,"endOffset":44051,"count":0},{"startOffset":44253,"endOffset":44274,"count":5}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":44471,"endOffset":46271,"count":176},{"startOffset":44632,"endOffset":44640,"count":5},{"startOffset":44642,"endOffset":44707,"count":5},{"startOffset":44707,"endOffset":44767,"count":171},{"startOffset":44816,"endOffset":46231,"count":168},{"startOffset":44879,"endOffset":44901,"count":0},{"startOffset":44997,"endOffset":46227,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":46453,"endOffset":46859,"count":4},{"startOffset":46563,"endOffset":46573,"count":0},{"startOffset":46591,"endOffset":46693,"count":0},{"startOffset":46776,"endOffset":46857,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":49087,"endOffset":50052,"count":1},{"startOffset":49128,"endOffset":49153,"count":0},{"startOffset":49205,"endOffset":49228,"count":0},{"startOffset":49436,"endOffset":49478,"count":0},{"startOffset":49777,"endOffset":49919,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1054,"endOffset":1079,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1548,"endOffset":1680,"count":229}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1796,"endOffset":2188,"count":1},{"startOffset":1975,"endOffset":1979,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2255,"endOffset":2382,"count":10},{"startOffset":2320,"endOffset":2356,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2609,"endOffset":2989,"count":117},{"startOffset":2698,"endOffset":2715,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3082,"endOffset":3195,"count":176},{"startOffset":3126,"endOffset":3174,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3784,"endOffset":6316,"count":176},{"startOffset":3923,"endOffset":3986,"count":0},{"startOffset":4053,"endOffset":5324,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4196,"endOffset":5319,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5346,"endOffset":5486,"count":475}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5672,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":5963,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6528,"endOffset":6683,"count":4},{"startOffset":6610,"endOffset":6663,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9045,"endOffset":9233,"count":108},{"startOffset":9152,"endOffset":9198,"count":26},{"startOffset":9198,"endOffset":9232,"count":82}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1053,"endOffset":3803,"count":1535},{"startOffset":1149,"endOffset":1186,"count":1374},{"startOffset":1186,"endOffset":1863,"count":161},{"startOffset":1863,"endOffset":1872,"count":0},{"startOffset":1873,"endOffset":1887,"count":0},{"startOffset":1888,"endOffset":1910,"count":161},{"startOffset":1934,"endOffset":3753,"count":87},{"startOffset":2002,"endOffset":2598,"count":0},{"startOffset":2756,"endOffset":2790,"count":85},{"startOffset":2792,"endOffset":2832,"count":85},{"startOffset":2888,"endOffset":2922,"count":59},{"startOffset":2924,"endOffset":2964,"count":59},{"startOffset":3024,"endOffset":3070,"count":14},{"startOffset":3130,"endOffset":3176,"count":1},{"startOffset":3287,"endOffset":3346,"count":12},{"startOffset":3318,"endOffset":3345,"count":10},{"startOffset":3348,"endOffset":3388,"count":12},{"startOffset":3422,"endOffset":3618,"count":1},{"startOffset":3543,"endOffset":3596,"count":0},{"startOffset":3646,"endOffset":3749,"count":0},{"startOffset":3753,"endOffset":3802,"count":161}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":3871,"endOffset":3961,"count":1100}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4178,"endOffset":4756,"count":432},{"startOffset":4313,"endOffset":4693,"count":885},{"startOffset":4514,"endOffset":4541,"count":0},{"startOffset":4612,"endOffset":4689,"count":432},{"startOffset":4693,"endOffset":4755,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":926,"endOffset":1032,"count":195}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1162,"endOffset":1277,"count":194}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1427,"endOffset":1809,"count":1},{"startOffset":1610,"endOffset":1614,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":1879,"endOffset":2238,"count":194},{"startOffset":1992,"endOffset":2200,"count":0}],"isBlockCoverage":true},{"functionName":"registerModule","ranges":[{"startOffset":3981,"endOffset":4524,"count":258},{"startOffset":4186,"endOffset":4399,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":5520,"endOffset":6035,"count":4},{"startOffset":5863,"endOffset":6034,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":6352,"endOffset":6728,"count":1}],"isBlockCoverage":true},{"functionName":"isLoaderWorker","ranges":[{"startOffset":6869,"endOffset":6924,"count":1}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":756,"endOffset":940,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1143,"endOffset":3296,"count":1},{"startOffset":2063,"endOffset":2167,"count":0},{"startOffset":3055,"endOffset":3217,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":3298,"endOffset":4033,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":4035,"endOffset":4463,"count":1},{"startOffset":4344,"endOffset":4361,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":4465,"endOffset":4521,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":4948,"endOffset":7392,"count":1},{"startOffset":6040,"endOffset":6092,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":7394,"endOffset":7675,"count":13},{"startOffset":7515,"endOffset":7673,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":7677,"endOffset":8197,"count":1},{"startOffset":8052,"endOffset":8191,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8081,"endOffset":8183,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":8233,"endOffset":9384,"count":1},{"startOffset":8364,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":8399,"endOffset":8544,"count":1},{"startOffset":8439,"endOffset":8467,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":8548,"endOffset":8643,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":8695,"endOffset":8936,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8796,"endOffset":8846,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8854,"endOffset":8924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9269,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":9490,"endOffset":9940,"count":1},{"startOffset":9651,"endOffset":9938,"count":0}],"isBlockCoverage":true},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":9942,"endOffset":10463,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":10571,"endOffset":10857,"count":1},{"startOffset":10736,"endOffset":10856,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":10859,"endOffset":11084,"count":1},{"startOffset":10961,"endOffset":11083,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":11086,"endOffset":11335,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11231,"endOffset":11326,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":11337,"endOffset":11568,"count":1},{"startOffset":11488,"endOffset":11566,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":11630,"endOffset":11818,"count":1},{"startOffset":11718,"endOffset":11816,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":11820,"endOffset":12401,"count":1},{"startOffset":11955,"endOffset":12399,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":12068,"endOffset":12129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12321,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":12403,"endOffset":12662,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":12664,"endOffset":12747,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":12749,"endOffset":13331,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":13526,"endOffset":15478,"count":1},{"startOffset":14238,"endOffset":14540,"count":16},{"startOffset":14283,"endOffset":14515,"count":0},{"startOffset":14857,"endOffset":15054,"count":0},{"startOffset":15082,"endOffset":15476,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":15480,"endOffset":16045,"count":1},{"startOffset":15556,"endOffset":16043,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":16047,"endOffset":16317,"count":1},{"startOffset":16134,"endOffset":16315,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":16319,"endOffset":18138,"count":1},{"startOffset":16447,"endOffset":18136,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":18140,"endOffset":18261,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":18263,"endOffset":18838,"count":1},{"startOffset":18591,"endOffset":18836,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":18840,"endOffset":19038,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":19040,"endOffset":19297,"count":1},{"startOffset":19125,"endOffset":19295,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":19299,"endOffset":19647,"count":1},{"startOffset":19493,"endOffset":19645,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":19649,"endOffset":19743,"count":1}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/vm/module","functions":[{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11660,"endOffset":12139,"count":176}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11765,"endOffset":12095,"count":4},{"startOffset":11916,"endOffset":11953,"count":0},{"startOffset":11955,"endOffset":12094,"count":0}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":256,"endOffset":1415,"count":1},{"startOffset":430,"endOffset":534,"count":0},{"startOffset":827,"endOffset":838,"count":0},{"startOffset":1065,"endOffset":1389,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1576,"endOffset":2864,"count":1},{"startOffset":1682,"endOffset":1698,"count":0},{"startOffset":2172,"endOffset":2194,"count":0},{"startOffset":2338,"endOffset":2360,"count":0},{"startOffset":2475,"endOffset":2491,"count":0},{"startOffset":2554,"endOffset":2571,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":4261,"endOffset":4659,"count":1},{"startOffset":4441,"endOffset":4484,"count":0}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5443,"endOffset":5829,"count":1},{"startOffset":5586,"endOffset":5696,"count":0},{"startOffset":5744,"endOffset":5828,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5769,"endOffset":5825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3330,"endOffset":3433,"count":19},{"startOffset":3382,"endOffset":3411,"count":1}],"isBlockCoverage":true}]},{"scriptId":"390","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1182,"count":1}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/bin/mocha","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4009,"count":1},{"startOffset":1592,"endOffset":1658,"count":0},{"startOffset":2098,"endOffset":2188,"count":0},{"startOffset":2268,"endOffset":3913,"count":0}],"isBlockCoverage":true},{"functionName":"disableTimeouts","ranges":[{"startOffset":831,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"trimV8Option","ranges":[{"startOffset":1183,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1340,"endOffset":1467,"count":12},{"startOffset":1372,"endOffset":1422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1537,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2057,"endOffset":2081,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2454,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3155,"endOffset":3909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7612,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2063,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":1989,"endOffset":2054,"count":2},{"startOffset":2039,"endOffset":2042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2152,"endOffset":2240,"count":33}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2201,"endOffset":2238,"count":12},{"startOffset":2224,"endOffset":2233,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2621,"endOffset":2665,"count":20}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2970,"endOffset":4343,"count":2},{"startOffset":3424,"endOffset":3441,"count":0},{"startOffset":4114,"endOffset":4203,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3455,"endOffset":3756,"count":6},{"startOffset":3567,"endOffset":3732,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4070,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4263,"endOffset":4316,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":4727,"endOffset":4873,"count":1},{"startOffset":4841,"endOffset":4861,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":5309,"endOffset":6046,"count":1},{"startOffset":5370,"endOffset":5394,"count":0},{"startOffset":5589,"endOffset":5695,"count":0},{"startOffset":5767,"endOffset":6023,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":6719,"endOffset":7509,"count":1},{"startOffset":6945,"endOffset":6967,"count":0},{"startOffset":7277,"endOffset":7282,"count":0},{"startOffset":7294,"endOffset":7299,"count":0},{"startOffset":7367,"endOffset":7433,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6889,"endOffset":6921,"count":6}],"isBlockCoverage":true}]},{"scriptId":"393","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14758,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1063,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2059,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3061,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3240,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4239,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6171,"endOffset":6226,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6230,"endOffset":6287,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6323,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6524,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7690,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8283,"endOffset":8369,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8449,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8512,"endOffset":10303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10495,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10554,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10648,"endOffset":10673,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":10824,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":11619,"endOffset":12436,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12469,"endOffset":12853,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":12888,"endOffset":13450,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13486,"endOffset":14047,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14080,"endOffset":14462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14644,"endOffset":14678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6743,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":360,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":781,"endOffset":1568,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1570,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2186,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2275,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2525,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2802,"endOffset":3492,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3494,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4415,"endOffset":4821,"count":4},{"startOffset":4512,"endOffset":4820,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":4823,"endOffset":5552,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5554,"endOffset":5650,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":5652,"endOffset":5712,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":5714,"endOffset":5834,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":5869,"endOffset":6651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8416,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":774,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1193,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1415,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1616,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1889,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2105,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2275,"endOffset":2442,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2444,"endOffset":2556,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2558,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2890,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3177,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3496,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":3922,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4248,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4598,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":4900,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5199,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5515,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5729,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":5943,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6450,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6704,"endOffset":6831,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":6833,"endOffset":7021,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7023,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":7363,"endOffset":7508,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7510,"endOffset":7815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28510,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2814,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":2968,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3053,"endOffset":9116,"count":82}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3194,"endOffset":3371,"count":82},{"startOffset":3308,"endOffset":3312,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3375,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3436,"endOffset":3472,"count":166}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3476,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3562,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3622,"endOffset":3686,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3690,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3746,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3794,"endOffset":3903,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3907,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":3992,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4063,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4210,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4274,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4342,"endOffset":4416,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4420,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4535,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4622,"endOffset":4703,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4715,"endOffset":5507,"count":82},{"startOffset":4749,"endOffset":4787,"count":0},{"startOffset":4818,"endOffset":4859,"count":0},{"startOffset":5085,"endOffset":5446,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5027,"endOffset":5069,"count":82}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5170,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5285,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5512,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":5766,"endOffset":7452,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":7750,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":8150,"endOffset":8304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8308,"endOffset":8708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8712,"endOffset":8765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8769,"endOffset":8856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8860,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8897,"endOffset":9114,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":9118,"endOffset":9489,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9229,"endOffset":9288,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9275,"endOffset":9287,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9294,"endOffset":9481,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":9491,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":9953,"endOffset":10073,"count":330},{"startOffset":9997,"endOffset":10006,"count":0},{"startOffset":10012,"endOffset":10071,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":10075,"endOffset":11217,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":11219,"endOffset":13358,"count":82},{"startOffset":11371,"endOffset":11401,"count":0},{"startOffset":11681,"endOffset":11719,"count":0},{"startOffset":11752,"endOffset":11800,"count":0},{"startOffset":11833,"endOffset":11871,"count":0},{"startOffset":12063,"endOffset":13356,"count":84},{"startOffset":12113,"endOffset":12185,"count":3},{"startOffset":12329,"endOffset":12333,"count":0},{"startOffset":12418,"endOffset":12474,"count":2},{"startOffset":12476,"endOffset":13040,"count":82},{"startOffset":12568,"endOffset":12579,"count":1},{"startOffset":12580,"endOffset":12591,"count":81},{"startOffset":12636,"endOffset":12696,"count":0},{"startOffset":12744,"endOffset":12758,"count":0},{"startOffset":12760,"endOffset":12870,"count":0},{"startOffset":12901,"endOffset":13040,"count":0},{"startOffset":13040,"endOffset":13060,"count":2},{"startOffset":13060,"endOffset":13106,"count":0},{"startOffset":13106,"endOffset":13352,"count":2},{"startOffset":13161,"endOffset":13352,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":13511,"endOffset":13732,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":13734,"endOffset":14003,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":14005,"endOffset":14363,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":14483,"endOffset":14808,"count":82}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":14810,"endOffset":16032,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":16034,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16356,"endOffset":17563,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":17565,"endOffset":17973,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":17975,"endOffset":18281,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":18283,"endOffset":18416,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":18418,"endOffset":18577,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":18579,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":18785,"endOffset":19156,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":19158,"endOffset":19247,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":19249,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":19332,"endOffset":19809,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":19811,"endOffset":21485,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":21487,"endOffset":21914,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":21916,"endOffset":22155,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":22157,"endOffset":22570,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":22572,"endOffset":22750,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":22752,"endOffset":23022,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":23024,"endOffset":23291,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":23293,"endOffset":23567,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":23569,"endOffset":23892,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":23894,"endOffset":24032,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":24034,"endOffset":24167,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":24169,"endOffset":24355,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":24357,"endOffset":24585,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":24587,"endOffset":24863,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":24865,"endOffset":25062,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":25064,"endOffset":25337,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":25339,"endOffset":25611,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":25613,"endOffset":25812,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":25814,"endOffset":26091,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":26093,"endOffset":26266,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":26268,"endOffset":26647,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":26649,"endOffset":27333,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":27335,"endOffset":27449,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":27451,"endOffset":27692,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":27694,"endOffset":28038,"count":82},{"startOffset":27811,"endOffset":27817,"count":0},{"startOffset":27858,"endOffset":27895,"count":0}],"isBlockCoverage":true}]},{"scriptId":"397","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7454,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1175,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1638,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2499,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2937,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3238,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3928,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4129,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4815,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5447,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6947,"endOffset":7394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8203,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1177,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1997,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2044,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3845,"endOffset":4160,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4164,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4708,"endOffset":5684,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5688,"endOffset":6377,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6381,"endOffset":6758,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":6762,"endOffset":7025,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7205,"endOffset":7785,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7787,"endOffset":8146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2129,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":2705,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3227,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3889,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4291,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4586,"endOffset":4799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4891,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5047,"endOffset":5162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11242,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3620,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3874,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4244,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4702,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5017,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5271,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6776,"endOffset":7686,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7903,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8034,"endOffset":8371,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8400,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8500,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8574,"endOffset":8626,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8850,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8890,"endOffset":8931,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8967,"endOffset":11110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39788,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3779,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9664,"endOffset":9764,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9767,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9988,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10133,"endOffset":10176,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10180,"endOffset":10371,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10510,"endOffset":10764,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":10768,"endOffset":11072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11076,"endOffset":11318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11322,"endOffset":11409,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11413,"endOffset":11581,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11585,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11786,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12968,"endOffset":13973,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14057,"endOffset":14228,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14309,"endOffset":14440,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14532,"endOffset":14668,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14939,"endOffset":15098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15102,"endOffset":16836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16840,"endOffset":17509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17513,"endOffset":17912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17916,"endOffset":20124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20128,"endOffset":20589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20593,"endOffset":20851,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20855,"endOffset":21337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21341,"endOffset":21822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21826,"endOffset":22586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22590,"endOffset":23017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23021,"endOffset":23299,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23303,"endOffset":23561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23565,"endOffset":23825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23829,"endOffset":23984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23988,"endOffset":24663,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24667,"endOffset":24816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24820,"endOffset":24974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24978,"endOffset":25165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25169,"endOffset":25477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25481,"endOffset":25789,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26224,"endOffset":26858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26862,"endOffset":27570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27645,"endOffset":28585,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28762,"endOffset":28931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29050,"endOffset":29607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29644,"endOffset":37894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38202,"endOffset":39220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12396,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11870,"endOffset":12283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4784,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2402,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2983,"endOffset":3117,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4105,"endOffset":4137,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4235,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4369,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4575,"endOffset":4782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1019,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1601,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4706,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5181,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5331,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5661,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5805,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6177,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6720,"endOffset":6834,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6838,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8282,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8713,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9233,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9783,"endOffset":10453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12781,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1574,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1709,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2337,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2598,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3305,"endOffset":3705,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3749,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3846,"endOffset":3929,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3962,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4045,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4165,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4372,"endOffset":4516,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4594,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":4943,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6282,"endOffset":7050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7054,"endOffset":7408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7412,"endOffset":8019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8023,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8279,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":8731,"endOffset":8815,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":8860,"endOffset":8869,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9347,"endOffset":9760,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":9762,"endOffset":10124,"count":0}],"isBlockCoverage":false},{"functionName":"validateAbortController","ranges":[{"startOffset":10301,"endOffset":10429,"count":0}],"isBlockCoverage":false},{"functionName":"AbortController","ranges":[{"startOffset":10457,"endOffset":10517,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":10558,"endOffset":10637,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":10680,"endOffset":10837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10841,"endOffset":10968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10979,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11297,"endOffset":11489,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11561,"endOffset":11650,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11744,"endOffset":12332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8360,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":891,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1000,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1011,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":6955,"endOffset":7840,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7842,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5451,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":543,"endOffset":5449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12326,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1058,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1489,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1819,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2107,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2283,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3329,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3929,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4024,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10478,"endOffset":12279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4938,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":2},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3811,"endOffset":4023,"count":26},{"startOffset":3909,"endOffset":3940,"count":0},{"startOffset":3984,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4029,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4364,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4547,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4683,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4805,"endOffset":4936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43613,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1799,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2591,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3280,"endOffset":3496,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3355,"endOffset":3397,"count":28}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3403,"endOffset":3488,"count":20},{"startOffset":3433,"endOffset":3482,"count":10}],"isBlockCoverage":true},{"functionName":"ReadableState","ranges":[{"startOffset":5372,"endOffset":7986,"count":2},{"startOffset":5771,"endOffset":5814,"count":0},{"startOffset":6156,"endOffset":6182,"count":0},{"startOffset":6245,"endOffset":6271,"count":0},{"startOffset":6519,"endOffset":6555,"count":0},{"startOffset":7101,"endOffset":7129,"count":0},{"startOffset":7885,"endOffset":7984,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":7989,"endOffset":8877,"count":2},{"startOffset":8057,"endOffset":8086,"count":0},{"startOffset":8409,"endOffset":8435,"count":0},{"startOffset":8490,"endOffset":8522,"count":0},{"startOffset":8579,"endOffset":8615,"count":0},{"startOffset":8640,"endOffset":8652,"count":0},{"startOffset":8660,"endOffset":8697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8764,"endOffset":8873,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":9014,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":9097,"endOffset":9135,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":9179,"endOffset":9435,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":9664,"endOffset":9750,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":9846,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":9934,"endOffset":12336,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":12338,"endOffset":13103,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":13135,"endOffset":13247,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":13311,"endOffset":13872,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":13933,"endOffset":14284,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":14397,"endOffset":14808,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":14905,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":19410,"endOffset":20230,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":20431,"endOffset":20758,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":20760,"endOffset":21414,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":21764,"endOffset":21941,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":21943,"endOffset":23735,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":24006,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":24101,"endOffset":28546,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":28549,"endOffset":29194,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":29225,"endOffset":29926,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":30052,"endOffset":30959,"count":35},{"startOffset":30184,"endOffset":30516,"count":0},{"startOffset":30545,"endOffset":30942,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":31054,"endOffset":31619,"count":32},{"startOffset":31216,"endOffset":31602,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":31722,"endOffset":32316,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":32319,"endOffset":32829,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":32831,"endOffset":32919,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":33073,"endOffset":33398,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":33401,"endOffset":33551,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":33553,"endOffset":33804,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":33833,"endOffset":34100,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":34103,"endOffset":34250,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":34434,"endOffset":35455,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":35500,"endOffset":35552,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":35585,"endOffset":35728,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":35731,"endOffset":35980,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":35982,"endOffset":37058,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37277,"endOffset":37666,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37672,"endOffset":37802,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37884,"endOffset":37948,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38030,"endOffset":38238,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38326,"endOffset":38392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38473,"endOffset":38555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38637,"endOffset":38697,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38708,"endOffset":38817,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38893,"endOffset":38947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39027,"endOffset":39115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39193,"endOffset":39278,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39347,"endOffset":39431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39476,"endOffset":39560,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39631,"endOffset":39718,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":39724,"endOffset":40013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40088,"endOffset":40176,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40317,"endOffset":40362,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40442,"endOffset":40493,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":40499,"endOffset":40548,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":40854,"endOffset":41416,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":41418,"endOffset":41639,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":41641,"endOffset":42561,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":42563,"endOffset":42723,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":42741,"endOffset":42810,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":42875,"endOffset":43039,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":43060,"endOffset":43194,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":43214,"endOffset":43348,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":43367,"endOffset":43611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":4}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1704,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":557,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":751,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1107,"endOffset":1702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":342,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":533,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":695,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":926,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":998,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1184,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1551,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2009,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2053,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2224,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2932,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3860,"endOffset":4056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":287,"endOffset":454,"count":4},{"startOffset":385,"endOffset":408,"count":0},{"startOffset":445,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":456,"endOffset":586,"count":4},{"startOffset":523,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":588,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":801,"endOffset":1234,"count":4},{"startOffset":948,"endOffset":1160,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":2589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26009,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2452,"endOffset":6975,"count":2},{"startOffset":2847,"endOffset":2890,"count":0},{"startOffset":3441,"endOffset":3477,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6977,"endOffset":7109,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7147,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7332,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7404,"endOffset":8932,"count":2},{"startOffset":8045,"endOffset":8099,"count":0},{"startOffset":8105,"endOffset":8134,"count":0},{"startOffset":8273,"endOffset":8301,"count":0},{"startOffset":8355,"endOffset":8385,"count":0},{"startOffset":8440,"endOffset":8472,"count":0},{"startOffset":8525,"endOffset":8553,"count":0},{"startOffset":8610,"endOffset":8646,"count":0},{"startOffset":8678,"endOffset":8715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8782,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9014,"endOffset":9218,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9319,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9390,"endOffset":10734,"count":32},{"startOffset":9577,"endOffset":9813,"count":0},{"startOffset":9837,"endOffset":9882,"count":0},{"startOffset":9991,"endOffset":10075,"count":0},{"startOffset":10081,"endOffset":10384,"count":0},{"startOffset":10421,"endOffset":10470,"count":0},{"startOffset":10497,"endOffset":10547,"count":0},{"startOffset":10560,"endOffset":10651,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":10763,"endOffset":10849,"count":32}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":10878,"endOffset":10924,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10955,"endOffset":11110,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11153,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":11668,"endOffset":12681,"count":32},{"startOffset":11766,"endOffset":11769,"count":0},{"startOffset":11988,"endOffset":12011,"count":0},{"startOffset":12089,"endOffset":12321,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":12683,"endOffset":13061,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":13063,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":13450,"endOffset":15089,"count":32},{"startOffset":13608,"endOffset":13682,"count":0},{"startOffset":13800,"endOffset":14356,"count":0},{"startOffset":14417,"endOffset":14458,"count":0},{"startOffset":14773,"endOffset":14820,"count":6},{"startOffset":14822,"endOffset":14873,"count":6},{"startOffset":14873,"endOffset":15024,"count":26},{"startOffset":15030,"endOffset":15083,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15091,"endOffset":15230,"count":26}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15232,"endOffset":15607,"count":26},{"startOffset":15398,"endOffset":15458,"count":0},{"startOffset":15482,"endOffset":15520,"count":32},{"startOffset":15545,"endOffset":15574,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":15679,"endOffset":16236,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16302,"endOffset":17796,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":17826,"endOffset":17995,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18059,"endOffset":19395,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19398,"endOffset":19738,"count":26},{"startOffset":19450,"endOffset":19479,"count":0},{"startOffset":19480,"endOffset":19510,"count":0},{"startOffset":19511,"endOffset":19542,"count":0},{"startOffset":19543,"endOffset":19570,"count":0},{"startOffset":19571,"endOffset":19611,"count":0},{"startOffset":19612,"endOffset":19640,"count":0},{"startOffset":19641,"endOffset":19668,"count":0},{"startOffset":19669,"endOffset":19701,"count":0},{"startOffset":19702,"endOffset":19734,"count":0}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":19740,"endOffset":20686,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":20688,"endOffset":20993,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":20995,"endOffset":21494,"count":26},{"startOffset":21064,"endOffset":21492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21199,"endOffset":21361,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":21496,"endOffset":22222,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22307,"endOffset":22391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22439,"endOffset":22526,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22532,"endOffset":22714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22761,"endOffset":23153,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":23159,"endOffset":23293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23348,"endOffset":23434,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23491,"endOffset":23579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23632,"endOffset":23714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23766,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23906,"endOffset":24064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24124,"endOffset":24208,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24261,"endOffset":24341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24394,"endOffset":24471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24540,"endOffset":24624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24706,"endOffset":24912,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":24990,"endOffset":25287,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":25375,"endOffset":25407,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":25458,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":25561,"endOffset":25725,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":25746,"endOffset":25880,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":25900,"endOffset":26007,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5747,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5749,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6195,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6348,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6475,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7049,"endOffset":7174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5874,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":120,"endOffset":130,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":409,"endOffset":5812,"count":1},{"startOffset":527,"endOffset":586,"count":0}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":603,"endOffset":1269,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":826,"endOffset":1246,"count":3},{"startOffset":881,"endOffset":924,"count":0},{"startOffset":1183,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1287,"endOffset":1403,"count":3},{"startOffset":1355,"endOffset":1369,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1422,"endOffset":1868,"count":3},{"startOffset":1481,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1539,"count":0},{"startOffset":1574,"endOffset":1584,"count":0},{"startOffset":1714,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1888,"endOffset":2429,"count":42},{"startOffset":1995,"endOffset":2022,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2145,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2208,"endOffset":2417,"count":3},{"startOffset":2352,"endOffset":2377,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2236,"endOffset":2270,"count":3}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4269,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4417,"endOffset":5181,"count":2},{"startOffset":4475,"endOffset":4490,"count":0},{"startOffset":4535,"endOffset":4646,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4891,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4954,"endOffset":5169,"count":2},{"startOffset":5098,"endOffset":5127,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":4982,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5201,"endOffset":5407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5436,"endOffset":5604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5631,"endOffset":5641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1533,"count":1},{"startOffset":1112,"endOffset":1117,"count":0},{"startOffset":1149,"endOffset":1154,"count":0},{"startOffset":1237,"endOffset":1248,"count":0},{"startOffset":1250,"endOffset":1259,"count":0}],"isBlockCoverage":true}]},{"scriptId":"423","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1190,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":386,"endOffset":458,"count":5}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":462,"endOffset":1185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21355,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":890,"endOffset":1020,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1176,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1459,"endOffset":1581,"count":91}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2316,"endOffset":14669,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":3583,"endOffset":4138,"count":1},{"startOffset":3671,"endOffset":3728,"count":0},{"startOffset":3859,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5678,"endOffset":5922,"count":1},{"startOffset":5781,"endOffset":5863,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5926,"endOffset":6906,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7641,"endOffset":7876,"count":196}],"isBlockCoverage":true},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":7880,"endOffset":8452,"count":196},{"startOffset":8248,"endOffset":8310,"count":0},{"startOffset":8339,"endOffset":8431,"count":90}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":9090,"endOffset":10149,"count":90},{"startOffset":9681,"endOffset":9721,"count":0},{"startOffset":9776,"endOffset":9791,"count":0},{"startOffset":9793,"endOffset":9847,"count":0}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":9178,"endOffset":9623,"count":90},{"startOffset":9453,"endOffset":9533,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":10611,"endOffset":10836,"count":4}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":10902,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":11884,"endOffset":12470,"count":196},{"startOffset":11972,"endOffset":12070,"count":0},{"startOffset":12266,"endOffset":12300,"count":0}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":12628,"endOffset":12906,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":13118,"endOffset":13458,"count":196}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":13742,"endOffset":14046,"count":90},{"startOffset":13879,"endOffset":13933,"count":0}],"isBlockCoverage":true},{"functionName":"validateLoadResult","ranges":[{"startOffset":14050,"endOffset":14201,"count":90},{"startOffset":14108,"endOffset":14197,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":14205,"endOffset":14540,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":14601,"endOffset":14667,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14723,"endOffset":17130,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":17626,"endOffset":19308,"count":1},{"startOffset":18091,"endOffset":19258,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":18166,"endOffset":18661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18981,"endOffset":19069,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":19421,"endOffset":19597,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":20881,"endOffset":21280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3892,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":297,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":866,"endOffset":894,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1240,"endOffset":1852,"count":196},{"startOffset":1649,"endOffset":1851,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1768,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1856,"endOffset":2072,"count":392},{"startOffset":1970,"endOffset":2042,"count":63}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2247,"endOffset":2349,"count":196}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2489,"endOffset":2618,"count":196}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2622,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2860,"endOffset":2888,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2937,"endOffset":3080,"count":196},{"startOffset":3067,"endOffset":3075,"count":106}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3083,"endOffset":3677,"count":90},{"startOffset":3302,"endOffset":3338,"count":0},{"startOffset":3340,"endOffset":3410,"count":0},{"startOffset":3494,"endOffset":3500,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3680,"endOffset":3837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1326,"endOffset":1364,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1785,"endOffset":3160,"count":90},{"startOffset":1981,"endOffset":2108,"count":0},{"startOffset":2180,"endOffset":2325,"count":0},{"startOffset":2590,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2764,"count":0},{"startOffset":2770,"endOffset":3154,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3392,"endOffset":3806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12944,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":521,"endOffset":637,"count":164},{"startOffset":567,"endOffset":585,"count":163},{"startOffset":585,"endOffset":636,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1034,"endOffset":1059,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1821,"endOffset":2219,"count":4},{"startOffset":1895,"endOffset":1970,"count":0},{"startOffset":2128,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2833,"endOffset":3254,"count":164},{"startOffset":2910,"endOffset":2937,"count":82},{"startOffset":2939,"endOffset":2956,"count":0},{"startOffset":3050,"endOffset":3075,"count":0},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3174,"endOffset":3178,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":3478,"endOffset":3756,"count":82},{"startOffset":3537,"endOffset":3553,"count":0},{"startOffset":3693,"endOffset":3712,"count":1},{"startOffset":3713,"endOffset":3722,"count":81}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":3876,"endOffset":4021,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":4497,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":4717,"endOffset":5242,"count":82}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":5131,"endOffset":5187,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":5467,"endOffset":6006,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":6137,"endOffset":7493,"count":4},{"startOffset":6510,"endOffset":6532,"count":2},{"startOffset":6533,"endOffset":6562,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6623,"endOffset":7489,"count":4},{"startOffset":6742,"endOffset":6856,"count":0},{"startOffset":6948,"endOffset":7038,"count":0},{"startOffset":7088,"endOffset":7445,"count":25},{"startOffset":7152,"endOffset":7189,"count":24},{"startOffset":7191,"endOffset":7218,"count":3},{"startOffset":7218,"endOffset":7342,"count":22},{"startOffset":7342,"endOffset":7398,"count":0},{"startOffset":7398,"endOffset":7445,"count":22}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":7621,"endOffset":9159,"count":5},{"startOffset":7724,"endOffset":7857,"count":0},{"startOffset":8156,"endOffset":8204,"count":0},{"startOffset":8286,"endOffset":8291,"count":0},{"startOffset":8299,"endOffset":8348,"count":0},{"startOffset":8532,"endOffset":8629,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8665,"endOffset":9120,"count":1},{"startOffset":8778,"endOffset":8805,"count":0},{"startOffset":8864,"endOffset":8881,"count":0},{"startOffset":8882,"endOffset":8912,"count":0},{"startOffset":9070,"endOffset":9110,"count":0}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":9283,"endOffset":9666,"count":4},{"startOffset":9539,"endOffset":9591,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":9730,"endOffset":11931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11997,"endOffset":12941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46873,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2719,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3818,"endOffset":4552,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4989,"endOffset":6122,"count":1},{"startOffset":5151,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":6221,"endOffset":6324,"count":4}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":6712,"endOffset":8523,"count":3},{"startOffset":6989,"endOffset":7016,"count":2},{"startOffset":7016,"endOffset":7776,"count":1},{"startOffset":7132,"endOffset":7776,"count":0},{"startOffset":7776,"endOffset":7935,"count":1},{"startOffset":7959,"endOffset":8522,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":8586,"endOffset":8721,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":8839,"endOffset":9100,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":9163,"endOffset":9670,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":10454,"endOffset":12650,"count":188},{"startOffset":10590,"endOffset":10743,"count":0},{"startOffset":10805,"endOffset":10989,"count":0},{"startOffset":11063,"endOffset":11715,"count":0},{"startOffset":11804,"endOffset":11840,"count":0},{"startOffset":11906,"endOffset":11998,"count":0},{"startOffset":12021,"endOffset":12309,"count":0},{"startOffset":12555,"endOffset":12560,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":13064,"endOffset":13275,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":13671,"endOffset":13866,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":14504,"endOffset":14887,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":15343,"endOffset":15721,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":17077,"endOffset":19830,"count":116},{"startOffset":17246,"endOffset":17257,"count":100},{"startOffset":17258,"endOffset":17294,"count":0},{"startOffset":17296,"endOffset":17380,"count":0},{"startOffset":17430,"endOffset":17987,"count":0},{"startOffset":18079,"endOffset":18689,"count":0},{"startOffset":18908,"endOffset":18992,"count":0},{"startOffset":19016,"endOffset":19036,"count":16},{"startOffset":19036,"endOffset":19104,"count":100},{"startOffset":19104,"endOffset":19661,"count":0},{"startOffset":19661,"endOffset":19790,"count":100},{"startOffset":19790,"endOffset":19829,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17762,"endOffset":17775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18288,"endOffset":18301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18434,"endOffset":18447,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19171,"endOffset":19184,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19411,"endOffset":19424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19764,"endOffset":19777,"count":100}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":20022,"endOffset":20166,"count":350},{"startOffset":20118,"endOffset":20163,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":20961,"endOffset":23211,"count":240},{"startOffset":21154,"endOffset":21308,"count":116},{"startOffset":21308,"endOffset":23094,"count":124},{"startOffset":21340,"endOffset":22186,"count":6},{"startOffset":21371,"endOffset":21397,"count":0},{"startOffset":21717,"endOffset":21865,"count":0},{"startOffset":21905,"endOffset":21932,"count":0},{"startOffset":21967,"endOffset":22024,"count":0},{"startOffset":22058,"endOffset":22120,"count":0},{"startOffset":22122,"endOffset":22186,"count":0},{"startOffset":22186,"endOffset":23094,"count":118},{"startOffset":22339,"endOffset":22567,"count":350},{"startOffset":22397,"endOffset":22561,"count":0},{"startOffset":22610,"endOffset":23019,"count":338},{"startOffset":22667,"endOffset":22689,"count":236},{"startOffset":22691,"endOffset":23013,"count":118},{"startOffset":22962,"endOffset":22975,"count":0},{"startOffset":23019,"endOffset":23094,"count":0},{"startOffset":23094,"endOffset":23210,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":23495,"endOffset":24438,"count":116},{"startOffset":23627,"endOffset":23643,"count":0},{"startOffset":23699,"endOffset":23716,"count":0},{"startOffset":23856,"endOffset":24407,"count":551},{"startOffset":23966,"endOffset":24023,"count":116},{"startOffset":24023,"endOffset":24403,"count":435},{"startOffset":24079,"endOffset":24403,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":24935,"endOffset":27510,"count":116},{"startOffset":25143,"endOffset":25180,"count":3},{"startOffset":25243,"endOffset":25297,"count":16},{"startOffset":25298,"endOffset":25352,"count":16},{"startOffset":25354,"endOffset":25687,"count":16},{"startOffset":25582,"endOffset":25656,"count":0},{"startOffset":25687,"endOffset":25826,"count":100},{"startOffset":25826,"endOffset":27015,"count":500},{"startOffset":25940,"endOffset":26070,"count":400},{"startOffset":26072,"endOffset":27011,"count":301},{"startOffset":26377,"endOffset":26513,"count":0},{"startOffset":26634,"endOffset":26702,"count":285},{"startOffset":26703,"endOffset":26755,"count":101},{"startOffset":26756,"endOffset":26822,"count":100},{"startOffset":26824,"endOffset":27005,"count":100},{"startOffset":27015,"endOffset":27444,"count":100},{"startOffset":27340,"endOffset":27414,"count":0},{"startOffset":27444,"endOffset":27509,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":27884,"endOffset":28439,"count":101},{"startOffset":28071,"endOffset":28081,"count":100},{"startOffset":28082,"endOffset":28101,"count":1},{"startOffset":28143,"endOffset":28153,"count":0},{"startOffset":28202,"endOffset":28216,"count":1},{"startOffset":28216,"endOffset":28257,"count":100},{"startOffset":28257,"endOffset":28438,"count":0}],"isBlockCoverage":true},{"functionName":"packageImportsResolve","ranges":[{"startOffset":28926,"endOffset":31383,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":31497,"endOffset":31610,"count":49}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":31775,"endOffset":32833,"count":110},{"startOffset":31966,"endOffset":32194,"count":0},{"startOffset":32240,"endOffset":32255,"count":9},{"startOffset":32256,"endOffset":32308,"count":101},{"startOffset":32481,"endOffset":32516,"count":0},{"startOffset":32543,"endOffset":32662,"count":0},{"startOffset":32718,"endOffset":32722,"count":9},{"startOffset":32723,"endOffset":32776,"count":101}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":33157,"endOffset":35229,"count":116},{"startOffset":33271,"endOffset":33317,"count":6},{"startOffset":33317,"endOffset":33776,"count":110},{"startOffset":33616,"endOffset":33653,"count":106},{"startOffset":33655,"endOffset":33772,"count":100},{"startOffset":33776,"endOffset":33947,"count":10},{"startOffset":33947,"endOffset":35014,"count":33},{"startOffset":34206,"endOffset":34483,"count":23},{"startOffset":34283,"endOffset":34320,"count":0},{"startOffset":34483,"endOffset":34664,"count":10},{"startOffset":34664,"endOffset":34781,"count":6},{"startOffset":34781,"endOffset":34814,"count":4},{"startOffset":34814,"endOffset":34923,"count":3},{"startOffset":34923,"endOffset":35014,"count":1},{"startOffset":35014,"endOffset":35228,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":35340,"endOffset":35450,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":35569,"endOffset":35848,"count":390},{"startOffset":35639,"endOffset":35830,"count":148},{"startOffset":35697,"endOffset":35713,"count":132},{"startOffset":35713,"endOffset":35826,"count":16},{"startOffset":35830,"endOffset":35847,"count":242}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":35997,"endOffset":36188,"count":390},{"startOffset":36083,"endOffset":36100,"count":0},{"startOffset":36129,"endOffset":36145,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":36551,"endOffset":37342,"count":194},{"startOffset":36877,"endOffset":36923,"count":74},{"startOffset":36923,"endOffset":37213,"count":120},{"startOffset":36968,"endOffset":37040,"count":0},{"startOffset":37101,"endOffset":37209,"count":116},{"startOffset":37251,"endOffset":37277,"count":6},{"startOffset":37277,"endOffset":37341,"count":188}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":37504,"endOffset":38961,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":39341,"endOffset":40713,"count":196},{"startOffset":39647,"endOffset":40707,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":40853,"endOffset":41126,"count":196},{"startOffset":40930,"endOffset":40981,"count":0},{"startOffset":41018,"endOffset":41038,"count":0},{"startOffset":41040,"endOffset":41124,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":41750,"endOffset":45334,"count":196},{"startOffset":41907,"endOffset":41917,"count":0},{"startOffset":41919,"endOffset":42711,"count":0},{"startOffset":42815,"endOffset":42854,"count":0},{"startOffset":42942,"endOffset":43001,"count":74},{"startOffset":43001,"endOffset":43049,"count":122},{"startOffset":43049,"endOffset":43323,"count":80},{"startOffset":43227,"endOffset":43315,"count":0},{"startOffset":43330,"endOffset":43389,"count":0},{"startOffset":43394,"endOffset":43429,"count":116},{"startOffset":43763,"endOffset":43786,"count":0},{"startOffset":43851,"endOffset":43881,"count":80},{"startOffset":43883,"endOffset":43930,"count":2},{"startOffset":43930,"endOffset":43989,"count":194},{"startOffset":43989,"endOffset":44496,"count":0},{"startOffset":44496,"endOffset":44652,"count":194},{"startOffset":44652,"endOffset":44674,"count":0},{"startOffset":44675,"endOffset":44693,"count":194},{"startOffset":44706,"endOffset":45129,"count":0},{"startOffset":45129,"endOffset":45333,"count":194}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45597,"endOffset":46073,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46478,"endOffset":46869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1072,"endOffset":2165,"count":159},{"startOffset":1190,"endOffset":1910,"count":425},{"startOffset":1324,"endOffset":1344,"count":0},{"startOffset":1534,"endOffset":1569,"count":159},{"startOffset":1569,"endOffset":1886,"count":266},{"startOffset":1886,"endOffset":1906,"count":0},{"startOffset":1910,"endOffset":2164,"count":0}],"isBlockCoverage":true}]},{"scriptId":"430","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5818,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1228,"endOffset":1259,"count":8}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1324,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1815,"endOffset":2174,"count":189},{"startOffset":1915,"endOffset":2159,"count":707},{"startOffset":1977,"endOffset":2012,"count":0},{"startOffset":2020,"endOffset":2149,"count":189},{"startOffset":2108,"endOffset":2112,"count":0},{"startOffset":2159,"endOffset":2173,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2404,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2749,"endOffset":4479,"count":189},{"startOffset":2866,"endOffset":3372,"count":49},{"startOffset":2945,"endOffset":2978,"count":44},{"startOffset":2978,"endOffset":3077,"count":5},{"startOffset":3077,"endOffset":3345,"count":0},{"startOffset":3345,"endOffset":3372,"count":5},{"startOffset":3372,"endOffset":3392,"count":140},{"startOffset":3392,"endOffset":4074,"count":0},{"startOffset":4074,"endOffset":4150,"count":140},{"startOffset":4150,"endOffset":4476,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":4615,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":5105,"endOffset":5340,"count":195},{"startOffset":5259,"endOffset":5281,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":5485,"endOffset":5708,"count":2},{"startOffset":5626,"endOffset":5648,"count":0}],"isBlockCoverage":true}]},{"scriptId":"431","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2205,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":745,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"getLegacyExtensionFormat","ranges":[{"startOffset":1085,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1537,"endOffset":2055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41467,"count":1},{"startOffset":40159,"endOffset":40203,"count":0},{"startOffset":40344,"endOffset":40542,"count":0},{"startOffset":40579,"endOffset":40583,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"decamelize","ranges":[{"startOffset":905,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1405,"endOffset":1728,"count":2},{"startOffset":1482,"endOffset":1495,"count":0},{"startOffset":1535,"endOffset":1547,"count":0},{"startOffset":1590,"endOffset":1602,"count":0},{"startOffset":1649,"endOffset":1662,"count":0}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1730,"endOffset":2515,"count":2},{"startOffset":1882,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1835,"endOffset":1874,"count":6},{"startOffset":1862,"endOffset":1870,"count":0}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2552,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2608,"endOffset":38682,"count":2},{"startOffset":4252,"endOffset":4257,"count":0},{"startOffset":4405,"endOffset":4411,"count":0},{"startOffset":5215,"endOffset":5220,"count":0},{"startOffset":5858,"endOffset":5863,"count":0},{"startOffset":6019,"endOffset":6024,"count":0},{"startOffset":6182,"endOffset":6187,"count":0},{"startOffset":7286,"endOffset":7860,"count":0},{"startOffset":8357,"endOffset":15405,"count":5},{"startOffset":8585,"endOffset":8637,"count":0},{"startOffset":8745,"endOffset":9301,"count":0},{"startOffset":9349,"endOffset":9385,"count":0},{"startOffset":9387,"endOffset":9657,"count":0},{"startOffset":9698,"endOffset":9764,"count":2},{"startOffset":9766,"endOffset":10975,"count":3},{"startOffset":9974,"endOffset":10049,"count":0},{"startOffset":10124,"endOffset":10199,"count":1},{"startOffset":10199,"endOffset":10943,"count":2},{"startOffset":10340,"endOffset":10391,"count":1},{"startOffset":10393,"endOffset":10458,"count":1},{"startOffset":10459,"endOffset":10525,"count":0},{"startOffset":10527,"endOffset":10634,"count":0},{"startOffset":10697,"endOffset":10804,"count":0},{"startOffset":10975,"endOffset":15395,"count":2},{"startOffset":11020,"endOffset":11219,"count":0},{"startOffset":11262,"endOffset":11285,"count":0},{"startOffset":11287,"endOffset":11894,"count":0},{"startOffset":11937,"endOffset":11960,"count":0},{"startOffset":11962,"endOffset":14821,"count":0},{"startOffset":14865,"endOffset":14903,"count":0},{"startOffset":14904,"endOffset":14965,"count":0},{"startOffset":14967,"endOffset":15066,"count":0},{"startOffset":15102,"endOffset":15186,"count":0},{"startOffset":15245,"endOffset":15325,"count":0},{"startOffset":15690,"endOffset":15715,"count":0},{"startOffset":15893,"endOffset":15911,"count":0},{"startOffset":15925,"endOffset":15949,"count":0},{"startOffset":16096,"endOffset":16128,"count":0},{"startOffset":16130,"endOffset":16287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5246,"endOffset":5824,"count":20},{"startOffset":5311,"endOffset":5320,"count":0},{"startOffset":5680,"endOffset":5742,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5380,"endOffset":5627,"count":170}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5986,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6050,"endOffset":6149,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6213,"endOffset":6312,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6375,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6540,"endOffset":6641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6735,"endOffset":6923,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7031,"endOffset":7225,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7432,"endOffset":7513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7638,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7969,"endOffset":8126,"count":8},{"startOffset":8018,"endOffset":8023,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8033,"endOffset":8114,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15758,"endOffset":15863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15975,"endOffset":16043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16169,"endOffset":16209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16219,"endOffset":16275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16384,"endOffset":16399,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16410,"endOffset":16662,"count":48},{"startOffset":16479,"endOffset":16501,"count":0},{"startOffset":16503,"endOffset":16612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16558,"endOffset":16581,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":16683,"endOffset":16954,"count":2},{"startOffset":16837,"endOffset":16878,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":16963,"endOffset":18584,"count":1},{"startOffset":17157,"endOffset":17160,"count":0},{"startOffset":17199,"endOffset":17436,"count":0},{"startOffset":17500,"endOffset":17503,"count":0},{"startOffset":17558,"endOffset":17773,"count":0},{"startOffset":17850,"endOffset":18077,"count":2},{"startOffset":17904,"endOffset":17931,"count":1},{"startOffset":17932,"endOffset":17965,"count":1},{"startOffset":17991,"endOffset":18059,"count":1},{"startOffset":18137,"endOffset":18198,"count":0},{"startOffset":18316,"endOffset":18331,"count":0},{"startOffset":18333,"endOffset":18424,"count":0}],"isBlockCoverage":true},{"functionName":"eatArray","ranges":[{"startOffset":18593,"endOffset":20377,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":20386,"endOffset":22249,"count":8},{"startOffset":20444,"endOffset":20484,"count":0},{"startOffset":20486,"endOffset":20683,"count":0},{"startOffset":20858,"endOffset":21063,"count":5},{"startOffset":21100,"endOffset":21132,"count":0},{"startOffset":21134,"endOffset":21611,"count":0},{"startOffset":21666,"endOffset":21704,"count":0},{"startOffset":21706,"endOffset":22239,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20537,"endOffset":20616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20903,"endOffset":21047,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21195,"endOffset":21595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21806,"endOffset":22223,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":22258,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":22612,"endOffset":23717,"count":8},{"startOffset":22686,"endOffset":22739,"count":2},{"startOffset":22740,"endOffset":22789,"count":0},{"startOffset":22791,"endOffset":22862,"count":0},{"startOffset":22913,"endOffset":22950,"count":4},{"startOffset":22952,"endOffset":23054,"count":4},{"startOffset":23019,"endOffset":23040,"count":0},{"startOffset":23114,"endOffset":23175,"count":0},{"startOffset":23274,"endOffset":23327,"count":0},{"startOffset":23329,"endOffset":23381,"count":0},{"startOffset":23436,"endOffset":23473,"count":0},{"startOffset":23475,"endOffset":23681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23124,"endOffset":23174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23553,"endOffset":23594,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":23726,"endOffset":24370,"count":24},{"startOffset":23826,"endOffset":23840,"count":0},{"startOffset":23858,"endOffset":23871,"count":0},{"startOffset":23925,"endOffset":23962,"count":13},{"startOffset":23963,"endOffset":23987,"count":4},{"startOffset":23989,"endOffset":24334,"count":2},{"startOffset":24057,"endOffset":24090,"count":0},{"startOffset":24091,"endOffset":24152,"count":0},{"startOffset":24258,"endOffset":24320,"count":0}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24379,"endOffset":26014,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24583,"endOffset":26002,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObject","ranges":[{"startOffset":26023,"endOffset":26699,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26104,"endOffset":26687,"count":6},{"startOffset":26201,"endOffset":26219,"count":0},{"startOffset":26273,"endOffset":26290,"count":1},{"startOffset":26291,"endOffset":26315,"count":1},{"startOffset":26316,"endOffset":26348,"count":0},{"startOffset":26350,"endOffset":26422,"count":0},{"startOffset":26504,"endOffset":26582,"count":1},{"startOffset":26547,"endOffset":26581,"count":0},{"startOffset":26584,"endOffset":26655,"count":5}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":26708,"endOffset":26952,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26832,"endOffset":26926,"count":3}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":26961,"endOffset":27837,"count":4},{"startOffset":27076,"endOffset":27145,"count":0},{"startOffset":27146,"endOffset":27150,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27226,"endOffset":27825,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":27846,"endOffset":28693,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27979,"endOffset":28681,"count":26},{"startOffset":28035,"endOffset":28667,"count":16},{"startOffset":28159,"endOffset":28649,"count":14},{"startOffset":28334,"endOffset":28339,"count":3},{"startOffset":28547,"endOffset":28627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28355,"endOffset":28494,"count":24}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":28702,"endOffset":28994,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29003,"endOffset":29620,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29120,"endOffset":29608,"count":26},{"startOffset":29187,"endOffset":29594,"count":14},{"startOffset":29309,"endOffset":29331,"count":6},{"startOffset":29366,"endOffset":29371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29381,"endOffset":29574,"count":9},{"startOffset":29479,"endOffset":29486,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":29629,"endOffset":30054,"count":41},{"startOffset":29981,"endOffset":29994,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29810,"endOffset":29876,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30063,"endOffset":32512,"count":37},{"startOffset":31162,"endOffset":31198,"count":0},{"startOffset":31200,"endOffset":31444,"count":0},{"startOffset":31484,"endOffset":31543,"count":0},{"startOffset":31588,"endOffset":32082,"count":0},{"startOffset":32141,"endOffset":32213,"count":4},{"startOffset":32189,"endOffset":32198,"count":0},{"startOffset":32213,"endOffset":32502,"count":33},{"startOffset":32271,"endOffset":32324,"count":0},{"startOffset":32325,"endOffset":32377,"count":0},{"startOffset":32380,"endOffset":32437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30251,"endOffset":30866,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":32521,"endOffset":34114,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32580,"endOffset":34102,"count":8},{"startOffset":32629,"endOffset":32634,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32644,"endOffset":34086,"count":70},{"startOffset":32729,"endOffset":32736,"count":16},{"startOffset":32736,"endOffset":32801,"count":54},{"startOffset":32801,"endOffset":32806,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32868,"endOffset":33295,"count":102},{"startOffset":32923,"endOffset":32963,"count":14},{"startOffset":32965,"endOffset":33273,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33357,"endOffset":33810,"count":102},{"startOffset":33413,"endOffset":33431,"count":64},{"startOffset":33432,"endOffset":33472,"count":0},{"startOffset":33474,"endOffset":33788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33860,"endOffset":34066,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33957,"endOffset":34041,"count":60}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34123,"endOffset":34408,"count":145},{"startOffset":34218,"endOffset":34223,"count":45},{"startOffset":34373,"endOffset":34389,"count":49},{"startOffset":34390,"endOffset":34397,"count":96}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34317,"endOffset":34342,"count":246}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":34417,"endOffset":34715,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":34724,"endOffset":35004,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35013,"endOffset":35859,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":35868,"endOffset":35999,"count":6},{"startOffset":35965,"endOffset":35988,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36008,"endOffset":36666,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":36675,"endOffset":37002,"count":2},{"startOffset":36755,"endOffset":36809,"count":0},{"startOffset":36810,"endOffset":36849,"count":0},{"startOffset":36851,"endOffset":36904,"count":0}],"isBlockCoverage":true},{"functionName":"defaultForType","ranges":[{"startOffset":37011,"endOffset":37243,"count":2}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":37252,"endOffset":37702,"count":2},{"startOffset":37381,"endOffset":37397,"count":0},{"startOffset":37472,"endOffset":37488,"count":0},{"startOffset":37578,"endOffset":37667,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":37711,"endOffset":37786,"count":4}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":37795,"endOffset":38367,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37870,"endOffset":38355,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":38685,"endOffset":39887,"count":2},{"startOffset":39025,"endOffset":39513,"count":42},{"startOffset":39091,"endOffset":39503,"count":420},{"startOffset":39284,"endOffset":39489,"count":0},{"startOffset":39503,"endOffset":39513,"count":420},{"startOffset":39513,"endOffset":39519,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38846,"endOffset":38924,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39149,"endOffset":39243,"count":892}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39544,"endOffset":39862,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39607,"endOffset":39682,"count":90}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":39888,"endOffset":39962,"count":37},{"startOffset":39945,"endOffset":39955,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":39963,"endOffset":40067,"count":37},{"startOffset":40028,"endOffset":40049,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":40649,"endOffset":40682,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":40780,"endOffset":41087,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41112,"endOffset":41220,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":41245,"endOffset":41315,"count":2}],"isBlockCoverage":true}]},{"scriptId":"433","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12919,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1874,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2658,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3772,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":4921,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5365,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9365,"endOffset":12881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5797,"endOffset":5967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"node:internal/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16816,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":1199,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1310,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1437,"endOffset":1562,"count":82},{"startOffset":1518,"endOffset":1560,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8308,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8808,"endOffset":8987,"count":3},{"startOffset":8919,"endOffset":8986,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9058,"endOffset":9104,"count":6}],"isBlockCoverage":true},{"functionName":"get encoding","ranges":[{"startOffset":9108,"endOffset":9175,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9179,"endOffset":9271,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9275,"endOffset":9585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9589,"endOffset":9985,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10357,"endOffset":12323,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10495,"endOffset":11432,"count":3},{"startOffset":10805,"endOffset":10852,"count":0},{"startOffset":10936,"endOffset":10959,"count":0},{"startOffset":11000,"endOffset":11028,"count":0},{"startOffset":11383,"endOffset":11426,"count":0}],"isBlockCoverage":true},{"functionName":"#prepareConverter","ranges":[{"startOffset":11438,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11709,"endOffset":12294,"count":82},{"startOffset":11944,"endOffset":12293,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":12325,"endOffset":15178,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":15275,"endOffset":15350,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":15355,"endOffset":15476,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":15481,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":15635,"endOffset":16217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10569,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":866,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2641,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3059,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3288,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3530,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8986,"endOffset":10365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2232,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1642,"endOffset":1952,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1792,"endOffset":1934,"count":43},{"startOffset":1863,"endOffset":1868,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1890,"endOffset":1928,"count":24}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2163,"endOffset":2230,"count":15}],"isBlockCoverage":true}]},{"scriptId":"438","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1549,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":510,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1181,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1309,"endOffset":1351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39095,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2201,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2335,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2475,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2596,"endOffset":2699,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2720,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2846,"endOffset":2963,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":2989,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3121,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3234,"endOffset":3332,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3352,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3751,"endOffset":3820,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6170,"endOffset":8544,"count":1},{"startOffset":6882,"endOffset":6885,"count":0},{"startOffset":6939,"endOffset":6979,"count":0},{"startOffset":7338,"endOffset":7382,"count":0},{"startOffset":8390,"endOffset":8454,"count":0},{"startOffset":8459,"endOffset":8542,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7234,"endOffset":7303,"count":15},{"startOffset":7273,"endOffset":7299,"count":2}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":8783,"endOffset":8852,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9197,"endOffset":9256,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":9833,"endOffset":10985,"count":1},{"startOffset":9918,"endOffset":9958,"count":0},{"startOffset":9998,"endOffset":10007,"count":0},{"startOffset":10248,"endOffset":10762,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11319,"endOffset":11826,"count":1},{"startOffset":11388,"endOffset":11417,"count":0},{"startOffset":11437,"endOffset":11445,"count":0},{"startOffset":11515,"endOffset":11677,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11752,"endOffset":11806,"count":4}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12361,"endOffset":12697,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":13359,"endOffset":13763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13501,"endOffset":13586,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13592,"endOffset":13756,"count":4}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":13977,"endOffset":14192,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":14634,"endOffset":14998,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":15353,"endOffset":15453,"count":1},{"startOffset":15404,"endOffset":15452,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":16594,"endOffset":16882,"count":1},{"startOffset":16636,"endOffset":16826,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":17153,"endOffset":17213,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":17509,"endOffset":17599,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":17997,"endOffset":18119,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":18414,"endOffset":18749,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19012,"endOffset":19099,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.growl","ranges":[{"startOffset":19297,"endOffset":19615,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":20586,"endOffset":20801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20711,"endOffset":20782,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":21181,"endOffset":21256,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":21556,"endOffset":21649,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":21906,"endOffset":21978,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":22551,"endOffset":22615,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":22984,"endOffset":23048,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":23425,"endOffset":23486,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":23777,"endOffset":23864,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":24006,"endOffset":24074,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":24345,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":24711,"endOffset":24775,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":25022,"endOffset":25100,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":25351,"endOffset":25435,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":25700,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":26076,"endOffset":26175,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":26342,"endOffset":27026,"count":1},{"startOffset":26399,"endOffset":26576,"count":0},{"startOffset":26683,"endOffset":27024,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":28048,"endOffset":30427,"count":1},{"startOffset":28168,"endOffset":28233,"count":0},{"startOffset":28283,"endOffset":28310,"count":0},{"startOffset":28976,"endOffset":29028,"count":0},{"startOffset":29114,"endOffset":29144,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":29367,"endOffset":29680,"count":1},{"startOffset":29509,"endOffset":29527,"count":0},{"startOffset":29541,"endOffset":29554,"count":0},{"startOffset":29601,"endOffset":29643,"count":0}],"isBlockCoverage":true},{"functionName":"runAsync","ranges":[{"startOffset":29702,"endOffset":30134,"count":1},{"startOffset":29818,"endOffset":29862,"count":0},{"startOffset":30043,"endOffset":30105,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":30587,"endOffset":31145,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":31826,"endOffset":32633,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":33062,"endOffset":33192,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":33484,"endOffset":33683,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":33987,"endOffset":34210,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":34683,"endOffset":34976,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":35453,"endOffset":35769,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":36043,"endOffset":36220,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":36448,"endOffset":36562,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":36799,"endOffset":36923,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":37083,"endOffset":37171,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":37339,"endOffset":37437,"count":1}],"isBlockCoverage":true}]},{"scriptId":"440","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"442","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12057,"count":1},{"startOffset":814,"endOffset":837,"count":0},{"startOffset":1078,"endOffset":1119,"count":0},{"startOffset":2402,"endOffset":2556,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":436,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2116,"endOffset":2265,"count":42},{"startOffset":2165,"endOffset":2194,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2668,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2747,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2832,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":2920,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":2995,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3198,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3350,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateDiff","ranges":[{"startOffset":3866,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":4874,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"Base","ranges":[{"startOffset":7137,"endOffset":8220,"count":1},{"startOffset":7225,"endOffset":7282,"count":0},{"startOffset":7308,"endOffset":7313,"count":0},{"startOffset":7473,"endOffset":7515,"count":0},{"startOffset":7552,"endOffset":7585,"count":0},{"startOffset":7587,"endOffset":7642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7673,"endOffset":7885,"count":15},{"startOffset":7728,"endOffset":7762,"count":0},{"startOffset":7805,"endOffset":7841,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7918,"endOffset":8216,"count":0}],"isBlockCoverage":false},{"functionName":"Base.epilogue","ranges":[{"startOffset":8365,"endOffset":8984,"count":1},{"startOffset":8593,"endOffset":8597,"count":0},{"startOffset":8665,"endOffset":8779,"count":0},{"startOffset":8817,"endOffset":8960,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":9110,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":9383,"endOffset":9941,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":10121,"endOffset":10923,"count":0}],"isBlockCoverage":false},{"functionName":"errorDiff","ranges":[{"startOffset":11068,"endOffset":11420,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":11563,"endOffset":11708,"count":0}],"isBlockCoverage":false},{"functionName":"sameType","ranges":[{"startOffset":11921,"endOffset":12002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7236,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":174,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":301,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":432,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":567,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":702,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":972,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1104,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1226,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1354,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1484,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1613,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1744,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1875,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1999,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2128,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2272,"endOffset":2332,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2412,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2552,"endOffset":2609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2697,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4100,"endOffset":4197,"count":1},{"startOffset":4174,"endOffset":4194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"444","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30923,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":158,"endOffset":176,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":260,"endOffset":4471,"count":0}],"isBlockCoverage":false},{"functionName":"pushComponent","ranges":[{"startOffset":4546,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":5149,"endOffset":5720,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":5788,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":6102,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":6351,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":6470,"endOffset":6528,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":6594,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":6652,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"clonePath","ranges":[{"startOffset":8675,"endOffset":8785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":424,"count":1},{"startOffset":401,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":688,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":464,"endOffset":561,"count":1},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1546,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1812,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2496,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2855,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":174,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5686,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":460,"endOffset":557,"count":1},{"startOffset":534,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":826,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":1486,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1586,"endOffset":1956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":431,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":716,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":786,"endOffset":892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":317,"endOffset":414,"count":1},{"startOffset":391,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":679,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":741,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12937,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":537,"count":1},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":539,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1625,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2270,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2568,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2859,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":422,"count":1},{"startOffset":399,"endOffset":419,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":695,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":783,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":822,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19926,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":547,"count":1},{"startOffset":524,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":573,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":4872,"endOffset":5728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17908,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":164,"endOffset":4730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4641,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":340,"endOffset":1483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50907,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":482,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":637,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":829,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1247,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1379,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1472,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1681,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2137,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5018,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":5876,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":5984,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6174,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6303,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6504,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9251,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":11900,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":12610,"endOffset":12754,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":12756,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":12981,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13147,"endOffset":13641,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":13643,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":14912,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15046,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15362,"endOffset":16317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23453,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":410,"endOffset":563,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":565,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":757,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1175,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1307,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1400,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":1609,"endOffset":6811,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":6813,"endOffset":7832,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":7834,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":8053,"endOffset":8231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":207,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2255,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":248,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3359,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":182,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":615,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":1},{"startOffset":524,"endOffset":541,"count":0},{"startOffset":543,"endOffset":571,"count":0},{"startOffset":643,"endOffset":657,"count":0},{"startOffset":678,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":1},{"startOffset":2167,"endOffset":2209,"count":0},{"startOffset":2228,"endOffset":2270,"count":0},{"startOffset":2289,"endOffset":2331,"count":0},{"startOffset":2350,"endOffset":2392,"count":0}],"isBlockCoverage":true},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17380,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":845,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1060,"endOffset":1112,"count":25}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1236,"endOffset":1369,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1521,"endOffset":2180,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2642,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3740,"endOffset":4049,"count":5},{"startOffset":3799,"endOffset":3828,"count":0},{"startOffset":3854,"endOffset":3878,"count":0},{"startOffset":3912,"endOffset":3938,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4672,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":5768,"endOffset":6795,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":6956,"endOffset":8999,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":9901,"endOffset":11489,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":11860,"endOffset":13191,"count":1},{"startOffset":11974,"endOffset":11991,"count":0},{"startOffset":12081,"endOffset":12225,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12229,"endOffset":12437,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeInternal","ranges":[{"startOffset":12441,"endOffset":12725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12736,"endOffset":13188,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":13336,"endOffset":13473,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":13711,"endOffset":13799,"count":29}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":13852,"endOffset":13866,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":14771,"endOffset":14906,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":15396,"endOffset":15609,"count":5},{"startOffset":15480,"endOffset":15559,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":15734,"endOffset":15776,"count":4}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":15926,"endOffset":15985,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":16490,"endOffset":16793,"count":5},{"startOffset":16545,"endOffset":16565,"count":0},{"startOffset":16588,"endOffset":16612,"count":0},{"startOffset":16703,"endOffset":16732,"count":0},{"startOffset":16773,"endOffset":16792,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":16969,"endOffset":16983,"count":29}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":17013,"endOffset":17162,"count":29}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17110,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":17301,"endOffset":17378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/nanoid/non-secure/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"customAlphabet","ranges":[{"startOffset":108,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"nanoid","ranges":[{"startOffset":327,"endOffset":454,"count":29},{"startOffset":387,"endOffset":440,"count":609}],"isBlockCoverage":true}]},{"scriptId":"464","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61,"endOffset":100874,"count":1},{"startOffset":500,"endOffset":535,"count":0},{"startOffset":100447,"endOffset":100481,"count":0},{"startOffset":100482,"endOffset":100497,"count":0},{"startOffset":100501,"endOffset":100547,"count":0},{"startOffset":100689,"endOffset":100813,"count":0},{"startOffset":100816,"endOffset":100871,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92347,"endOffset":92434,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92453,"endOffset":92630,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92646,"endOffset":92997,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93093,"endOffset":94044,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94064,"endOffset":94149,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94169,"endOffset":94226,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94247,"endOffset":94311,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94409,"endOffset":97437,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97673,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":99934,"endOffset":100103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100512,"endOffset":100542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":327,"endOffset":352,"count":0},{"startOffset":353,"endOffset":380,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1425,"endOffset":1429,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1513,"endOffset":1868,"count":0},{"startOffset":2010,"endOffset":2039,"count":0},{"startOffset":2059,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":10}],"isBlockCoverage":true},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"466","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9769,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2026,"endOffset":2267,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2085,"endOffset":2263,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2649,"endOffset":2662,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2711,"endOffset":2721,"count":1}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2773,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2836,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2897,"endOffset":2928,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2962,"endOffset":2980,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3015,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3070,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3123,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3176,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3230,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3288,"endOffset":3312,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3347,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3399,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3554,"endOffset":3654,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3934,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4394,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4463,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4513,"endOffset":4563,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4594,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4648,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5282,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5333,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5413,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5518,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5773,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6929,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7706,"endOffset":7995,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8053,"endOffset":8308,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8612,"endOffset":8900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5058,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1535,"endOffset":1641,"count":18}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1643,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2261,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2481,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3744,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4236,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4413,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4595,"endOffset":4734,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4776,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4951,"endOffset":5001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64869,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1585,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4091,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"lazyChannels","ranges":[{"startOffset":4234,"endOffset":4790,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4950,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":5046,"endOffset":5429,"count":2},{"startOffset":5213,"endOffset":5235,"count":0},{"startOffset":5270,"endOffset":5428,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5432,"endOffset":5570,"count":2},{"startOffset":5527,"endOffset":5545,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5573,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5857,"endOffset":5961,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6184,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6604,"endOffset":6679,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6681,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6799,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6904,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7585,"endOffset":8311,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8383,"endOffset":8986,"count":2},{"startOffset":8739,"endOffset":8980,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8988,"endOffset":9328,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9580,"endOffset":14123,"count":2},{"startOffset":9640,"endOffset":9667,"count":0},{"startOffset":9695,"endOffset":9824,"count":0},{"startOffset":9894,"endOffset":10142,"count":0},{"startOffset":10204,"endOffset":10400,"count":0},{"startOffset":10962,"endOffset":10988,"count":0},{"startOffset":11394,"endOffset":11502,"count":0},{"startOffset":12030,"endOffset":12064,"count":0},{"startOffset":12140,"endOffset":12151,"count":1},{"startOffset":12209,"endOffset":12738,"count":0},{"startOffset":12829,"endOffset":12906,"count":0},{"startOffset":12907,"endOffset":12953,"count":0},{"startOffset":12955,"endOffset":13170,"count":0},{"startOffset":13705,"endOffset":13970,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14296,"endOffset":14426,"count":32},{"startOffset":14398,"endOffset":14420,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14546,"endOffset":15162,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15165,"endOffset":15311,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15518,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16108,"endOffset":16612,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16646,"endOffset":17023,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17059,"endOffset":17665,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17696,"endOffset":17740,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17826,"endOffset":17870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17950,"endOffset":18006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18117,"endOffset":18432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18521,"endOffset":18601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18689,"endOffset":18734,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":18742,"endOffset":18988,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":19080,"endOffset":19399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19426,"endOffset":19613,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19651,"endOffset":20001,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20029,"endOffset":20363,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20393,"endOffset":20577,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":20605,"endOffset":20791,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20838,"endOffset":20937,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20971,"endOffset":21118,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21150,"endOffset":22660,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22689,"endOffset":22788,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22823,"endOffset":23120,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23123,"endOffset":23305,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23332,"endOffset":23423,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23456,"endOffset":23522,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23554,"endOffset":23618,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23648,"endOffset":23708,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23745,"endOffset":24021,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24053,"endOffset":24118,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24148,"endOffset":24207,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24238,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24342,"endOffset":24389,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24425,"endOffset":25337,"count":32},{"startOffset":24647,"endOffset":24991,"count":0},{"startOffset":25072,"endOffset":25128,"count":0},{"startOffset":25182,"endOffset":25218,"count":0},{"startOffset":25297,"endOffset":25335,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24742,"endOffset":24856,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24863,"endOffset":24942,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25368,"endOffset":25436,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25466,"endOffset":25547,"count":32}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25740,"endOffset":25844,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25876,"endOffset":26805,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26810,"endOffset":27609,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27612,"endOffset":29607,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29610,"endOffset":32090,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":32119,"endOffset":33570,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":33613,"endOffset":33767,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":33770,"endOffset":33916,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":33918,"endOffset":37827,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":37829,"endOffset":40914,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":40916,"endOffset":40975,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":41001,"endOffset":41188,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":41217,"endOffset":41410,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":41414,"endOffset":42995,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":42997,"endOffset":44884,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":44886,"endOffset":45118,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":45120,"endOffset":45560,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":45562,"endOffset":47149,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":47260,"endOffset":47325,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":47393,"endOffset":48845,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":48847,"endOffset":51198,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":51265,"endOffset":51327,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":51330,"endOffset":51445,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":51448,"endOffset":52708,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":52737,"endOffset":56563,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":56566,"endOffset":56978,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":57060,"endOffset":57103,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":57179,"endOffset":57468,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":57471,"endOffset":59426,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":59575,"endOffset":60328,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":60357,"endOffset":61224,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":61266,"endOffset":61386,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":61428,"endOffset":61814,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":61818,"endOffset":61901,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":61960,"endOffset":62122,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62344,"endOffset":62380,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":62384,"endOffset":62425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62505,"endOffset":62536,"count":48}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":62540,"endOffset":62576,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":62615,"endOffset":62856,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":62882,"endOffset":62980,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":63008,"endOffset":63107,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":63249,"endOffset":63918,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":63957,"endOffset":64198,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":64327,"endOffset":64429,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":64433,"endOffset":64555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7041,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1154,"endOffset":2009,"count":32},{"startOffset":1254,"endOffset":1421,"count":0},{"startOffset":1426,"endOffset":1440,"count":0},{"startOffset":1445,"endOffset":1509,"count":0},{"startOffset":1597,"endOffset":1659,"count":0},{"startOffset":1664,"endOffset":1676,"count":0},{"startOffset":1681,"endOffset":1694,"count":0},{"startOffset":1699,"endOffset":1714,"count":0},{"startOffset":1719,"endOffset":1783,"count":0},{"startOffset":1788,"endOffset":2003,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2011,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2698,"endOffset":2936,"count":32}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2938,"endOffset":3577,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3579,"endOffset":3784,"count":32}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3786,"endOffset":4089,"count":32},{"startOffset":3953,"endOffset":4004,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4091,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6024,"endOffset":6834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"node:internal/dtrace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":570,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15460,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2518,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2781,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3123,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3546,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3890,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4898,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":8634,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":8897,"endOffset":9923,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":10211,"endOffset":11475,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":11563,"endOffset":11904,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":11906,"endOffset":11971,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":11973,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":12575,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":13465,"endOffset":14583,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":14620,"endOffset":14739,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":14742,"endOffset":14852,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":14854,"endOffset":15171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1731,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":441,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":543,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":607,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":645,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":688,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":732,"endOffset":774,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":778,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":820,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1068,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"InternalPerformanceEntry","ranges":[{"startOffset":1288,"endOffset":1476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6485,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2549,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3160,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6158,"endOffset":6431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":28},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":2},{"startOffset":292,"endOffset":324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1},{"startOffset":402,"endOffset":412,"count":0}],"isBlockCoverage":true}]},{"scriptId":"476","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/log-symbols/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5968,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":1},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":729,"endOffset":732,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":8},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":8},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":319,"endOffset":344,"count":0},{"startOffset":345,"endOffset":372,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1151,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1239,"endOffset":1594,"count":0},{"startOffset":1727,"endOffset":1756,"count":0},{"startOffset":1776,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":10}],"isBlockCoverage":true},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/log-symbols/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":311,"count":1},{"startOffset":94,"endOffset":164,"count":0},{"startOffset":165,"endOffset":227,"count":0},{"startOffset":228,"endOffset":270,"count":0},{"startOffset":271,"endOffset":308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"481","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34321,"count":1},{"startOffset":6242,"endOffset":6261,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":4065,"endOffset":6082,"count":1},{"startOffset":4133,"endOffset":4157,"count":0},{"startOffset":4193,"endOffset":4434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4847,"endOffset":5129,"count":15},{"startOffset":4918,"endOffset":4932,"count":0},{"startOffset":4934,"endOffset":5092,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5170,"endOffset":5224,"count":22}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":5398,"endOffset":6077,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6590,"endOffset":7498,"count":22},{"startOffset":6839,"endOffset":6893,"count":1},{"startOffset":6894,"endOffset":6962,"count":0},{"startOffset":6967,"endOffset":7084,"count":0},{"startOffset":7182,"endOffset":7216,"count":1},{"startOffset":7221,"endOffset":7232,"count":21},{"startOffset":7300,"endOffset":7332,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7809,"endOffset":8422,"count":2},{"startOffset":7937,"endOffset":8337,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8598,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":9182,"endOffset":9347,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9545,"endOffset":9801,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9618,"endOffset":9780,"count":60},{"startOffset":9709,"endOffset":9738,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9916,"endOffset":10142,"count":1},{"startOffset":10030,"endOffset":10123,"count":8},{"startOffset":10068,"endOffset":10091,"count":6},{"startOffset":10091,"endOffset":10123,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":10310,"endOffset":10487,"count":2},{"startOffset":10352,"endOffset":10383,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10581,"endOffset":11125,"count":37},{"startOffset":10640,"endOffset":11123,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11054,"endOffset":11067,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11901,"endOffset":12656,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.hook","ranges":[{"startOffset":12808,"endOffset":15604,"count":108},{"startOffset":12855,"endOffset":12867,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":12953,"endOffset":15547,"count":130},{"startOffset":13012,"endOffset":13038,"count":108},{"startOffset":13038,"endOffset":13112,"count":22},{"startOffset":13112,"endOffset":13170,"count":0},{"startOffset":13170,"endOffset":13348,"count":22},{"startOffset":13210,"endOffset":13295,"count":0},{"startOffset":13348,"endOffset":13512,"count":22},{"startOffset":13512,"endOffset":13620,"count":5},{"startOffset":13620,"endOffset":15546,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13558,"endOffset":13612,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13635,"endOffset":15036,"count":22},{"startOffset":13718,"endOffset":13768,"count":0},{"startOffset":13819,"endOffset":14766,"count":0},{"startOffset":14781,"endOffset":14903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14370,"endOffset":14432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14466,"endOffset":14530,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":15044,"endOffset":15543,"count":44},{"startOffset":15120,"endOffset":15133,"count":5},{"startOffset":15179,"endOffset":15537,"count":22},{"startOffset":15388,"endOffset":15463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15570,"endOffset":15600,"count":108}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":15826,"endOffset":16241,"count":30}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15903,"endOffset":16216,"count":120},{"startOffset":15967,"endOffset":16018,"count":30},{"startOffset":16018,"endOffset":16215,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16040,"endOffset":16210,"count":90},{"startOffset":16072,"endOffset":16177,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16382,"endOffset":16499,"count":15}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":16648,"endOffset":16755,"count":15}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":16892,"endOffset":17048,"count":30},{"startOffset":16974,"endOffset":17029,"count":60}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":17173,"endOffset":17616,"count":15},{"startOffset":17214,"endOffset":17244,"count":0},{"startOffset":17303,"endOffset":17320,"count":0},{"startOffset":17344,"endOffset":17376,"count":0},{"startOffset":17492,"endOffset":17553,"count":0},{"startOffset":17584,"endOffset":17614,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17417,"endOffset":17463,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":17798,"endOffset":22395,"count":9}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":17890,"endOffset":18595,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":18599,"endOffset":22336,"count":24},{"startOffset":18686,"endOffset":18700,"count":0},{"startOffset":18702,"endOffset":18727,"count":0},{"startOffset":18750,"endOffset":18776,"count":0},{"startOffset":18791,"endOffset":18841,"count":0},{"startOffset":18918,"endOffset":18944,"count":9},{"startOffset":18944,"endOffset":19031,"count":15},{"startOffset":19031,"endOffset":19060,"count":0},{"startOffset":19060,"endOffset":19077,"count":15},{"startOffset":19077,"endOffset":19717,"count":0},{"startOffset":19717,"endOffset":19787,"count":15},{"startOffset":19787,"endOffset":20078,"count":0},{"startOffset":20078,"endOffset":22335,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20216,"endOffset":22330,"count":15},{"startOffset":20315,"endOffset":20886,"count":0},{"startOffset":20902,"endOffset":20957,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20783,"endOffset":20876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21017,"endOffset":22322,"count":15},{"startOffset":21124,"endOffset":21484,"count":0},{"startOffset":21499,"endOffset":22126,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":22568,"endOffset":24213,"count":9},{"startOffset":22747,"endOffset":22761,"count":0},{"startOffset":22764,"endOffset":22820,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":22889,"endOffset":23785,"count":17},{"startOffset":22933,"endOffset":23283,"count":0},{"startOffset":23306,"endOffset":23334,"count":0},{"startOffset":23385,"endOffset":23413,"count":9},{"startOffset":23413,"endOffset":23644,"count":8},{"startOffset":23644,"endOffset":23735,"count":0},{"startOffset":23735,"endOffset":23781,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23671,"endOffset":23727,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":23789,"endOffset":24053,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23957,"endOffset":24047,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24115,"endOffset":24209,"count":9},{"startOffset":24145,"endOffset":24173,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":25059,"endOffset":27724,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":28017,"endOffset":30026,"count":1},{"startOffset":28103,"endOffset":28108,"count":0},{"startOffset":28165,"endOffset":28182,"count":0},{"startOffset":29704,"endOffset":29964,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":28168,"endOffset":28182,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28199,"endOffset":28394,"count":1},{"startOffset":28227,"endOffset":28249,"count":0},{"startOffset":28251,"endOffset":28269,"count":0}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":28413,"endOffset":28621,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":28642,"endOffset":29011,"count":1},{"startOffset":28745,"endOffset":28834,"count":0},{"startOffset":28898,"endOffset":28986,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29143,"endOffset":29190,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29247,"endOffset":29386,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":30867,"endOffset":30902,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":31290,"endOffset":31397,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31348,"endOffset":31393,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":31532,"endOffset":31615,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":31816,"endOffset":31861,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":32211,"endOffset":32307,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":32455,"endOffset":33493,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":33708,"endOffset":33808,"count":0}],"isBlockCoverage":false},{"functionName":"thrown2Error","ranges":[{"startOffset":33971,"endOffset":34124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"484","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":120}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":14},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":14},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6290,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":14},{"startOffset":1108,"endOffset":1213,"count":220}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":131},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":131},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4610,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4603,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4696,"endOffset":4921,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5064,"endOffset":5451,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5569,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5794,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6022,"endOffset":6198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/debug/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10632,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":774,"endOffset":1152,"count":20},{"startOffset":861,"endOffset":866,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1078,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1329,"endOffset":1459,"count":35}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2161,"endOffset":2654,"count":62},{"startOffset":2202,"endOffset":2233,"count":42},{"startOffset":2233,"endOffset":2264,"count":20},{"startOffset":2264,"endOffset":2296,"count":0},{"startOffset":2296,"endOffset":2484,"count":20},{"startOffset":2486,"endOffset":2514,"count":0},{"startOffset":2514,"endOffset":2607,"count":20},{"startOffset":2607,"endOffset":2637,"count":0},{"startOffset":2637,"endOffset":2653,"count":20}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2814,"endOffset":3035,"count":50},{"startOffset":2854,"endOffset":2882,"count":20},{"startOffset":2884,"endOffset":2912,"count":30},{"startOffset":2912,"endOffset":2943,"count":20},{"startOffset":2943,"endOffset":2975,"count":0},{"startOffset":2975,"endOffset":3034,"count":20}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3143,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3360,"endOffset":3442,"count":67}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3562,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3766,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":3938,"endOffset":4032,"count":20},{"startOffset":3978,"endOffset":4009,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4120,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4420,"endOffset":4472,"count":75}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4668,"endOffset":4738,"count":75}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":4820,"endOffset":4863,"count":42}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":4945,"endOffset":5235,"count":5},{"startOffset":5022,"endOffset":5039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5089,"endOffset":5227,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5382,"endOffset":5502,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5615,"endOffset":9164,"count":37},{"startOffset":5770,"endOffset":5782,"count":0},{"startOffset":6576,"endOffset":6710,"count":0},{"startOffset":6771,"endOffset":7456,"count":0},{"startOffset":7522,"endOffset":7722,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":5925,"endOffset":6088,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6106,"endOffset":6449,"count":37},{"startOffset":6179,"endOffset":6200,"count":0},{"startOffset":6220,"endOffset":6255,"count":0},{"startOffset":6378,"endOffset":6387,"count":0},{"startOffset":6389,"endOffset":6432,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":6876,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":7726,"endOffset":8429,"count":37},{"startOffset":7794,"endOffset":7830,"count":5},{"startOffset":7832,"endOffset":8205,"count":5},{"startOffset":8205,"endOffset":8425,"count":32},{"startOffset":8239,"endOffset":8404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7888,"endOffset":8070,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8080,"endOffset":8190,"count":0}],"isBlockCoverage":false},{"functionName":"callFnAsync","ranges":[{"startOffset":8433,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9347,"endOffset":9613,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10406,"endOffset":10597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15639,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":350,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":753,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1062,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4375,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":4856,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5341,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5752,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6687,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7319,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":7870,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8297,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":8820,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9598,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10106,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10602,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11082,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12086,"endOffset":12341,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":12641,"endOffset":12827,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13287,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":13803,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14240,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":14609,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15434,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":714,"endOffset":882,"count":8}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1284,"endOffset":2125,"count":9},{"startOffset":1355,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1574,"endOffset":1595,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2056,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2290,"endOffset":2601,"count":9}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2330,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2705,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3194,"endOffset":3521,"count":37},{"startOffset":3235,"endOffset":3266,"count":28},{"startOffset":3266,"endOffset":3297,"count":9},{"startOffset":3297,"endOffset":3329,"count":0},{"startOffset":3329,"endOffset":3520,"count":9}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3694,"endOffset":3848,"count":36},{"startOffset":3734,"endOffset":3765,"count":28},{"startOffset":3765,"endOffset":3826,"count":8},{"startOffset":3826,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4017,"endOffset":4209,"count":37},{"startOffset":4058,"endOffset":4086,"count":28},{"startOffset":4086,"endOffset":4117,"count":9},{"startOffset":4117,"endOffset":4149,"count":0},{"startOffset":4149,"endOffset":4208,"count":9}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4371,"endOffset":4506,"count":16},{"startOffset":4414,"endOffset":4505,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4625,"endOffset":4707,"count":261},{"startOffset":4677,"endOffset":4703,"count":174}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":4896,"endOffset":5129,"count":5}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5312,"endOffset":5672,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.afterAll","ranges":[{"startOffset":5853,"endOffset":6210,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6395,"endOffset":6758,"count":4},{"startOffset":6442,"endOffset":6464,"count":0},{"startOffset":6583,"endOffset":6597,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":6941,"endOffset":7301,"count":1},{"startOffset":6988,"endOffset":7010,"count":0},{"startOffset":7128,"endOffset":7142,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7433,"endOffset":7713,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":7850,"endOffset":8095,"count":15}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8279,"endOffset":8331,"count":17}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8515,"endOffset":8697,"count":266},{"startOffset":8567,"endOffset":8625,"count":174},{"startOffset":8644,"endOffset":8678,"count":174}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":8822,"endOffset":8964,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8870,"endOffset":8933,"count":8}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9170,"endOffset":9299,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9234,"endOffset":9280,"count":20}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9420,"endOffset":9508,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":9657,"endOffset":9841,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9779,"endOffset":9833,"count":8}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":9960,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11137,"endOffset":11189,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11273,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11472,"endOffset":11521,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":11644,"endOffset":11698,"count":108}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":11798,"endOffset":11907,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12307,"endOffset":12877,"count":9},{"startOffset":12841,"endOffset":12875,"count":15}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12338,"endOffset":12449,"count":36},{"startOffset":12414,"endOffset":12445,"count":5}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13046,"endOffset":13339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":354,"endOffset":438,"count":5}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":580,"endOffset":656,"count":5}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":793,"endOffset":927,"count":22},{"startOffset":903,"endOffset":926,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1095,"endOffset":1785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":749,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":690,"endOffset":2267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7044,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":851,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":1956,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2232,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2683,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3150,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3291,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3481,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3761,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4062,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4407,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4661,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5249,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6013,"endOffset":6911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3634,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":882,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2458,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":2921,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3431,"endOffset":3583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9554,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1410,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":6766,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":7197,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":7340,"endOffset":7395,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":7569,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":7943,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":8119,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":8591,"endOffset":8865,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":8901,"endOffset":9088,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":9191,"endOffset":9321,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":9372,"endOffset":9527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/browser/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2275,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":158,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.size","ranges":[{"startOffset":430,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.text","ranges":[{"startOffset":624,"endOffset":679,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.fontSize","ranges":[{"startOffset":827,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.font","ranges":[{"startOffset":1018,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.update","ranges":[{"startOffset":1210,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.draw","ranges":[{"startOffset":1401,"endOffset":2273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":854,"endOffset":1786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":674,"endOffset":977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":879,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1003,"endOffset":1064,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1275,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1396,"count":9},{"startOffset":1360,"endOffset":1392,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":2025,"count":15},{"startOffset":1800,"endOffset":2021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5385,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":760,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1783,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2065,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2438,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":2855,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3153,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":3865,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4179,"endOffset":4225,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4329,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":4483,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":4976,"endOffset":5201,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5289,"endOffset":5347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4857,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1066,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":2946,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3188,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3510,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4395,"endOffset":4804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2441,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":753,"endOffset":2388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":781,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":948,"endOffset":2401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2086,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":677,"endOffset":1255,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1499,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1819,"endOffset":2026,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/nodejs/growl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3310,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isCapable","ranges":[{"startOffset":748,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"exports.notify","ranges":[{"startOffset":1103,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"display","ranges":[{"startOffset":1297,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"onCompletion","ranges":[{"startOffset":2278,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"logo","ranges":[{"startOffset":2665,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportBinaries","ranges":[{"startOffset":3114,"endOffset":3308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3163,"count":1},{"startOffset":177,"endOffset":182,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":246,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":344,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1168,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2299,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":92,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/isexe/mode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":66,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":199,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":281,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"checkMode","ranges":[{"startOffset":372,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4486,"count":1},{"startOffset":3557,"endOffset":3604,"count":0}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":83,"endOffset":1002,"count":4},{"startOffset":198,"endOffset":973,"count":0},{"startOffset":977,"endOffset":1001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1041,"endOffset":1378,"count":1},{"startOffset":1331,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1441,"endOffset":3554,"count":4},{"startOffset":1498,"endOffset":1545,"count":0},{"startOffset":1627,"endOffset":3548,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3607,"endOffset":3753,"count":4},{"startOffset":3664,"endOffset":3696,"count":0}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3780,"endOffset":3986,"count":1},{"startOffset":3854,"endOffset":3984,"count":4}],"isBlockCoverage":true},{"functionName":"implementationOfRequireOrImportForUnstableEsm","ranges":[{"startOffset":4016,"endOffset":4485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1329,"endOffset":2179,"count":1},{"startOffset":1520,"endOffset":1577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1635,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1716,"endOffset":1772,"count":9},{"startOffset":1750,"endOffset":1767,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1841,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2052,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2084,"endOffset":2175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"512","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2563,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":544,"endOffset":2499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":2495,"count":4},{"startOffset":926,"endOffset":955,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1135,"endOffset":1265,"count":8}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1397,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1621,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1923,"endOffset":2146,"count":15},{"startOffset":2004,"endOffset":2032,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2216,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2426,"endOffset":2490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":557,"endOffset":870,"count":15},{"startOffset":608,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1031,"endOffset":1133,"count":30}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1215,"endOffset":1317,"count":15},{"startOffset":1290,"endOffset":1316,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1417,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1494,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2051,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2392,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":625,"endOffset":2294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2161,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":648,"endOffset":2114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":460,"endOffset":1360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":152,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":338,"endOffset":475,"count":37},{"startOffset":385,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":610,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":885,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1108,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1308,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7263,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":735,"endOffset":825,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":766,"endOffset":821,"count":1}],"isBlockCoverage":true},{"functionName":"exitMocha","ranges":[{"startOffset":1056,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":2002,"endOffset":2080,"count":12},{"startOffset":2030,"endOffset":2059,"count":6},{"startOffset":2060,"endOffset":2080,"count":6}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2350,"endOffset":3208,"count":1},{"startOffset":2511,"endOffset":3038,"count":0},{"startOffset":3123,"endOffset":3188,"count":0}],"isBlockCoverage":true},{"functionName":"singleRun","ranges":[{"startOffset":3637,"endOffset":3922,"count":1},{"startOffset":3890,"endOffset":3901,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":4327,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":5119,"endOffset":5616,"count":1},{"startOffset":5452,"endOffset":5507,"count":0},{"startOffset":5534,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":6197,"endOffset":7261,"count":2},{"startOffset":6470,"endOffset":6595,"count":0},{"startOffset":6877,"endOffset":7259,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":6626,"endOffset":6782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10757,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1013,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3277,"endOffset":4728,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5520,"endOffset":7787,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8168,"endOffset":9165,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9392,"endOffset":9605,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":9678,"endOffset":9726,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":9799,"endOffset":9847,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":9917,"endOffset":9963,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10124,"endOffset":10312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28364,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13176,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13387,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14166,"endOffset":14930,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15005,"endOffset":15255,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15257,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15770,"endOffset":18071,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18246,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18818,"endOffset":19552,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19554,"endOffset":19604,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20051,"endOffset":21407,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21409,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21647,"endOffset":22247,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22249,"endOffset":22316,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22613,"endOffset":22852,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23050,"endOffset":23318,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23583,"endOffset":23859,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24165,"endOffset":26854,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26920,"endOffset":27060,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27130,"endOffset":27286,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27349,"endOffset":27532,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27534,"endOffset":27932,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28233,"endOffset":28338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1140,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"524","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/chokidar/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"547","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1626,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1658,"endOffset":1668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16274,"count":1},{"startOffset":243,"endOffset":264,"count":0},{"startOffset":282,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":973,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2064,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2552,"endOffset":4873,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":4978,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5294,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5422,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5680,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":5981,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6020,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6326,"endOffset":6555,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6557,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7225,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":8907,"endOffset":10901,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11236,"endOffset":12319,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12384,"endOffset":12857,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12859,"endOffset":13124,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13464,"endOffset":16203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2672,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":696,"endOffset":2202,"count":1},{"startOffset":1438,"endOffset":1465,"count":0},{"startOffset":1681,"endOffset":2030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":837,"endOffset":1347,"count":1},{"startOffset":1153,"endOffset":1343,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":963,"endOffset":1039,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":998,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1063,"endOffset":1097,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1557,"endOffset":1591,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2095,"endOffset":2177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27427,"count":1},{"startOffset":367,"endOffset":384,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":35,"endOffset":267,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311,"endOffset":363,"count":1},{"startOffset":350,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1324,"endOffset":1397,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1348,"endOffset":1392,"count":17}],"isBlockCoverage":true},{"functionName":"minimatch.filter","ranges":[{"startOffset":1667,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1756,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1909,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":3007,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":3080,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":3474,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":4371,"endOffset":4441,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":4461,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":4720,"endOffset":4750,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":4772,"endOffset":4822,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":4844,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":5367,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5382,"endOffset":6588,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":6592,"endOffset":6951,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":7183,"endOffset":12342,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":12346,"endOffset":12417,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12421,"endOffset":23439,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":23443,"endOffset":25800,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":25804,"endOffset":27315,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":27326,"endOffset":27391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4183,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1057,"endOffset":1108,"count":4}],"isBlockCoverage":true},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1618,"endOffset":1747,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1659,"endOffset":1705,"count":12},{"startOffset":1687,"endOffset":1692,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1717,"endOffset":1746,"count":4}],"isBlockCoverage":true},{"functionName":"lookupFiles","ranges":[{"startOffset":2409,"endOffset":4181,"count":1},{"startOffset":2551,"endOffset":3220,"count":0},{"startOffset":3304,"endOffset":3334,"count":0},{"startOffset":3339,"endOffset":3388,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2790,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3447,"endOffset":4160,"count":4},{"startOffset":3600,"endOffset":3731,"count":0},{"startOffset":3738,"endOffset":3775,"count":0},{"startOffset":3804,"endOffset":3986,"count":0},{"startOffset":4109,"endOffset":4130,"count":0}],"isBlockCoverage":true}]},{"scriptId":"555","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19362,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8790,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9062,"endOffset":11106,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11136,"endOffset":11704,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11742,"endOffset":12544,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12572,"endOffset":13089,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13091,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13306,"endOffset":13803,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13836,"endOffset":14921,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":14957,"endOffset":15187,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15225,"endOffset":16372,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16406,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16696,"endOffset":17378,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17445,"endOffset":18836,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18862,"endOffset":19361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2489,"endOffset":2534,"count":0},{"startOffset":2673,"endOffset":2754,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"560","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31809,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2693,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3458,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4060,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4337,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5434,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6376,"endOffset":8021,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8023,"endOffset":9440,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9442,"endOffset":12536,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12538,"endOffset":13146,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":13279,"endOffset":13340,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":13599,"endOffset":13971,"count":22},{"startOffset":13671,"endOffset":13730,"count":0},{"startOffset":13793,"endOffset":13844,"count":0},{"startOffset":13846,"endOffset":13969,"count":0}],"isBlockCoverage":true},{"functionName":"notEqual","ranges":[{"startOffset":14190,"endOffset":14566,"count":1},{"startOffset":14265,"endOffset":14324,"count":0},{"startOffset":14411,"endOffset":14435,"count":0},{"startOffset":14438,"endOffset":14564,"count":0}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":14766,"endOffset":15131,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15337,"endOffset":15710,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":15953,"endOffset":16342,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16591,"endOffset":16988,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17193,"endOffset":17506,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":17718,"endOffset":18039,"count":6},{"startOffset":17799,"endOffset":17858,"count":0},{"startOffset":17893,"endOffset":18037,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":18063,"endOffset":18445,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18449,"endOffset":19168,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19170,"endOffset":22574,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22576,"endOffset":22716,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":22718,"endOffset":23082,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23084,"endOffset":23798,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":23800,"endOffset":25417,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25419,"endOffset":26037,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26039,"endOffset":26690,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":26848,"endOffset":26942,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27121,"endOffset":27233,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27395,"endOffset":27489,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27655,"endOffset":27767,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":27895,"endOffset":29684,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":29687,"endOffset":30770,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":30966,"endOffset":31058,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31266,"endOffset":31372,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31504,"endOffset":31573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17119,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1465,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1760,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2370,"endOffset":11106,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11108,"endOffset":11411,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11452,"endOffset":16148,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16152,"endOffset":16227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16231,"endOffset":17082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1122,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":32,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":244,"endOffset":504,"count":32},{"startOffset":316,"endOffset":375,"count":0},{"startOffset":401,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":508,"endOffset":1090,"count":1},{"startOffset":550,"endOffset":1086,"count":0}],"isBlockCoverage":true}]},{"scriptId":"563","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1497,"endOffset":3420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":534,"endOffset":541,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11931,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2040,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3581,"endOffset":5539,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5574,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6005,"endOffset":6717,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6749,"endOffset":7180,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7219,"endOffset":7700,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7737,"endOffset":8601,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8641,"endOffset":9739,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9777,"endOffset":10523,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10594,"endOffset":11774,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11803,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11881,"endOffset":11930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6048,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":3297,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4616,"endOffset":5067,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5088,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5639,"endOffset":5853,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5855,"endOffset":6047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":611,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":929,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2005,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2660,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3633,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4435,"endOffset":4487,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4723,"endOffset":5868,"count":3},{"startOffset":4798,"endOffset":4924,"count":0},{"startOffset":4956,"endOffset":5097,"count":0},{"startOffset":5181,"endOffset":5312,"count":0},{"startOffset":5405,"endOffset":5418,"count":0},{"startOffset":5468,"endOffset":5630,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6119,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":7385,"endOffset":7889,"count":1},{"startOffset":7528,"endOffset":7801,"count":3},{"startOffset":7560,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8016,"endOffset":8126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2624,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":880,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":958,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1375,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1723,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2437,"endOffset":2622,"count":1},{"startOffset":2539,"endOffset":2601,"count":0}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":2},{"startOffset":1116,"endOffset":1121,"count":1},{"startOffset":1559,"endOffset":1823,"count":7},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1736,"count":1},{"startOffset":1736,"endOffset":1764,"count":6},{"startOffset":1764,"endOffset":1780,"count":1},{"startOffset":1780,"endOffset":1823,"count":5}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":7},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"573","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":7},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":7},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1178,"endOffset":1325,"count":37},{"startOffset":1285,"endOffset":1309,"count":1},{"startOffset":1314,"endOffset":1322,"count":36},{"startOffset":1325,"endOffset":1326,"count":6}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1079,"endOffset":1831,"count":18},{"startOffset":1125,"endOffset":1360,"count":6},{"startOffset":1225,"endOffset":1360,"count":3},{"startOffset":1360,"endOffset":1595,"count":15},{"startOffset":1595,"endOffset":1607,"count":1},{"startOffset":1608,"endOffset":1630,"count":1},{"startOffset":1632,"endOffset":1659,"count":15},{"startOffset":1660,"endOffset":1824,"count":15}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2107,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2636,"endOffset":2842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5238,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":175,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":356,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":444,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":641,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":724,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1762,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2600,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3643,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4322,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4544,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":82,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":240,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":285,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1286,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2921,"count":1},{"startOffset":2899,"endOffset":2920,"count":0}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1379,"endOffset":2714,"count":1},{"startOffset":1742,"endOffset":1762,"count":0},{"startOffset":2426,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2004,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/yargs/yargs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.applyExtends","ranges":[{"startOffset":275,"endOffset":375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107596,"count":1},{"startOffset":106038,"endOffset":106046,"count":0},{"startOffset":106089,"endOffset":106097,"count":0},{"startOffset":106144,"endOffset":106159,"count":0},{"startOffset":106500,"endOffset":106524,"count":0},{"startOffset":106884,"endOffset":106928,"count":0},{"startOffset":107069,"endOffset":107253,"count":0}],"isBlockCoverage":true},{"functionName":"YError","ranges":[{"startOffset":81,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtends","ranges":[{"startOffset":268,"endOffset":1455,"count":1},{"startOffset":437,"endOffset":1299,"count":0},{"startOffset":1367,"endOffset":1401,"count":0}],"isBlockCoverage":true},{"functionName":"checkForCircularExtends","ranges":[{"startOffset":1456,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToDefaultConfig","ranges":[{"startOffset":1643,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":1747,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":2227,"endOffset":3279,"count":253},{"startOffset":2519,"endOffset":2566,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2718,"endOffset":3249,"count":506},{"startOffset":2833,"endOffset":2865,"count":2},{"startOffset":2879,"endOffset":2895,"count":2},{"startOffset":2925,"endOffset":3077,"count":221},{"startOffset":3077,"endOffset":3243,"count":285}],"isBlockCoverage":true},{"functionName":"argsert","ranges":[{"startOffset":3360,"endOffset":5273,"count":255},{"startOffset":3829,"endOffset":3867,"count":295},{"startOffset":3881,"endOffset":3892,"count":48},{"startOffset":3924,"endOffset":3938,"count":8},{"startOffset":3985,"endOffset":4124,"count":0},{"startOffset":4240,"endOffset":4367,"count":0},{"startOffset":5219,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgs","ranges":[{"startOffset":3401,"endOffset":3648,"count":255},{"startOffset":3476,"endOffset":3522,"count":6},{"startOffset":3535,"endOffset":3641,"count":249}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4400,"endOffset":4756,"count":284},{"startOffset":4663,"endOffset":4719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4555,"endOffset":4600,"count":622},{"startOffset":4585,"endOffset":4600,"count":338}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4791,"endOffset":5206,"count":219},{"startOffset":4856,"endOffset":4863,"count":62},{"startOffset":4863,"endOffset":5113,"count":157},{"startOffset":5113,"endOffset":5169,"count":0},{"startOffset":5169,"endOffset":5205,"count":157}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5005,"endOffset":5050,"count":205},{"startOffset":5035,"endOffset":5050,"count":56}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":5274,"endOffset":5442,"count":441},{"startOffset":5328,"endOffset":5359,"count":33},{"startOffset":5359,"endOffset":5417,"count":408},{"startOffset":5387,"endOffset":5417,"count":0},{"startOffset":5417,"endOffset":5441,"count":408}],"isBlockCoverage":true},{"functionName":"argumentTypeError","ranges":[{"startOffset":5443,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":5663,"endOffset":5810,"count":7},{"startOffset":5756,"endOffset":5806,"count":4}],"isBlockCoverage":true},{"functionName":"assertNotStrictEqual","ranges":[{"startOffset":5812,"endOffset":5937,"count":6}],"isBlockCoverage":true},{"functionName":"assertSingleKey","ranges":[{"startOffset":5938,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":6035,"endOffset":6098,"count":30}],"isBlockCoverage":true},{"functionName":"objFilter","ranges":[{"startOffset":6100,"endOffset":6334,"count":26}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":6143,"endOffset":6153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6210,"endOffset":6314,"count":9},{"startOffset":6259,"endOffset":6308,"count":8}],"isBlockCoverage":true},{"functionName":"globalMiddlewareFactory","ranges":[{"startOffset":6336,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6409,"endOffset":7168,"count":1},{"startOffset":6599,"endOffset":6964,"count":0}],"isBlockCoverage":true},{"functionName":"commandMiddlewareFactory","ranges":[{"startOffset":7172,"endOffset":7409,"count":4},{"startOffset":7273,"endOffset":7408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7307,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddleware","ranges":[{"startOffset":7410,"endOffset":8413,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7629,"endOffset":8403,"count":2},{"startOffset":7719,"endOffset":7783,"count":1},{"startOffset":7783,"endOffset":8056,"count":0},{"startOffset":8056,"endOffset":8397,"count":1},{"startOffset":8156,"endOffset":8176,"count":0},{"startOffset":8194,"endOffset":8222,"count":0},{"startOffset":8358,"endOffset":8386,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7830,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7971,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8340,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessArgvBinIndex","ranges":[{"startOffset":8415,"endOffset":8516,"count":1},{"startOffset":8491,"endOffset":8500,"count":0}],"isBlockCoverage":true},{"functionName":"isBundledElectronApp","ranges":[{"startOffset":8517,"endOffset":8603,"count":1},{"startOffset":8578,"endOffset":8600,"count":0}],"isBlockCoverage":true},{"functionName":"isElectronApp","ranges":[{"startOffset":8604,"endOffset":8672,"count":1}],"isBlockCoverage":true},{"functionName":"hideBin","ranges":[{"startOffset":8673,"endOffset":8752,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBin","ranges":[{"startOffset":8753,"endOffset":8836,"count":1}],"isBlockCoverage":true},{"functionName":"whichModule","ranges":[{"startOffset":8968,"endOffset":9273,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":9314,"endOffset":23717,"count":1}],"isBlockCoverage":true},{"functionName":"addHandler","ranges":[{"startOffset":9501,"endOffset":12153,"count":4},{"startOffset":9715,"endOffset":9729,"count":2},{"startOffset":9763,"endOffset":10015,"count":1},{"startOffset":9863,"endOffset":10005,"count":0},{"startOffset":10015,"endOffset":10686,"count":3},{"startOffset":10066,"endOffset":10460,"count":2},{"startOffset":10121,"endOffset":10155,"count":1},{"startOffset":10202,"endOffset":10219,"count":0},{"startOffset":10266,"endOffset":10315,"count":0},{"startOffset":10460,"endOffset":10686,"count":1},{"startOffset":10515,"endOffset":10686,"count":0},{"startOffset":10686,"endOffset":12147,"count":2},{"startOffset":11191,"endOffset":11203,"count":0},{"startOffset":11221,"endOffset":11246,"count":0},{"startOffset":11274,"endOffset":11463,"count":1},{"startOffset":11870,"endOffset":11875,"count":0},{"startOffset":12092,"endOffset":12137,"count":1}],"isBlockCoverage":true},{"functionName":"handler","ranges":[{"startOffset":9719,"endOffset":9728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10813,"endOffset":10845,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10960,"endOffset":11145,"count":3},{"startOffset":11011,"endOffset":11102,"count":1},{"startOffset":11102,"endOffset":11144,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11492,"endOffset":11569,"count":0}],"isBlockCoverage":false},{"functionName":"addDirectory","ranges":[{"startOffset":12179,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12989,"endOffset":13214,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":13219,"endOffset":13339,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":13344,"endOffset":13639,"count":2},{"startOffset":13459,"endOffset":13611,"count":3},{"startOffset":13502,"endOffset":13519,"count":1},{"startOffset":13537,"endOffset":13549,"count":2},{"startOffset":13549,"endOffset":13611,"count":1},{"startOffset":13611,"endOffset":13638,"count":0}],"isBlockCoverage":true},{"functionName":"self.getCommands","ranges":[{"startOffset":13663,"endOffset":13720,"count":2}],"isBlockCoverage":true},{"functionName":"self.getCommandHandlers","ranges":[{"startOffset":13752,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"self.hasDefaultCommand","ranges":[{"startOffset":13797,"endOffset":13819,"count":1}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":13843,"endOffset":18015,"count":1},{"startOffset":14297,"endOffset":14430,"count":0},{"startOffset":14678,"endOffset":14685,"count":0},{"startOffset":15081,"endOffset":15734,"count":0},{"startOffset":16691,"endOffset":16791,"count":0},{"startOffset":17547,"endOffset":17699,"count":0},{"startOffset":17731,"endOffset":17832,"count":0},{"startOffset":17930,"endOffset":17983,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15518,"endOffset":15594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16639,"endOffset":16675,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17027,"endOffset":17178,"count":1},{"startOffset":17084,"endOffset":17160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17207,"endOffset":17407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17435,"endOffset":17531,"count":1}],"isBlockCoverage":true},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":18021,"endOffset":18189,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":18194,"endOffset":18616,"count":1},{"startOffset":18350,"endOffset":18410,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18491,"endOffset":18551,"count":0}],"isBlockCoverage":false},{"functionName":"self.runDefaultBuilderOn","ranges":[{"startOffset":18648,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":19388,"endOffset":20228,"count":1},{"startOffset":19758,"endOffset":19875,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20076,"endOffset":20087,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":20233,"endOffset":20567,"count":1},{"startOffset":20442,"endOffset":20561,"count":0}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":20572,"endOffset":22332,"count":1},{"startOffset":21436,"endOffset":21443,"count":0},{"startOffset":21711,"endOffset":21801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21115,"endOffset":21391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21159,"endOffset":21379,"count":1},{"startOffset":21260,"endOffset":21284,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21927,"endOffset":22010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22058,"endOffset":22314,"count":14},{"startOffset":22123,"endOffset":22300,"count":1},{"startOffset":22194,"endOffset":22232,"count":0}],"isBlockCoverage":true},{"functionName":"self.cmdToParseOptions","ranges":[{"startOffset":22362,"endOffset":23211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22602,"endOffset":22893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22928,"endOffset":23174,"count":1}],"isBlockCoverage":true},{"functionName":"self.reset","ranges":[{"startOffset":23230,"endOffset":23346,"count":1}],"isBlockCoverage":true},{"functionName":"self.freeze","ranges":[{"startOffset":23390,"endOffset":23510,"count":1}],"isBlockCoverage":true},{"functionName":"self.unfreeze","ranges":[{"startOffset":23532,"endOffset":23697,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderDefinition","ranges":[{"startOffset":23718,"endOffset":23886,"count":1},{"startOffset":23805,"endOffset":23833,"count":0},{"startOffset":23834,"endOffset":23882,"count":0}],"isBlockCoverage":true},{"functionName":"isCommandAndAliases","ranges":[{"startOffset":23887,"endOffset":24039,"count":1},{"startOffset":23998,"endOffset":24037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23941,"endOffset":23967,"count":2}],"isBlockCoverage":true},{"functionName":"isCommandBuilderCallback","ranges":[{"startOffset":24040,"endOffset":24128,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderOptionDefinitions","ranges":[{"startOffset":24129,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandHandlerDefinition","ranges":[{"startOffset":24225,"endOffset":24328,"count":3},{"startOffset":24303,"endOffset":24325,"count":2}],"isBlockCoverage":true},{"functionName":"setBlocking","ranges":[{"startOffset":24330,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":24702,"endOffset":43891,"count":1}],"isBlockCoverage":true},{"functionName":"failFn","ranges":[{"startOffset":24823,"endOffset":24872,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFailFn","ranges":[{"startOffset":24959,"endOffset":25277,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":25326,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"self.usage","ranges":[{"startOffset":26513,"endOffset":26763,"count":1},{"startOffset":26563,"endOffset":26658,"count":0},{"startOffset":26728,"endOffset":26733,"count":0}],"isBlockCoverage":true},{"functionName":"self.getUsage","ranges":[{"startOffset":26785,"endOffset":26821,"count":1}],"isBlockCoverage":true},{"functionName":"self.getUsageDisabled","ranges":[{"startOffset":26851,"endOffset":26894,"count":1}],"isBlockCoverage":true},{"functionName":"self.getPositionalGroupName","ranges":[{"startOffset":26930,"endOffset":26978,"count":84}],"isBlockCoverage":true},{"functionName":"self.example","ranges":[{"startOffset":27022,"endOffset":27100,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":27144,"endOffset":27478,"count":2},{"startOffset":27244,"endOffset":27391,"count":1},{"startOffset":27432,"endOffset":27437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27282,"endOffset":27379,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":27503,"endOffset":27517,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":27566,"endOffset":27994,"count":48},{"startOffset":27641,"endOffset":27745,"count":0},{"startOffset":27794,"endOffset":27919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27673,"endOffset":27733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27839,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"self.getDescriptions","ranges":[{"startOffset":28023,"endOffset":28041,"count":2}],"isBlockCoverage":true},{"functionName":"self.epilog","ranges":[{"startOffset":28083,"endOffset":28124,"count":1}],"isBlockCoverage":true},{"functionName":"self.wrap","ranges":[{"startOffset":28181,"endOffset":28241,"count":1}],"isBlockCoverage":true},{"functionName":"getWrap","ranges":[{"startOffset":28247,"endOffset":28390,"count":1},{"startOffset":28290,"endOffset":28363,"count":0}],"isBlockCoverage":true},{"functionName":"self.deferY18nLookup","ranges":[{"startOffset":28472,"endOffset":28506,"count":3}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":28524,"endOffset":38490,"count":1},{"startOffset":28585,"endOffset":28610,"count":0},{"startOffset":28720,"endOffset":28750,"count":0},{"startOffset":29989,"endOffset":30322,"count":0},{"startOffset":30362,"endOffset":32088,"count":0},{"startOffset":32143,"endOffset":32148,"count":0},{"startOffset":32194,"endOffset":32199,"count":0},{"startOffset":37472,"endOffset":38238,"count":0},{"startOffset":38271,"endOffset":38434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29365,"endOffset":29476,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29714,"endOffset":29947,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30698,"endOffset":30732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30778,"endOffset":32054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32229,"endOffset":32355,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32297,"endOffset":32354,"count":1804},{"startOffset":32328,"endOffset":32333,"count":748}],"isBlockCoverage":true},{"functionName":"isLongSwitch","ranges":[{"startOffset":32575,"endOffset":32606,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32680,"endOffset":32721,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32740,"endOffset":33283,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32874,"endOffset":33221,"count":44},{"startOffset":32948,"endOffset":32959,"count":23},{"startOffset":32959,"endOffset":33048,"count":21},{"startOffset":33048,"endOffset":33179,"count":861},{"startOffset":33100,"endOffset":33105,"count":357},{"startOffset":33145,"endOffset":33161,"count":0},{"startOffset":33179,"endOffset":33220,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33305,"endOffset":33354,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33373,"endOffset":34439,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33461,"endOffset":34363,"count":44},{"startOffset":33557,"endOffset":33562,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33589,"endOffset":34085,"count":69},{"startOffset":33690,"endOffset":33700,"count":1},{"startOffset":33700,"endOffset":34067,"count":68},{"startOffset":33808,"endOffset":33916,"count":0},{"startOffset":33993,"endOffset":33999,"count":48},{"startOffset":34032,"endOffset":34037,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34113,"endOffset":34287,"count":29},{"startOffset":34187,"endOffset":34190,"count":5},{"startOffset":34211,"endOffset":34287,"count":24},{"startOffset":34255,"endOffset":34258,"count":2},{"startOffset":34283,"endOffset":34287,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34512,"endOffset":34574,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34594,"endOffset":34685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34650,"endOffset":34684,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34773,"endOffset":34835,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34862,"endOffset":35142,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34937,"endOffset":35126,"count":43},{"startOffset":34999,"endOffset":35108,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35187,"endOffset":37440,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35300,"endOffset":37406,"count":44},{"startOffset":35401,"endOffset":35406,"count":0},{"startOffset":35523,"endOffset":35579,"count":0},{"startOffset":35651,"endOffset":35679,"count":24},{"startOffset":35749,"endOffset":35775,"count":0},{"startOffset":35846,"endOffset":35873,"count":8},{"startOffset":35947,"endOffset":35974,"count":2},{"startOffset":36044,"endOffset":36070,"count":10},{"startOffset":36141,"endOffset":36168,"count":2},{"startOffset":36466,"endOffset":36507,"count":0},{"startOffset":36609,"endOffset":36632,"count":0},{"startOffset":36725,"endOffset":36796,"count":0},{"startOffset":37341,"endOffset":37392,"count":0}],"isBlockCoverage":true},{"functionName":"deprecatedExtra","ranges":[{"startOffset":36209,"endOffset":36363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37540,"endOffset":37631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37663,"endOffset":38204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38324,"endOffset":38364,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":38496,"endOffset":38973,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38647,"endOffset":38655,"count":454}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38690,"endOffset":38843,"count":454},{"startOffset":38752,"endOffset":38784,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAliases","ranges":[{"startOffset":38978,"endOffset":40022,"count":1},{"startOffset":39148,"endOffset":39153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39163,"endOffset":40014,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39211,"endOffset":40002,"count":26},{"startOffset":39283,"endOffset":39323,"count":0},{"startOffset":39390,"endOffset":39438,"count":0},{"startOffset":39512,"endOffset":39531,"count":0},{"startOffset":39603,"endOffset":39620,"count":0},{"startOffset":39693,"endOffset":39711,"count":0},{"startOffset":39787,"endOffset":39808,"count":0},{"startOffset":39880,"endOffset":39897,"count":0},{"startOffset":39970,"endOffset":39988,"count":0}],"isBlockCoverage":true},{"functionName":"self.cacheHelpMessage","ranges":[{"startOffset":40078,"endOffset":40138,"count":1}],"isBlockCoverage":true},{"functionName":"self.clearCachedHelpMessage","ranges":[{"startOffset":40174,"endOffset":40232,"count":1}],"isBlockCoverage":true},{"functionName":"addUngroupedKeys","ranges":[{"startOffset":40238,"endOffset":40737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40397,"endOffset":40478,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40502,"endOffset":40701,"count":44},{"startOffset":40628,"endOffset":40691,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40591,"endOffset":40625,"count":48}],"isBlockCoverage":true},{"functionName":"filterHiddenOptions","ranges":[{"startOffset":40742,"endOffset":40918,"count":98},{"startOffset":40844,"endOffset":40910,"count":2}],"isBlockCoverage":true},{"functionName":"self.showHelp","ranges":[{"startOffset":40939,"endOffset":41158,"count":0}],"isBlockCoverage":false},{"functionName":"self.functionDescription","ranges":[{"startOffset":41191,"endOffset":41377,"count":0}],"isBlockCoverage":false},{"functionName":"stringifiedValues","ranges":[{"startOffset":41408,"endOffset":41806,"count":0}],"isBlockCoverage":false},{"functionName":"defaultString","ranges":[{"startOffset":41812,"endOffset":42459,"count":44},{"startOffset":41940,"endOffset":41962,"count":36},{"startOffset":41976,"endOffset":41988,"count":31},{"startOffset":41988,"endOffset":42021,"count":13},{"startOffset":42021,"endOffset":42074,"count":5},{"startOffset":42074,"endOffset":42424,"count":8},{"startOffset":42142,"endOffset":42227,"count":2},{"startOffset":42244,"endOffset":42338,"count":3},{"startOffset":42355,"endOffset":42400,"count":3},{"startOffset":42424,"endOffset":42458,"count":13}],"isBlockCoverage":true},{"functionName":"windowWidth","ranges":[{"startOffset":42464,"endOffset":42690,"count":0}],"isBlockCoverage":false},{"functionName":"self.version","ranges":[{"startOffset":42734,"endOffset":42771,"count":3}],"isBlockCoverage":true},{"functionName":"self.showVersion","ranges":[{"startOffset":42796,"endOffset":42889,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":42908,"endOffset":43213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43164,"endOffset":43184,"count":2}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":43257,"endOffset":43507,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":43529,"endOffset":43871,"count":1}],"isBlockCoverage":true},{"functionName":"isIndentedText","ranges":[{"startOffset":43892,"endOffset":43962,"count":1146}],"isBlockCoverage":true},{"functionName":"addIndentation","ranges":[{"startOffset":43963,"endOffset":44147,"count":23},{"startOffset":44043,"endOffset":44104,"count":0}],"isBlockCoverage":true},{"functionName":"getIndentation","ranges":[{"startOffset":44148,"endOffset":44237,"count":498},{"startOffset":44212,"endOffset":44230,"count":282},{"startOffset":44231,"endOffset":44234,"count":216}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":44238,"endOffset":44316,"count":625},{"startOffset":44295,"endOffset":44306,"count":282},{"startOffset":44307,"endOffset":44313,"count":343}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":45697,"endOffset":50817,"count":1},{"startOffset":45973,"endOffset":46018,"count":0},{"startOffset":46056,"endOffset":46104,"count":0}],"isBlockCoverage":true},{"functionName":"setParsed","ranges":[{"startOffset":45860,"endOffset":45928,"count":1}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":46132,"endOffset":50219,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":50257,"endOffset":50686,"count":0}],"isBlockCoverage":false},{"functionName":"self.registerFunction","ranges":[{"startOffset":50751,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"isSyncCompletionFunction","ranges":[{"startOffset":50818,"endOffset":50917,"count":0}],"isBlockCoverage":false},{"functionName":"levenshtein","ranges":[{"startOffset":50919,"endOffset":51642,"count":0}],"isBlockCoverage":false},{"functionName":"validation","ranges":[{"startOffset":51683,"endOffset":63616,"count":1}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51828,"endOffset":53555,"count":1},{"startOffset":51982,"endOffset":52001,"count":0},{"startOffset":52112,"endOffset":52187,"count":0},{"startOffset":52189,"endOffset":53549,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":53584,"endOffset":53872,"count":1},{"startOffset":53664,"endOffset":53866,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":53903,"endOffset":54878,"count":1},{"startOffset":54082,"endOffset":54321,"count":0},{"startOffset":54343,"endOffset":54872,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":54908,"endOffset":56092,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":56121,"endOffset":56838,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":56879,"endOffset":57325,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":57353,"endOffset":58401,"count":1},{"startOffset":57526,"endOffset":58400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57561,"endOffset":58012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58187,"endOffset":58368,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":58441,"endOffset":58549,"count":1}],"isBlockCoverage":true},{"functionName":"customChecks","ranges":[{"startOffset":58575,"endOffset":59234,"count":1},{"startOffset":58833,"endOffset":58952,"count":0},{"startOffset":58978,"endOffset":59071,"count":0},{"startOffset":59148,"endOffset":59218,"count":0}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":59277,"endOffset":59940,"count":0}],"isBlockCoverage":false},{"functionName":"getImplied","ranges":[{"startOffset":59964,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"keyExists","ranges":[{"startOffset":60023,"endOffset":60422,"count":0}],"isBlockCoverage":false},{"functionName":"implications","ranges":[{"startOffset":60447,"endOffset":61176,"count":1},{"startOffset":60986,"endOffset":61170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60544,"endOffset":60953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61075,"endOffset":61129,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":61225,"endOffset":61837,"count":16},{"startOffset":61378,"endOffset":61492,"count":0},{"startOffset":61574,"endOffset":61628,"count":4},{"startOffset":61667,"endOffset":61742,"count":2},{"startOffset":61742,"endOffset":61821,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61417,"endOffset":61480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61699,"endOffset":61726,"count":12}],"isBlockCoverage":true},{"functionName":"self.getConflicting","ranges":[{"startOffset":61865,"endOffset":61882,"count":0}],"isBlockCoverage":false},{"functionName":"conflictingFn","ranges":[{"startOffset":61907,"endOffset":62329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61972,"endOffset":62321,"count":15},{"startOffset":62015,"endOffset":62311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62058,"endOffset":62295,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":62360,"endOffset":62981,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":63000,"endOffset":63231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63067,"endOffset":63087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63135,"endOffset":63155,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63189,"endOffset":63202,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":63275,"endOffset":63401,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":63423,"endOffset":63596,"count":1}],"isBlockCoverage":true},{"functionName":"YargsWithShim","ranges":[{"startOffset":63630,"endOffset":63701,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs","ranges":[{"startOffset":63702,"endOffset":105257,"count":1},{"startOffset":64430,"endOffset":64502,"count":0},{"startOffset":64784,"endOffset":64921,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.scriptName","ranges":[{"startOffset":64155,"endOffset":64273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64540,"endOffset":64665,"count":1},{"startOffset":64651,"endOffset":64654,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getContext","ranges":[{"startOffset":65023,"endOffset":65036,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.exit","ranges":[{"startOffset":65107,"endOffset":65244,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.completion","ranges":[{"startOffset":65302,"endOffset":65839,"count":0}],"isBlockCoverage":false},{"functionName":"resetOptions","ranges":[{"startOffset":65895,"endOffset":68249,"count":2},{"startOffset":65985,"endOffset":65990,"count":1},{"startOffset":66064,"endOffset":66079,"count":1},{"startOffset":66080,"endOffset":66084,"count":1},{"startOffset":66155,"endOffset":66178,"count":1},{"startOffset":66191,"endOffset":66195,"count":1},{"startOffset":67651,"endOffset":67679,"count":1},{"startOffset":67680,"endOffset":67707,"count":1},{"startOffset":67757,"endOffset":67790,"count":1},{"startOffset":67803,"endOffset":67844,"count":1},{"startOffset":67888,"endOffset":67907,"count":1},{"startOffset":67920,"endOffset":67984,"count":1},{"startOffset":68025,"endOffset":68085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66262,"endOffset":66414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66483,"endOffset":66707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67323,"endOffset":67418,"count":16},{"startOffset":67370,"endOffset":67375,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67384,"endOffset":67406,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67451,"endOffset":67542,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67510,"endOffset":67530,"count":4}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":68304,"endOffset":68860,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":68865,"endOffset":69563,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.boolean","ranges":[{"startOffset":69583,"endOffset":69738,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.array","ranges":[{"startOffset":69757,"endOffset":69910,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.number","ranges":[{"startOffset":69930,"endOffset":70084,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.normalize","ranges":[{"startOffset":70107,"endOffset":70264,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.count","ranges":[{"startOffset":70283,"endOffset":70436,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.string","ranges":[{"startOffset":70456,"endOffset":70610,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.requiresArg","ranges":[{"startOffset":70635,"endOffset":70968,"count":14},{"startOffset":70790,"endOffset":70826,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.skipValidation","ranges":[{"startOffset":70996,"endOffset":71158,"count":0}],"isBlockCoverage":false},{"functionName":"populateParserHintArray","ranges":[{"startOffset":71164,"endOffset":71363,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71264,"endOffset":71355,"count":49}],"isBlockCoverage":true},{"functionName":"Yargs.self.nargs","ranges":[{"startOffset":71381,"endOffset":71595,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.choices","ranges":[{"startOffset":71616,"endOffset":71835,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.alias","ranges":[{"startOffset":71854,"endOffset":72069,"count":24}],"isBlockCoverage":true},{"functionName":"Yargs.self.default.self.defaults","ranges":[{"startOffset":72106,"endOffset":72786,"count":8},{"startOffset":72289,"endOffset":72408,"count":0},{"startOffset":72450,"endOffset":72673,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.describe","ranges":[{"startOffset":72808,"endOffset":73003,"count":48}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":73009,"endOffset":73137,"count":48}],"isBlockCoverage":true},{"functionName":"demandOption","ranges":[{"startOffset":73142,"endOffset":73383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.coerce","ranges":[{"startOffset":73440,"endOffset":73662,"count":6}],"isBlockCoverage":true},{"functionName":"populateParserHintSingleValueDictionary","ranges":[{"startOffset":73668,"endOffset":73891,"count":76}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":73810,"endOffset":73883,"count":76}],"isBlockCoverage":true},{"functionName":"populateParserHintArrayDictionary","ranges":[{"startOffset":73896,"endOffset":74148,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74032,"endOffset":74140,"count":23}],"isBlockCoverage":true},{"functionName":"populateParserHintDictionary","ranges":[{"startOffset":74153,"endOffset":74622,"count":100},{"startOffset":74270,"endOffset":74363,"count":0},{"startOffset":74422,"endOffset":74530,"count":1},{"startOffset":74469,"endOffset":74520,"count":21},{"startOffset":74530,"endOffset":74616,"count":99}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74296,"endOffset":74351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74382,"endOffset":74414,"count":100}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":74627,"endOffset":74747,"count":148},{"startOffset":74700,"endOffset":74721,"count":0}],"isBlockCoverage":true},{"functionName":"deleteFromParserHintObject","ranges":[{"startOffset":74752,"endOffset":75313,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74837,"endOffset":75252,"count":46},{"startOffset":74929,"endOffset":74936,"count":2},{"startOffset":74936,"endOffset":75017,"count":44},{"startOffset":75017,"endOffset":75139,"count":18},{"startOffset":75085,"endOffset":75125,"count":2},{"startOffset":75139,"endOffset":75242,"count":26},{"startOffset":75187,"endOffset":75242,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74869,"endOffset":74901,"count":46}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":75332,"endOffset":76111,"count":2},{"startOffset":75520,"endOffset":75542,"count":1},{"startOffset":75544,"endOffset":75770,"count":1},{"startOffset":75716,"endOffset":75721,"count":0},{"startOffset":75770,"endOffset":75810,"count":1},{"startOffset":75810,"endOffset":75877,"count":0},{"startOffset":75877,"endOffset":75963,"count":1},{"startOffset":75994,"endOffset":75999,"count":0},{"startOffset":76000,"endOffset":76007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76017,"endOffset":76082,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.example","ranges":[{"startOffset":76132,"endOffset":76460,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.command","ranges":[{"startOffset":76481,"endOffset":76865,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.commandDir","ranges":[{"startOffset":76889,"endOffset":77151,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":77202,"endOffset":78178,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":78205,"endOffset":78685,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDemandedOptions","ranges":[{"startOffset":78717,"endOffset":78794,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self.getDemandedCommands","ranges":[{"startOffset":78827,"endOffset":78905,"count":2}],"isBlockCoverage":true},{"functionName":"deprecateOption","ranges":[{"startOffset":78934,"endOffset":79140,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDeprecatedOptions","ranges":[{"startOffset":79174,"endOffset":79253,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.implies","ranges":[{"startOffset":79274,"endOffset":79456,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.conflicts","ranges":[{"startOffset":79479,"endOffset":79656,"count":4}],"isBlockCoverage":true},{"functionName":"Yargs.self.usage","ranges":[{"startOffset":79675,"endOffset":80345,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.epilogue.self.epilog","ranges":[{"startOffset":80381,"endOffset":80507,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.fail","ranges":[{"startOffset":80525,"endOffset":80647,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.onFinishCommand","ranges":[{"startOffset":80676,"endOffset":80805,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getHandlerFinishCommand","ranges":[{"startOffset":80842,"endOffset":80868,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.check","ranges":[{"startOffset":80887,"endOffset":81060,"count":1}],"isBlockCoverage":true},{"functionName":"global","ranges":[{"startOffset":81080,"endOffset":81557,"count":16},{"startOffset":81358,"endOffset":81530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":81316,"endOffset":81346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81402,"endOffset":81518,"count":0}],"isBlockCoverage":false},{"functionName":"pkgConf","ranges":[{"startOffset":81578,"endOffset":82055,"count":0}],"isBlockCoverage":false},{"functionName":"pkgUp","ranges":[{"startOffset":82082,"endOffset":82959,"count":1},{"startOffset":82185,"endOffset":82204,"count":0},{"startOffset":82361,"endOffset":82434,"count":0},{"startOffset":82875,"endOffset":82892,"count":0},{"startOffset":82919,"endOffset":82924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82491,"endOffset":82716,"count":2},{"startOffset":82561,"endOffset":82702,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":83030,"endOffset":84057,"count":1},{"startOffset":83258,"endOffset":83453,"count":0},{"startOffset":83500,"endOffset":83589,"count":0},{"startOffset":83638,"endOffset":83719,"count":0},{"startOffset":83812,"endOffset":83832,"count":0},{"startOffset":83973,"endOffset":84008,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._getParseContext","ranges":[{"startOffset":84087,"endOffset":84111,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasParseCallback","ranges":[{"startOffset":84142,"endOffset":84157,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":84192,"endOffset":87432,"count":44},{"startOffset":84332,"endOffset":84444,"count":1},{"startOffset":84444,"endOffset":87405,"count":43},{"startOffset":84501,"endOffset":84542,"count":0},{"startOffset":84623,"endOffset":84650,"count":0},{"startOffset":84741,"endOffset":84810,"count":0},{"startOffset":84905,"endOffset":84962,"count":0},{"startOffset":84997,"endOffset":85121,"count":0},{"startOffset":85153,"endOffset":85220,"count":4},{"startOffset":85255,"endOffset":85318,"count":8},{"startOffset":85362,"endOffset":85425,"count":0},{"startOffset":85467,"endOffset":85526,"count":0},{"startOffset":85555,"endOffset":85622,"count":1},{"startOffset":85654,"endOffset":85706,"count":2},{"startOffset":85736,"endOffset":85799,"count":0},{"startOffset":85828,"endOffset":85889,"count":6},{"startOffset":85917,"endOffset":85976,"count":40},{"startOffset":86032,"endOffset":86158,"count":0},{"startOffset":86210,"endOffset":86332,"count":0},{"startOffset":86386,"endOffset":86510,"count":0},{"startOffset":86564,"endOffset":86688,"count":0},{"startOffset":86740,"endOffset":86788,"count":0},{"startOffset":86838,"endOffset":86899,"count":0},{"startOffset":86940,"endOffset":87029,"count":5},{"startOffset":87066,"endOffset":87123,"count":0},{"startOffset":87181,"endOffset":87192,"count":0},{"startOffset":87260,"endOffset":87307,"count":1},{"startOffset":87341,"endOffset":87395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84371,"endOffset":84432,"count":42}],"isBlockCoverage":true},{"functionName":"Yargs.self.getOptions","ranges":[{"startOffset":87456,"endOffset":87469,"count":105}],"isBlockCoverage":true},{"functionName":"Yargs.self.positional","ranges":[{"startOffset":87493,"endOffset":89136,"count":1},{"startOffset":87619,"endOffset":87728,"count":0},{"startOffset":88450,"endOffset":88492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88090,"endOffset":88311,"count":3},{"startOffset":88189,"endOffset":88241,"count":1},{"startOffset":88259,"endOffset":88274,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88676,"endOffset":89030,"count":4},{"startOffset":88778,"endOffset":88883,"count":1},{"startOffset":88853,"endOffset":88869,"count":0},{"startOffset":88883,"endOffset":89020,"count":3},{"startOffset":88940,"endOffset":88956,"count":0},{"startOffset":88978,"endOffset":89006,"count":0}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":89155,"endOffset":89676,"count":41},{"startOffset":89384,"endOffset":89442,"count":0},{"startOffset":89506,"endOffset":89511,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89533,"endOffset":89647,"count":247},{"startOffset":89585,"endOffset":89598,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getGroups","ranges":[{"startOffset":89699,"endOffset":89747,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.env","ranges":[{"startOffset":89764,"endOffset":90002,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.wrap","ranges":[{"startOffset":90020,"endOffset":90162,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.strict","ranges":[{"startOffset":90206,"endOffset":90348,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrict","ranges":[{"startOffset":90371,"endOffset":90383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictCommands","ranges":[{"startOffset":90443,"endOffset":90593,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictCommands","ranges":[{"startOffset":90624,"endOffset":90644,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictOptions","ranges":[{"startOffset":90702,"endOffset":90851,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictOptions","ranges":[{"startOffset":90881,"endOffset":90900,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":90960,"endOffset":91113,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.getParserConfiguration","ranges":[{"startOffset":91149,"endOffset":91167,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.showHelp","ranges":[{"startOffset":91189,"endOffset":91534,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":91582,"endOffset":92607,"count":2},{"startOffset":91775,"endOffset":91909,"count":1},{"startOffset":91946,"endOffset":92322,"count":1},{"startOffset":92070,"endOffset":92217,"count":0},{"startOffset":92259,"endOffset":92322,"count":0},{"startOffset":92374,"endOffset":92393,"count":0},{"startOffset":92413,"endOffset":92462,"count":1},{"startOffset":92492,"endOffset":92504,"count":0}],"isBlockCoverage":true},{"functionName":"guessVersion","ranges":[{"startOffset":92613,"endOffset":92714,"count":1},{"startOffset":92695,"endOffset":92707,"count":0}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":92773,"endOffset":93338,"count":2},{"startOffset":92941,"endOffset":93029,"count":1},{"startOffset":93066,"endOffset":93137,"count":0},{"startOffset":93180,"endOffset":93185,"count":1},{"startOffset":93186,"endOffset":93202,"count":1},{"startOffset":93270,"endOffset":93309,"count":1}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":93484,"endOffset":93993,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":94011,"endOffset":94153,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":94181,"endOffset":94385,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.exitProcess","ranges":[{"startOffset":94438,"endOffset":94582,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getExitProcess","ranges":[{"startOffset":94610,"endOffset":94627,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.showCompletionScript","ranges":[{"startOffset":94661,"endOffset":94909,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCompletion","ranges":[{"startOffset":94936,"endOffset":95084,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.locale","ranges":[{"startOffset":95104,"endOffset":95366,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.updateStrings.self.updateLocale","ranges":[{"startOffset":95413,"endOffset":95572,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.detectLocale","ranges":[{"startOffset":95627,"endOffset":95762,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDetectLocale","ranges":[{"startOffset":95791,"endOffset":95809,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":95841,"endOffset":96077,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":96087,"endOffset":96327,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._getLoggerInstance","ranges":[{"startOffset":96366,"endOffset":96379,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasOutput","ranges":[{"startOffset":96403,"endOffset":96418,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self._setHasOutput","ranges":[{"startOffset":96445,"endOffset":96484,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.recommendCommands","ranges":[{"startOffset":96542,"endOffset":96698,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getUsageInstance","ranges":[{"startOffset":96728,"endOffset":96741,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.getValidationInstance","ranges":[{"startOffset":96776,"endOffset":96794,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCommandInstance","ranges":[{"startOffset":96826,"endOffset":96841,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.terminalWidth","ranges":[{"startOffset":96868,"endOffset":96947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":97004,"endOffset":97038,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":97096,"endOffset":102725,"count":2},{"startOffset":97242,"endOffset":97256,"count":1},{"startOffset":97788,"endOffset":97833,"count":0},{"startOffset":98002,"endOffset":98105,"count":0},{"startOffset":98221,"endOffset":98226,"count":0},{"startOffset":98347,"endOffset":98442,"count":0},{"startOffset":98723,"endOffset":98793,"count":0},{"startOffset":98868,"endOffset":100055,"count":1},{"startOffset":99107,"endOffset":99135,"count":0},{"startOffset":99137,"endOffset":99343,"count":0},{"startOffset":99834,"endOffset":99899,"count":0},{"startOffset":99900,"endOffset":99922,"count":0},{"startOffset":99924,"endOffset":100037,"count":0},{"startOffset":100055,"endOffset":100094,"count":1},{"startOffset":100094,"endOffset":100151,"count":0},{"startOffset":100152,"endOffset":100194,"count":0},{"startOffset":100196,"endOffset":100378,"count":0},{"startOffset":100392,"endOffset":100632,"count":0},{"startOffset":100632,"endOffset":100669,"count":1},{"startOffset":100669,"endOffset":101256,"count":0},{"startOffset":101256,"endOffset":102007,"count":1},{"startOffset":102007,"endOffset":102043,"count":0},{"startOffset":102045,"endOffset":102188,"count":0},{"startOffset":102188,"endOffset":102222,"count":1},{"startOffset":102222,"endOffset":102466,"count":0},{"startOffset":102485,"endOffset":102639,"count":0},{"startOffset":102639,"endOffset":102724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98256,"endOffset":98273,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100946,"endOffset":101151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101329,"endOffset":101958,"count":15},{"startOffset":101378,"endOffset":101390,"count":0},{"startOffset":101392,"endOffset":101634,"count":0},{"startOffset":101683,"endOffset":101695,"count":0},{"startOffset":101697,"endOffset":101940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102103,"endOffset":102172,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._postProcess","ranges":[{"startOffset":102751,"endOffset":103332,"count":3},{"startOffset":102857,"endOffset":102869,"count":1},{"startOffset":102869,"endOffset":102913,"count":2},{"startOffset":102913,"endOffset":103201,"count":1},{"startOffset":103239,"endOffset":103331,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self._copyDoubleDash","ranges":[{"startOffset":103361,"endOffset":103593,"count":1},{"startOffset":103439,"endOffset":103592,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._parsePositionalNumbers","ranges":[{"startOffset":103630,"endOffset":103987,"count":1},{"startOffset":103680,"endOffset":103692,"count":0},{"startOffset":103768,"endOffset":103960,"count":0}],"isBlockCoverage":true},{"functionName":"runValidation","ranges":[{"startOffset":104015,"endOffset":104874,"count":1},{"startOffset":104146,"endOffset":104184,"count":0},{"startOffset":104344,"endOffset":104426,"count":0},{"startOffset":104446,"endOffset":104470,"count":0},{"startOffset":104472,"endOffset":104574,"count":0},{"startOffset":104607,"endOffset":104694,"count":0}],"isBlockCoverage":true},{"functionName":"guessLocale","ranges":[{"startOffset":104880,"endOffset":105201,"count":2},{"startOffset":104951,"endOffset":105042,"count":0},{"startOffset":105043,"endOffset":105079,"count":0},{"startOffset":105080,"endOffset":105120,"count":0},{"startOffset":105121,"endOffset":105143,"count":0}],"isBlockCoverage":true},{"functionName":"rebase","ranges":[{"startOffset":105273,"endOffset":105319,"count":1}],"isBlockCoverage":true},{"functionName":"isYargsInstance","ranges":[{"startOffset":105321,"endOffset":105406,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":105816,"endOffset":105865,"count":4}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":106229,"endOffset":106247,"count":2}],"isBlockCoverage":true},{"functionName":"execPath","ranges":[{"startOffset":106293,"endOffset":106315,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":106331,"endOffset":106384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":175},{"startOffset":676,"endOffset":755,"count":0},{"startOffset":913,"endOffset":929,"count":0},{"startOffset":946,"endOffset":964,"count":0},{"startOffset":1025,"endOffset":1048,"count":0},{"startOffset":1157,"endOffset":1176,"count":0},{"startOffset":1178,"endOffset":1535,"count":0},{"startOffset":1655,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":807,"endOffset":822,"count":175}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":949,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":1},{"startOffset":3453,"endOffset":3601,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":1},{"startOffset":5145,"endOffset":5411,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":1},{"startOffset":5645,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5919,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":1},{"startOffset":6628,"endOffset":6677,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42313,"count":1},{"startOffset":41005,"endOffset":41049,"count":0},{"startOffset":41190,"endOffset":41388,"count":0},{"startOffset":41425,"endOffset":41429,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":39},{"startOffset":172,"endOffset":200,"count":0},{"startOffset":297,"endOffset":323,"count":0},{"startOffset":325,"endOffset":352,"count":0},{"startOffset":511,"endOffset":537,"count":0},{"startOffset":564,"endOffset":946,"count":470},{"startOffset":633,"endOffset":727,"count":39},{"startOffset":752,"endOffset":783,"count":431},{"startOffset":768,"endOffset":782,"count":392},{"startOffset":785,"endOffset":837,"count":39},{"startOffset":837,"endOffset":936,"count":431}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":34},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":368},{"startOffset":1289,"endOffset":1297,"count":34},{"startOffset":1299,"endOffset":1377,"count":34},{"startOffset":1377,"endOffset":1441,"count":334}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":26},{"startOffset":1552,"endOffset":1565,"count":0},{"startOffset":1605,"endOffset":1617,"count":2},{"startOffset":1617,"endOffset":1660,"count":24},{"startOffset":1660,"endOffset":1672,"count":0},{"startOffset":1672,"endOffset":1707,"count":24},{"startOffset":1707,"endOffset":1720,"count":0},{"startOffset":1720,"endOffset":1785,"count":24}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":3},{"startOffset":1940,"endOffset":2572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":4},{"startOffset":1920,"endOffset":1928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39528,"count":3},{"startOffset":4641,"endOffset":4646,"count":0},{"startOffset":4801,"endOffset":4806,"count":0},{"startOffset":4930,"endOffset":4945,"count":0},{"startOffset":5604,"endOffset":5609,"count":0},{"startOffset":6247,"endOffset":6252,"count":0},{"startOffset":6408,"endOffset":6413,"count":0},{"startOffset":6571,"endOffset":6576,"count":0},{"startOffset":6733,"endOffset":6738,"count":0},{"startOffset":6898,"endOffset":6903,"count":0},{"startOffset":7756,"endOffset":7918,"count":0},{"startOffset":9037,"endOffset":9089,"count":0},{"startOffset":9144,"endOffset":9222,"count":0},{"startOffset":9330,"endOffset":9886,"count":0},{"startOffset":9934,"endOffset":9970,"count":0},{"startOffset":9972,"endOffset":10242,"count":0},{"startOffset":10283,"endOffset":10349,"count":2},{"startOffset":10351,"endOffset":11560,"count":1},{"startOffset":10634,"endOffset":11528,"count":0},{"startOffset":11560,"endOffset":15980,"count":2},{"startOffset":11605,"endOffset":11804,"count":0},{"startOffset":11847,"endOffset":11870,"count":0},{"startOffset":11872,"endOffset":12479,"count":0},{"startOffset":12522,"endOffset":12545,"count":0},{"startOffset":12547,"endOffset":15406,"count":0},{"startOffset":15450,"endOffset":15488,"count":0},{"startOffset":15489,"endOffset":15550,"count":0},{"startOffset":15552,"endOffset":15651,"count":0},{"startOffset":15687,"endOffset":15771,"count":0},{"startOffset":15830,"endOffset":15910,"count":0},{"startOffset":16275,"endOffset":16300,"count":0},{"startOffset":16510,"endOffset":16534,"count":0},{"startOffset":16715,"endOffset":16872,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5635,"endOffset":6213,"count":21},{"startOffset":5700,"endOffset":5709,"count":0},{"startOffset":6069,"endOffset":6131,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5769,"endOffset":6016,"count":174}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6278,"endOffset":6375,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6439,"endOffset":6538,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6602,"endOffset":6701,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6764,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6929,"endOffset":7030,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7124,"endOffset":7312,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7614,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7821,"endOffset":7902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8027,"endOffset":8223,"count":1},{"startOffset":8098,"endOffset":8128,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8358,"endOffset":8515,"count":16},{"startOffset":8407,"endOffset":8412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8422,"endOffset":8503,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16343,"endOffset":16448,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16560,"endOffset":16628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16754,"endOffset":16794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16804,"endOffset":16860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16969,"endOffset":16984,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16995,"endOffset":17247,"count":54},{"startOffset":17088,"endOffset":17197,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17143,"endOffset":17166,"count":2}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":17268,"endOffset":17539,"count":2},{"startOffset":17422,"endOffset":17463,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":17548,"endOffset":19169,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19178,"endOffset":20962,"count":1},{"startOffset":19436,"endOffset":19469,"count":0},{"startOffset":19471,"endOffset":19524,"count":0},{"startOffset":19634,"endOffset":19657,"count":0},{"startOffset":19658,"endOffset":19688,"count":0},{"startOffset":19691,"endOffset":19900,"count":0},{"startOffset":19973,"endOffset":20066,"count":0},{"startOffset":20187,"endOffset":20210,"count":0},{"startOffset":20251,"endOffset":20284,"count":0},{"startOffset":20285,"endOffset":20318,"count":0},{"startOffset":20345,"endOffset":20351,"count":0},{"startOffset":20429,"endOffset":20452,"count":0},{"startOffset":20453,"endOffset":20483,"count":0},{"startOffset":20509,"endOffset":20515,"count":0},{"startOffset":20684,"endOffset":20799,"count":0},{"startOffset":20801,"endOffset":20894,"count":0}],"isBlockCoverage":true},{"functionName":"setArg","ranges":[{"startOffset":20971,"endOffset":22834,"count":34},{"startOffset":21029,"endOffset":21069,"count":3},{"startOffset":21071,"endOffset":21268,"count":3},{"startOffset":21443,"endOffset":21648,"count":24},{"startOffset":21685,"endOffset":21717,"count":0},{"startOffset":21719,"endOffset":22196,"count":0},{"startOffset":22251,"endOffset":22289,"count":2},{"startOffset":22291,"endOffset":22824,"count":2},{"startOffset":22354,"endOffset":22359,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21122,"endOffset":21201,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21488,"endOffset":21632,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21780,"endOffset":22180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22391,"endOffset":22808,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22535,"endOffset":22608,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":22634,"endOffset":22766,"count":2},{"startOffset":22707,"endOffset":22731,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":22843,"endOffset":23188,"count":4},{"startOffset":22915,"endOffset":22943,"count":2},{"startOffset":22946,"endOffset":23049,"count":2},{"startOffset":23089,"endOffset":23119,"count":3},{"startOffset":23122,"endOffset":23178,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":23197,"endOffset":24302,"count":35},{"startOffset":23271,"endOffset":23324,"count":7},{"startOffset":23325,"endOffset":23374,"count":0},{"startOffset":23376,"endOffset":23447,"count":0},{"startOffset":23498,"endOffset":23535,"count":29},{"startOffset":23537,"endOffset":23639,"count":6},{"startOffset":23604,"endOffset":23625,"count":0},{"startOffset":23699,"endOffset":23760,"count":7},{"startOffset":23777,"endOffset":23806,"count":28},{"startOffset":23859,"endOffset":23912,"count":0},{"startOffset":23914,"endOffset":23966,"count":0},{"startOffset":24021,"endOffset":24058,"count":2},{"startOffset":24060,"endOffset":24266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23709,"endOffset":23759,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24138,"endOffset":24179,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24311,"endOffset":24955,"count":50},{"startOffset":24411,"endOffset":24425,"count":32},{"startOffset":24443,"endOffset":24456,"count":2},{"startOffset":24456,"endOffset":24510,"count":48},{"startOffset":24510,"endOffset":24547,"count":36},{"startOffset":24548,"endOffset":24572,"count":30},{"startOffset":24574,"endOffset":24919,"count":26},{"startOffset":24642,"endOffset":24675,"count":2},{"startOffset":24676,"endOffset":24737,"count":2},{"startOffset":24778,"endOffset":24841,"count":24},{"startOffset":24843,"endOffset":24905,"count":2},{"startOffset":24919,"endOffset":24954,"count":48}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24964,"endOffset":26599,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25168,"endOffset":26587,"count":1},{"startOffset":25302,"endOffset":26573,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26608,"endOffset":27284,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26689,"endOffset":27272,"count":36},{"startOffset":26786,"endOffset":26804,"count":0},{"startOffset":26858,"endOffset":26875,"count":9},{"startOffset":26876,"endOffset":26900,"count":9},{"startOffset":26901,"endOffset":26933,"count":0},{"startOffset":26935,"endOffset":27007,"count":0},{"startOffset":27089,"endOffset":27167,"count":3},{"startOffset":27132,"endOffset":27166,"count":0},{"startOffset":27169,"endOffset":27240,"count":33}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":27293,"endOffset":27537,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27417,"endOffset":27511,"count":3}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":27546,"endOffset":28422,"count":6},{"startOffset":27661,"endOffset":27730,"count":0},{"startOffset":27731,"endOffset":27735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27811,"endOffset":28410,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28431,"endOffset":29278,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28564,"endOffset":29266,"count":55},{"startOffset":28620,"endOffset":29252,"count":53},{"startOffset":28744,"endOffset":29234,"count":4},{"startOffset":28919,"endOffset":28924,"count":0},{"startOffset":29132,"endOffset":29212,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28940,"endOffset":29079,"count":6}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29287,"endOffset":29579,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29588,"endOffset":30205,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29705,"endOffset":30193,"count":56},{"startOffset":29772,"endOffset":30179,"count":17},{"startOffset":29894,"endOffset":29916,"count":1},{"startOffset":29951,"endOffset":29956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29966,"endOffset":30159,"count":12},{"startOffset":30064,"endOffset":30071,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":30214,"endOffset":30639,"count":104},{"startOffset":30566,"endOffset":30579,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30395,"endOffset":30461,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30648,"endOffset":33097,"count":80},{"startOffset":31747,"endOffset":31783,"count":0},{"startOffset":31785,"endOffset":32029,"count":0},{"startOffset":32069,"endOffset":32128,"count":0},{"startOffset":32173,"endOffset":32667,"count":0},{"startOffset":32726,"endOffset":32798,"count":16},{"startOffset":32774,"endOffset":32783,"count":0},{"startOffset":32798,"endOffset":33087,"count":64},{"startOffset":32856,"endOffset":32909,"count":0},{"startOffset":32910,"endOffset":32962,"count":0},{"startOffset":32965,"endOffset":33022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30836,"endOffset":31451,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33106,"endOffset":34699,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33165,"endOffset":34687,"count":12},{"startOffset":33214,"endOffset":33219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33229,"endOffset":34671,"count":177},{"startOffset":33314,"endOffset":33321,"count":85},{"startOffset":33321,"endOffset":33386,"count":92},{"startOffset":33386,"endOffset":33391,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33453,"endOffset":33880,"count":146},{"startOffset":33508,"endOffset":33548,"count":34},{"startOffset":33550,"endOffset":33858,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33942,"endOffset":34395,"count":180},{"startOffset":33998,"endOffset":34016,"count":136},{"startOffset":34017,"endOffset":34057,"count":34},{"startOffset":34059,"endOffset":34373,"count":34},{"startOffset":34161,"endOffset":34200,"count":2},{"startOffset":34202,"endOffset":34347,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34445,"endOffset":34651,"count":88}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34542,"endOffset":34626,"count":132}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34708,"endOffset":34993,"count":419},{"startOffset":34803,"endOffset":34808,"count":110},{"startOffset":34958,"endOffset":34974,"count":49},{"startOffset":34975,"endOffset":34982,"count":370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34902,"endOffset":34927,"count":646}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35002,"endOffset":35300,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35309,"endOffset":35589,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35598,"endOffset":36444,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36453,"endOffset":36584,"count":3},{"startOffset":36550,"endOffset":36573,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36593,"endOffset":37298,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37307,"endOffset":37634,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":37643,"endOffset":37979,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":37988,"endOffset":38548,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":38557,"endOffset":38632,"count":27}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":38641,"endOffset":39213,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38716,"endOffset":39201,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39531,"endOffset":40733,"count":3},{"startOffset":39871,"endOffset":40359,"count":49},{"startOffset":39937,"endOffset":40349,"count":530},{"startOffset":40130,"endOffset":40335,"count":0},{"startOffset":40349,"endOffset":40359,"count":530},{"startOffset":40359,"endOffset":40365,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39692,"endOffset":39770,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39995,"endOffset":40089,"count":1115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40390,"endOffset":40708,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40453,"endOffset":40528,"count":103}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40734,"endOffset":40808,"count":80},{"startOffset":40791,"endOffset":40801,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":40809,"endOffset":40913,"count":80},{"startOffset":40874,"endOffset":40895,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":41495,"endOffset":41528,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":41626,"endOffset":41933,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41958,"endOffset":42066,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42091,"endOffset":42161,"count":3}],"isBlockCoverage":true}]},{"scriptId":"589","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":1},{"startOffset":299,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":44}],"isBlockCoverage":true},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":113},{"startOffset":529,"endOffset":566,"count":8},{"startOffset":627,"endOffset":657,"count":0},{"startOffset":659,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":750,"endOffset":897,"count":149},{"startOffset":800,"endOffset":863,"count":60},{"startOffset":863,"endOffset":896,"count":89}],"isBlockCoverage":true},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":113},{"startOffset":1026,"endOffset":1056,"count":61},{"startOffset":1057,"endOffset":1094,"count":16}],"isBlockCoverage":true},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":60}],"isBlockCoverage":true},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":60}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2616,"endOffset":2676,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2792,"endOffset":2812,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2831,"endOffset":2848,"count":77}],"isBlockCoverage":true},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2947,"endOffset":4740,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3013,"endOffset":4567,"count":162},{"startOffset":3325,"endOffset":3418,"count":156},{"startOffset":3507,"endOffset":3533,"count":44},{"startOffset":3534,"endOffset":3546,"count":44},{"startOffset":3548,"endOffset":3830,"count":44},{"startOffset":3705,"endOffset":3812,"count":0},{"startOffset":3933,"endOffset":3948,"count":0},{"startOffset":3985,"endOffset":4058,"count":94},{"startOffset":4226,"endOffset":4300,"count":50},{"startOffset":4438,"endOffset":4457,"count":149},{"startOffset":4459,"endOffset":4553,"count":148}],"isBlockCoverage":true},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":148},{"startOffset":4986,"endOffset":4989,"count":0},{"startOffset":5136,"endOffset":5174,"count":104},{"startOffset":5174,"endOffset":5291,"count":44},{"startOffset":5291,"endOffset":5378,"count":0},{"startOffset":5378,"endOffset":5428,"count":44},{"startOffset":5428,"endOffset":5466,"count":9},{"startOffset":5466,"endOffset":5612,"count":35}],"isBlockCoverage":true},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5849,"endOffset":7035,"count":149},{"startOffset":6095,"endOffset":6176,"count":0},{"startOffset":6205,"endOffset":6389,"count":0},{"startOffset":6526,"endOffset":6530,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6664,"endOffset":7023,"count":157},{"startOffset":6709,"endOffset":6764,"count":112},{"startOffset":6848,"endOffset":6977,"count":50},{"startOffset":6897,"endOffset":6959,"count":5}],"isBlockCoverage":true},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":311},{"startOffset":7125,"endOffset":7129,"count":0},{"startOffset":7202,"endOffset":7206,"count":129},{"startOffset":7230,"endOffset":7234,"count":217},{"startOffset":7271,"endOffset":7310,"count":0}],"isBlockCoverage":true},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":113},{"startOffset":7391,"endOffset":7519,"count":0},{"startOffset":7952,"endOffset":7988,"count":105},{"startOffset":7989,"endOffset":7992,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7671,"endOffset":7866,"count":149},{"startOffset":7707,"endOffset":7826,"count":44},{"startOffset":7826,"endOffset":7865,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8020,"endOffset":8176,"count":149},{"startOffset":8065,"endOffset":8144,"count":105},{"startOffset":8144,"endOffset":8175,"count":44}],"isBlockCoverage":true},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":324},{"startOffset":8244,"endOffset":8416,"count":0}],"isBlockCoverage":true},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":105},{"startOffset":8570,"endOffset":8575,"count":0},{"startOffset":8617,"endOffset":8621,"count":61},{"startOffset":8668,"endOffset":8704,"count":0}],"isBlockCoverage":true},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":44},{"startOffset":9138,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":1},{"startOffset":9532,"endOffset":9540,"count":0},{"startOffset":9555,"endOffset":9574,"count":0},{"startOffset":9623,"endOffset":9631,"count":0}],"isBlockCoverage":true},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"590","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":2003},{"startOffset":252,"endOffset":268,"count":183},{"startOffset":268,"endOffset":326,"count":1820},{"startOffset":326,"endOffset":342,"count":0},{"startOffset":342,"endOffset":449,"count":1820},{"startOffset":449,"endOffset":787,"count":33302},{"startOffset":557,"endOffset":572,"count":0},{"startOffset":575,"endOffset":593,"count":0},{"startOffset":648,"endOffset":664,"count":0},{"startOffset":666,"endOffset":684,"count":0},{"startOffset":723,"endOffset":736,"count":0},{"startOffset":776,"endOffset":779,"count":0},{"startOffset":787,"endOffset":804,"count":1820}],"isBlockCoverage":true}]},{"scriptId":"591","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":1880},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"592","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":1880},{"startOffset":327,"endOffset":338,"count":0}],"isBlockCoverage":true}]},{"scriptId":"593","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":33302},{"startOffset":115,"endOffset":135,"count":0},{"startOffset":257,"endOffset":1626,"count":0},{"startOffset":1630,"endOffset":1649,"count":0}],"isBlockCoverage":true}]},{"scriptId":"594","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":1820}],"isBlockCoverage":true}]},{"scriptId":"595","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/cliui/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":141}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":748,"endOffset":783,"count":420}],"isBlockCoverage":true},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":148},{"startOffset":2296,"endOffset":2367,"count":155},{"startOffset":2338,"endOffset":2353,"count":148},{"startOffset":2353,"endOffset":2367,"count":7},{"startOffset":2397,"endOffset":2418,"count":141},{"startOffset":2418,"endOffset":2489,"count":7}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":149},{"startOffset":2815,"endOffset":2832,"count":8},{"startOffset":2832,"endOffset":3006,"count":141},{"startOffset":3006,"endOffset":4427,"count":420},{"startOffset":3181,"endOffset":3535,"count":279},{"startOffset":3211,"endOffset":3268,"count":0},{"startOffset":3270,"endOffset":3424,"count":0},{"startOffset":3447,"endOffset":3472,"count":0},{"startOffset":3674,"endOffset":4039,"count":0},{"startOffset":4084,"endOffset":4100,"count":7},{"startOffset":4101,"endOffset":4122,"count":7},{"startOffset":4124,"endOffset":4262,"count":7},{"startOffset":4160,"endOffset":4182,"count":0},{"startOffset":4184,"endOffset":4239,"count":0},{"startOffset":4307,"endOffset":4336,"count":7},{"startOffset":4338,"endOffset":4390,"count":0},{"startOffset":4427,"endOffset":4598,"count":141},{"startOffset":4598,"endOffset":5504,"count":2928},{"startOffset":4659,"endOffset":5083,"count":0},{"startOffset":5174,"endOffset":5316,"count":7},{"startOffset":5194,"endOffset":5242,"count":0},{"startOffset":5262,"endOffset":5269,"count":0},{"startOffset":5271,"endOffset":5312,"count":0},{"startOffset":5316,"endOffset":5501,"count":2921},{"startOffset":5346,"endOffset":5501,"count":7},{"startOffset":5366,"endOffset":5373,"count":0},{"startOffset":5375,"endOffset":5422,"count":0},{"startOffset":5442,"endOffset":5497,"count":0},{"startOffset":5504,"endOffset":5527,"count":141}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":149}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5716,"endOffset":5752,"count":149}],"isBlockCoverage":true}]},{"scriptId":"596","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":1},{"startOffset":277,"endOffset":413,"count":2},{"startOffset":331,"endOffset":404,"count":1},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"597","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"600","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":265,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":368,"endOffset":956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10931,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1004,"endOffset":10656,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3546,"endOffset":3578,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5655,"endOffset":6144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7801,"endOffset":9901,"count":1},{"startOffset":8125,"endOffset":8164,"count":0},{"startOffset":8166,"endOffset":8359,"count":0},{"startOffset":8386,"endOffset":9438,"count":0},{"startOffset":9466,"endOffset":9649,"count":0},{"startOffset":9672,"endOffset":9875,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7912,"endOffset":8037,"count":2},{"startOffset":7944,"endOffset":8029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9919,"endOffset":10531,"count":1},{"startOffset":10344,"endOffset":10525,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":10677,"endOffset":10929,"count":1},{"startOffset":10816,"endOffset":10927,"count":0}],"isBlockCoverage":true}]},{"scriptId":"602","url":"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4803,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":551,"endOffset":4801,"count":4}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":729,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1196,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1423,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":1616,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"beforeEach","ranges":[{"startOffset":1815,"endOffset":1880,"count":4}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":2014,"endOffset":2078,"count":1}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":2291,"endOffset":2488,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2690,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3235,"endOffset":4269,"count":8},{"startOffset":3451,"endOffset":3490,"count":0},{"startOffset":3528,"endOffset":3568,"count":0},{"startOffset":3569,"endOffset":3603,"count":0},{"startOffset":3614,"endOffset":3691,"count":0},{"startOffset":3803,"endOffset":4238,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4446,"endOffset":4630,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4733,"endOffset":4788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8162,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":917,"endOffset":1048,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1286,"endOffset":3063,"count":90}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1855,"endOffset":2680,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2311,"endOffset":2516,"count":192}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3067,"endOffset":3212,"count":4}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3216,"endOffset":6870,"count":4},{"startOffset":3676,"endOffset":3853,"count":0},{"startOffset":3910,"endOffset":6623,"count":0},{"startOffset":6670,"endOffset":6866,"count":99}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3315,"endOffset":3575,"count":197},{"startOffset":3376,"endOffset":3401,"count":98},{"startOffset":3401,"endOffset":3574,"count":99}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6874,"endOffset":8082,"count":4},{"startOffset":7049,"endOffset":8025,"count":0}],"isBlockCoverage":true}]},{"scriptId":"604","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4921,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1118,"endOffset":2345,"count":82},{"startOffset":1386,"endOffset":2211,"count":0},{"startOffset":2224,"endOffset":2234,"count":0},{"startOffset":2236,"endOffset":2292,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":2457,"endOffset":3416,"count":90},{"startOffset":2641,"endOffset":2676,"count":0},{"startOffset":2677,"endOffset":2709,"count":0},{"startOffset":2711,"endOffset":2918,"count":0},{"startOffset":3088,"endOffset":3176,"count":2},{"startOffset":3176,"endOffset":3204,"count":86},{"startOffset":3209,"endOffset":3233,"count":8},{"startOffset":3233,"endOffset":3335,"count":82}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":3604,"endOffset":4236,"count":90},{"startOffset":3834,"endOffset":3861,"count":4},{"startOffset":3862,"endOffset":3889,"count":4},{"startOffset":3890,"endOffset":4019,"count":0},{"startOffset":4024,"endOffset":4234,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":4615,"endOffset":4853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/test/action.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1374,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":140,"endOffset":1371,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":187,"endOffset":1366,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":215,"endOffset":740,"count":2}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":347,"endOffset":703,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":804,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1360,"count":1}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/lib/action.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":945,"count":1}],"isBlockCoverage":true},{"functionName":"respond","ranges":[{"startOffset":54,"endOffset":870,"count":2}],"isBlockCoverage":true}]},{"scriptId":"607","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/lib/memory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"Memory","ranges":[{"startOffset":32,"endOffset":77,"count":7}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":81,"endOffset":155,"count":6}],"isBlockCoverage":true},{"functionName":"retrieve","ranges":[{"startOffset":159,"endOffset":217,"count":3}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":221,"endOffset":279,"count":3}],"isBlockCoverage":true}]},{"scriptId":"608","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/lib/reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"Reference","ranges":[{"startOffset":35,"endOffset":171,"count":8}],"isBlockCoverage":true},{"functionName":"getConversationId","ranges":[{"startOffset":175,"endOffset":232,"count":2}],"isBlockCoverage":true},{"functionName":"getParentMessageId","ranges":[{"startOffset":236,"endOffset":295,"count":2}],"isBlockCoverage":true}]},{"scriptId":"609","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/test/memory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1070,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":146,"endOffset":1067,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":198,"endOffset":1062,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":226,"endOffset":397,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":486,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":752,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":971,"endOffset":1056,"count":1}],"isBlockCoverage":true}]},{"scriptId":"610","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/test/mineflayer-chatgpt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":231,"endOffset":3175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":267,"endOffset":3170,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":295,"endOffset":626,"count":7}],"isBlockCoverage":true},{"functionName":"chat","ranges":[{"startOffset":522,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":643,"endOffset":750,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":929,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":974,"endOffset":1112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1166,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1442,"endOffset":1555,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":2003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2071,"endOffset":2512,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2593,"endOffset":3164,"count":1}],"isBlockCoverage":true}]},{"scriptId":"611","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/lib/mineflayer-chatgpt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":908,"count":1}],"isBlockCoverage":true},{"functionName":"chatgpt","ranges":[{"startOffset":141,"endOffset":833,"count":7}],"isBlockCoverage":true},{"functionName":"bot.chatgpt.setConfig","ranges":[{"startOffset":225,"endOffset":371,"count":2},{"startOffset":313,"endOffset":318,"count":1}],"isBlockCoverage":true},{"functionName":"bot.chatgpt.sendMessage","ranges":[{"startOffset":401,"endOffset":829,"count":3},{"startOffset":511,"endOffset":541,"count":1},{"startOffset":541,"endOffset":825,"count":2},{"startOffset":601,"endOffset":819,"count":1}],"isBlockCoverage":true}]},{"scriptId":"612","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6180,"count":1},{"startOffset":6104,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"OpenAI","ranges":[{"startOffset":1779,"endOffset":3928,"count":2},{"startOffset":2036,"endOffset":2271,"count":0},{"startOffset":2533,"endOffset":3024,"count":0}],"isBlockCoverage":true},{"functionName":"defaultQuery","ranges":[{"startOffset":3933,"endOffset":3998,"count":0}],"isBlockCoverage":false},{"functionName":"defaultHeaders","ranges":[{"startOffset":4003,"endOffset":4245,"count":0}],"isBlockCoverage":false},{"functionName":"authHeaders","ranges":[{"startOffset":4250,"endOffset":4334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5482,"endOffset":6095,"count":1}],"isBlockCoverage":true}]},{"scriptId":"613","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/core.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33325,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"defaultParseResponse","ranges":[{"startOffset":1546,"endOffset":2885,"count":0}],"isBlockCoverage":false},{"functionName":"APIPromise","ranges":[{"startOffset":3036,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"_thenUnwrap","ranges":[{"startOffset":3485,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"asResponse","ranges":[{"startOffset":4195,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"withResponse","ranges":[{"startOffset":4826,"endOffset":4976,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4981,"endOffset":5156,"count":0}],"isBlockCoverage":false},{"functionName":"then","ranges":[{"startOffset":5161,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"catch","ranges":[{"startOffset":5262,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"finally","ranges":[{"startOffset":5339,"endOffset":5413,"count":0}],"isBlockCoverage":false},{"functionName":"APIClient","ranges":[{"startOffset":5445,"endOffset":5823,"count":2}],"isBlockCoverage":true},{"functionName":"authHeaders","ranges":[{"startOffset":5828,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"defaultHeaders","ranges":[{"startOffset":6063,"endOffset":6330,"count":0}],"isBlockCoverage":false},{"functionName":"validateHeaders","ranges":[{"startOffset":6408,"endOffset":6451,"count":0}],"isBlockCoverage":false},{"functionName":"defaultIdempotencyKey","ranges":[{"startOffset":6456,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6542,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":6624,"endOffset":6703,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":6708,"endOffset":6789,"count":0}],"isBlockCoverage":false},{"functionName":"put","ranges":[{"startOffset":6794,"endOffset":6871,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":6876,"endOffset":6959,"count":0}],"isBlockCoverage":false},{"functionName":"methodRequest","ranges":[{"startOffset":6964,"endOffset":7101,"count":0}],"isBlockCoverage":false},{"functionName":"getAPIList","ranges":[{"startOffset":7106,"endOffset":7218,"count":0}],"isBlockCoverage":false},{"functionName":"calculateContentLength","ranges":[{"startOffset":7223,"endOffset":7683,"count":0}],"isBlockCoverage":false},{"functionName":"buildRequest","ranges":[{"startOffset":7688,"endOffset":9605,"count":0}],"isBlockCoverage":false},{"functionName":"buildHeaders","ranges":[{"startOffset":9610,"endOffset":10231,"count":0}],"isBlockCoverage":false},{"functionName":"prepareOptions","ranges":[{"startOffset":10331,"endOffset":10364,"count":0}],"isBlockCoverage":false},{"functionName":"prepareRequest","ranges":[{"startOffset":10601,"endOffset":10652,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":10657,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatusError","ranges":[{"startOffset":10884,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":11012,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":11142,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"requestAPIList","ranges":[{"startOffset":13346,"endOffset":13493,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":13498,"endOffset":14031,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyQuery","ranges":[{"startOffset":14036,"endOffset":14875,"count":0}],"isBlockCoverage":false},{"functionName":"fetchWithTimeout","ranges":[{"startOffset":14880,"endOffset":15451,"count":0}],"isBlockCoverage":false},{"functionName":"getRequestClient","ranges":[{"startOffset":15456,"endOffset":15520,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRetry","ranges":[{"startOffset":15525,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"retryRequest","ranges":[{"startOffset":16297,"endOffset":17862,"count":0}],"isBlockCoverage":false},{"functionName":"calculateDefaultRetryTimeoutMillis","ranges":[{"startOffset":17867,"endOffset":18408,"count":0}],"isBlockCoverage":false},{"functionName":"getUserAgent","ranges":[{"startOffset":18413,"endOffset":18492,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractPage","ranges":[{"startOffset":18527,"endOffset":18792,"count":0}],"isBlockCoverage":false},{"functionName":"hasNextPage","ranges":[{"startOffset":18797,"endOffset":18963,"count":0}],"isBlockCoverage":false},{"functionName":"getNextPage","ranges":[{"startOffset":18968,"endOffset":19920,"count":0}],"isBlockCoverage":false},{"functionName":"iterPages","ranges":[{"startOffset":19925,"endOffset":20181,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20186,"endOffset":20429,"count":0}],"isBlockCoverage":false},{"functionName":"PagePromise","ranges":[{"startOffset":20779,"endOffset":20946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21144,"endOffset":21291,"count":0}],"isBlockCoverage":false},{"functionName":"createResponseHeaders","ranges":[{"startOffset":21331,"endOffset":21581,"count":0}],"isBlockCoverage":false},{"functionName":"isRequestOptions","ranges":[{"startOffset":22159,"endOffset":22333,"count":0}],"isBlockCoverage":false},{"functionName":"getPlatformProperties","ranges":[{"startOffset":22365,"endOffset":24445,"count":0}],"isBlockCoverage":false},{"functionName":"getBrowserInfo","ranges":[{"startOffset":24590,"endOffset":25668,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArch","ranges":[{"startOffset":25691,"endOffset":26152,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePlatform","ranges":[{"startOffset":26180,"endOffset":27181,"count":0}],"isBlockCoverage":false},{"functionName":"getPlatformHeaders","ranges":[{"startOffset":27232,"endOffset":27320,"count":0}],"isBlockCoverage":false},{"functionName":"safeJSON","ranges":[{"startOffset":27346,"endOffset":27458,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsoluteURL","ranges":[{"startOffset":27589,"endOffset":27646,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":27669,"endOffset":27726,"count":0}],"isBlockCoverage":false},{"functionName":"validatePositiveInteger","ranges":[{"startOffset":27760,"endOffset":28006,"count":4},{"startOffset":27830,"endOffset":27898,"count":0},{"startOffset":27914,"endOffset":27990,"count":0}],"isBlockCoverage":true},{"functionName":"castToError","ranges":[{"startOffset":28035,"endOffset":28124,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePresent","ranges":[{"startOffset":28155,"endOffset":28304,"count":0}],"isBlockCoverage":false},{"functionName":"readEnv","ranges":[{"startOffset":28510,"endOffset":28738,"count":6},{"startOffset":28596,"endOffset":28602,"count":0},{"startOffset":28624,"endOffset":28737,"count":0}],"isBlockCoverage":true},{"functionName":"coerceInteger","ranges":[{"startOffset":28769,"endOffset":29017,"count":0}],"isBlockCoverage":false},{"functionName":"coerceFloat","ranges":[{"startOffset":29046,"endOffset":29280,"count":0}],"isBlockCoverage":false},{"functionName":"coerceBoolean","ranges":[{"startOffset":29311,"endOffset":29478,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceInteger","ranges":[{"startOffset":29514,"endOffset":29624,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceFloat","ranges":[{"startOffset":29658,"endOffset":29766,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceBoolean","ranges":[{"startOffset":29802,"endOffset":29912,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObj","ranges":[{"startOffset":29961,"endOffset":30089,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":30159,"endOffset":30247,"count":0}],"isBlockCoverage":false},{"functionName":"applyHeadersMut","ranges":[{"startOffset":30441,"endOffset":30889,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":30897,"endOffset":31074,"count":0}],"isBlockCoverage":false},{"functionName":"uuid4","ranges":[{"startOffset":31136,"endOffset":31355,"count":0}],"isBlockCoverage":false},{"functionName":"isRunningInBrowser","ranges":[{"startOffset":31391,"endOffset":31605,"count":2},{"startOffset":31464,"endOffset":31535,"count":0},{"startOffset":31536,"endOffset":31601,"count":0}],"isBlockCoverage":true},{"functionName":"isHeadersProtocol","ranges":[{"startOffset":31640,"endOffset":31703,"count":0}],"isBlockCoverage":false},{"functionName":"getRequiredHeader","ranges":[{"startOffset":31738,"endOffset":32798,"count":0}],"isBlockCoverage":false},{"functionName":"toBase64","ranges":[{"startOffset":32870,"endOffset":33185,"count":0}],"isBlockCoverage":false},{"functionName":"isObj","ranges":[{"startOffset":33194,"endOffset":33291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/error.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4150,"count":1}],"isBlockCoverage":true},{"functionName":"APIError","ranges":[{"startOffset":220,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"makeMessage","ranges":[{"startOffset":630,"endOffset":1167,"count":1},{"startOffset":703,"endOffset":830,"count":0},{"startOffset":891,"endOffset":900,"count":0},{"startOffset":979,"endOffset":1166,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":1179,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"APIUserAbortError","ranges":[{"startOffset":2439,"endOffset":2592,"count":0}],"isBlockCoverage":false},{"functionName":"APIConnectionError","ranges":[{"startOffset":2650,"endOffset":2948,"count":0}],"isBlockCoverage":false},{"functionName":"APIConnectionTimeoutError","ranges":[{"startOffset":3023,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"BadRequestError","ranges":[{"startOffset":3176,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"AuthenticationError","ranges":[{"startOffset":3312,"endOffset":3389,"count":0}],"isBlockCoverage":false},{"functionName":"PermissionDeniedError","ranges":[{"startOffset":3450,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"NotFoundError","ranges":[{"startOffset":3580,"endOffset":3657,"count":0}],"isBlockCoverage":false},{"functionName":"ConflictError","ranges":[{"startOffset":3710,"endOffset":3787,"count":0}],"isBlockCoverage":false},{"functionName":"UnprocessableEntityError","ranges":[{"startOffset":3851,"endOffset":3928,"count":0}],"isBlockCoverage":false},{"functionName":"RateLimitError","ranges":[{"startOffset":3982,"endOffset":4059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/uploads.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6276,"count":1}],"isBlockCoverage":true},{"functionName":"isResponseLike","ranges":[{"startOffset":179,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":341,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"isBlobLike","ranges":[{"startOffset":724,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"isUploadable","ranges":[{"startOffset":1015,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"toFile","ranges":[{"startOffset":1741,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"getBytes","ranges":[{"startOffset":2537,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"propsForError","ranges":[{"startOffset":3266,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":3410,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"getStringFromMaybeBuffer","ranges":[{"startOffset":3673,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncIterableIterator","ranges":[{"startOffset":3876,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"isMultipartBody","ranges":[{"startOffset":4015,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMultipartFormRequestOptions","ranges":[{"startOffset":4325,"endOffset":4502,"count":0}],"isBlockCoverage":false},{"functionName":"multipartFormRequestOptions","ranges":[{"startOffset":4547,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"createForm","ranges":[{"startOffset":4691,"endOffset":4865,"count":0}],"isBlockCoverage":false},{"functionName":"hasUploadableValue","ranges":[{"startOffset":4894,"endOffset":5223,"count":0}],"isBlockCoverage":false},{"functionName":"addFormValue","ranges":[{"startOffset":5246,"endOffset":6238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/pagination.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1769,"count":1}],"isBlockCoverage":true},{"functionName":"Page","ranges":[{"startOffset":263,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"getPaginatedItems","ranges":[{"startOffset":440,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"nextPageParams","ranges":[{"startOffset":713,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"nextPageInfo","ranges":[{"startOffset":763,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"CursorPage","ranges":[{"startOffset":860,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"getPaginatedItems","ranges":[{"startOffset":1002,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"nextPageParams","ranges":[{"startOffset":1121,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"nextPageInfo","ranges":[{"startOffset":1453,"endOffset":1727,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":675,"count":1}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/sinon/pkg/sinon-esm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1166014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":515,"count":1}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":71,"endOffset":506,"count":1},{"startOffset":460,"endOffset":469,"count":0}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":89,"endOffset":424,"count":381},{"startOffset":114,"endOffset":404,"count":176},{"startOffset":124,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":382,"count":380},{"startOffset":377,"endOffset":380,"count":0}],"isBlockCoverage":true},{"functionName":"1../sinon/behavior","ranges":[{"startOffset":523,"endOffset":2411,"count":1}],"isBlockCoverage":true},{"functionName":"createApi","ranges":[{"startOffset":1160,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":2189,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"2../sinon","ranges":[{"startOffset":2727,"endOffset":2842,"count":1}],"isBlockCoverage":true},{"functionName":"3../create-sinon-api","ranges":[{"startOffset":2861,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"4../util/core/times-in-words","ranges":[{"startOffset":3022,"endOffset":13570,"count":1}],"isBlockCoverage":true},{"functionName":"applyDefaults","ranges":[{"startOffset":3755,"endOffset":3985,"count":2},{"startOffset":3840,"endOffset":3983,"count":4}],"isBlockCoverage":true},{"functionName":"createAssertObject","ranges":[{"startOffset":4368,"endOffset":13471,"count":2},{"startOffset":4442,"endOffset":4447,"count":1}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":4647,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":5088,"endOffset":5135,"count":5}],"isBlockCoverage":true},{"functionName":"assertCallOrder","ranges":[{"startOffset":5157,"endOffset":6146,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallCount","ranges":[{"startOffset":6168,"endOffset":6831,"count":0}],"isBlockCoverage":false},{"functionName":"expose","ranges":[{"startOffset":6850,"endOffset":7637,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7655,"endOffset":8151,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsStub","ranges":[{"startOffset":8165,"endOffset":8801,"count":0}],"isBlockCoverage":false},{"functionName":"verifyIsValidAssertion","ranges":[{"startOffset":8807,"endOffset":9442,"count":0}],"isBlockCoverage":false},{"functionName":"failAssertion","ranges":[{"startOffset":9448,"endOffset":9622,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorPropAsAssertion","ranges":[{"startOffset":9628,"endOffset":10686,"count":42},{"startOffset":9774,"endOffset":9836,"count":40}],"isBlockCoverage":true},{"functionName":"assert.<computed>","ranges":[{"startOffset":9861,"endOffset":10679,"count":0}],"isBlockCoverage":false},{"functionName":"exposedName","ranges":[{"startOffset":10692,"endOffset":10919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11107,"endOffset":11165,"count":0}],"isBlockCoverage":false},{"functionName":"5../util/core/export-async-behaviors","ranges":[{"startOffset":13663,"endOffset":22056,"count":1}],"isBlockCoverage":true},{"functionName":"getCallback","ranges":[{"startOffset":14278,"endOffset":15079,"count":0}],"isBlockCoverage":false},{"functionName":"getCallbackError","ranges":[{"startOffset":15081,"endOffset":15806,"count":0}],"isBlockCoverage":false},{"functionName":"ensureArgs","ranges":[{"startOffset":15808,"endOffset":16224,"count":0}],"isBlockCoverage":false},{"functionName":"callCallback","ranges":[{"startOffset":16226,"endOffset":16960,"count":5},{"startOffset":16314,"endOffset":16935,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16600,"endOffset":16768,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":16990,"endOffset":17389,"count":5},{"startOffset":17231,"endOffset":17269,"count":0},{"startOffset":17271,"endOffset":17357,"count":0}],"isBlockCoverage":true},{"functionName":"isPresent","ranges":[{"startOffset":17407,"endOffset":17862,"count":0}],"isBlockCoverage":false},{"functionName":"invoke","ranges":[{"startOffset":17918,"endOffset":20362,"count":5},{"startOffset":18237,"endOffset":18282,"count":2},{"startOffset":18282,"endOffset":20322,"count":3},{"startOffset":18315,"endOffset":18461,"count":0},{"startOffset":18509,"endOffset":18613,"count":0},{"startOffset":18640,"endOffset":18679,"count":0},{"startOffset":18726,"endOffset":18827,"count":0},{"startOffset":18850,"endOffset":18914,"count":0},{"startOffset":18963,"endOffset":19142,"count":0},{"startOffset":19170,"endOffset":19251,"count":0},{"startOffset":19275,"endOffset":19365,"count":0},{"startOffset":19388,"endOffset":19477,"count":0},{"startOffset":19506,"endOffset":19638,"count":0},{"startOffset":19674,"endOffset":20134,"count":0},{"startOffset":20185,"endOffset":20233,"count":1},{"startOffset":20233,"endOffset":20322,"count":2},{"startOffset":20279,"endOffset":20322,"count":0},{"startOffset":20322,"endOffset":20361,"count":2}],"isBlockCoverage":true},{"functionName":"effectiveWrappedMethod","ranges":[{"startOffset":20393,"endOffset":20666,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":20681,"endOffset":20751,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":20771,"endOffset":20841,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":20862,"endOffset":20934,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":20954,"endOffset":21024,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":21041,"endOffset":21356,"count":0}],"isBlockCoverage":false},{"functionName":"createBehavior","ranges":[{"startOffset":21362,"endOffset":21653,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21415,"endOffset":21650,"count":3}],"isBlockCoverage":true},{"functionName":"addBehavior","ranges":[{"startOffset":21655,"endOffset":21866,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":21712,"endOffset":21823,"count":3},{"startOffset":21809,"endOffset":21816,"count":0}],"isBlockCoverage":true},{"functionName":"6../util/core/get-property-descriptor","ranges":[{"startOffset":22176,"endOffset":22999,"count":1}],"isBlockCoverage":true},{"functionName":"collectMethod","ranges":[{"startOffset":22499,"endOffset":22734,"count":0}],"isBlockCoverage":false},{"functionName":"collectOwnMethods","ranges":[{"startOffset":22814,"endOffset":22959,"count":0}],"isBlockCoverage":false},{"functionName":"7.supports-color","ranges":[{"startOffset":23091,"endOffset":23894,"count":1}],"isBlockCoverage":true},{"functionName":"Colorizer","ranges":[{"startOffset":23179,"endOffset":23285,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":23418,"endOffset":23578,"count":0}],"isBlockCoverage":false},{"functionName":"red","ranges":[{"startOffset":23584,"endOffset":23639,"count":0}],"isBlockCoverage":false},{"functionName":"green","ranges":[{"startOffset":23645,"endOffset":23702,"count":0}],"isBlockCoverage":false},{"functionName":"cyan","ranges":[{"startOffset":23708,"endOffset":23764,"count":0}],"isBlockCoverage":false},{"functionName":"white","ranges":[{"startOffset":23770,"endOffset":23827,"count":0}],"isBlockCoverage":false},{"functionName":"bold","ranges":[{"startOffset":23833,"endOffset":23888,"count":0}],"isBlockCoverage":false},{"functionName":"8../sandbox","ranges":[{"startOffset":23922,"endOffset":27267,"count":1}],"isBlockCoverage":true},{"functionName":"prepareSandboxFromConfig","ranges":[{"startOffset":24142,"endOffset":24697,"count":0}],"isBlockCoverage":false},{"functionName":"exposeValue","ranges":[{"startOffset":24699,"endOffset":24988,"count":0}],"isBlockCoverage":false},{"functionName":"createSandbox","ranges":[{"startOffset":26502,"endOffset":27231,"count":0}],"isBlockCoverage":false},{"functionName":"9../stub","ranges":[{"startOffset":27311,"endOffset":28470,"count":1}],"isBlockCoverage":true},{"functionName":"isStub","ranges":[{"startOffset":27516,"endOffset":27586,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":27605,"endOffset":28466,"count":0}],"isBlockCoverage":false},{"functionName":"10../util/core/export-async-behaviors","ranges":[{"startOffset":28540,"endOffset":36504,"count":1}],"isBlockCoverage":true},{"functionName":"throwsException","ranges":[{"startOffset":28956,"endOffset":29542,"count":2},{"startOffset":29042,"endOffset":29088,"count":0},{"startOffset":29125,"endOffset":29374,"count":0},{"startOffset":29392,"endOffset":29495,"count":0}],"isBlockCoverage":true},{"functionName":"fake.exceptionCreator","ranges":[{"startOffset":29159,"endOffset":29367,"count":0}],"isBlockCoverage":false},{"functionName":"fake.exceptionCreator","ranges":[{"startOffset":29426,"endOffset":29488,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":29626,"endOffset":30451,"count":1},{"startOffset":29783,"endOffset":29805,"count":0},{"startOffset":30130,"endOffset":30152,"count":0}],"isBlockCoverage":true},{"functionName":"callsFake","ranges":[{"startOffset":30495,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"callsArg","ranges":[{"startOffset":30596,"endOffset":30841,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgOn","ranges":[{"startOffset":30860,"endOffset":31156,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":31177,"endOffset":31443,"count":0}],"isBlockCoverage":false},{"functionName":"callsArgWith","ranges":[{"startOffset":31466,"endOffset":31781,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":31802,"endOffset":31899,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":31914,"endOffset":32084,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsRight","ranges":[{"startOffset":32104,"endOffset":32275,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsOn","ranges":[{"startOffset":32292,"endOffset":32511,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsTo","ranges":[{"startOffset":32528,"endOffset":32737,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsToOn","ranges":[{"startOffset":32756,"endOffset":33014,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":33098,"endOffset":33231,"count":1}],"isBlockCoverage":true},{"functionName":"returnsArg","ranges":[{"startOffset":33250,"endOffset":33462,"count":0}],"isBlockCoverage":false},{"functionName":"throwsArg","ranges":[{"startOffset":33480,"endOffset":33690,"count":0}],"isBlockCoverage":false},{"functionName":"returnsThis","ranges":[{"startOffset":33710,"endOffset":33798,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":33815,"endOffset":33978,"count":0}],"isBlockCoverage":false},{"functionName":"resolvesArg","ranges":[{"startOffset":33998,"endOffset":34241,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":34257,"endOffset":34716,"count":0}],"isBlockCoverage":false},{"functionName":"resolvesThis","ranges":[{"startOffset":34737,"endOffset":34827,"count":0}],"isBlockCoverage":false},{"functionName":"callThrough","ranges":[{"startOffset":34847,"endOffset":34937,"count":0}],"isBlockCoverage":false},{"functionName":"callThroughWithNew","ranges":[{"startOffset":34964,"endOffset":35068,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35080,"endOffset":35437,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35449,"endOffset":35932,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":35946,"endOffset":36369,"count":0}],"isBlockCoverage":false},{"functionName":"11../proxy","ranges":[{"startOffset":36640,"endOffset":42867,"count":1}],"isBlockCoverage":true},{"functionName":"fake","ranges":[{"startOffset":37511,"endOffset":37690,"count":0}],"isBlockCoverage":false},{"functionName":"returns","ranges":[{"startOffset":37970,"endOffset":38121,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":38605,"endOffset":38764,"count":0}],"isBlockCoverage":false},{"functionName":"resolves","ranges":[{"startOffset":39044,"endOffset":39216,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":39635,"endOffset":39815,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":40119,"endOffset":40210,"count":0}],"isBlockCoverage":false},{"functionName":"yields","ranges":[{"startOffset":40525,"endOffset":40915,"count":0}],"isBlockCoverage":false},{"functionName":"yieldsAsync","ranges":[{"startOffset":41291,"endOffset":41732,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFunc","ranges":[{"startOffset":41880,"endOffset":42572,"count":0}],"isBlockCoverage":false},{"functionName":"getError","ranges":[{"startOffset":42774,"endOffset":42864,"count":0}],"isBlockCoverage":false},{"functionName":"12../assert","ranges":[{"startOffset":42937,"endOffset":51482,"count":1}],"isBlockCoverage":true},{"functionName":"callCountInWords","ranges":[{"startOffset":43682,"endOffset":43835,"count":0}],"isBlockCoverage":false},{"functionName":"expectedCallCountInWords","ranges":[{"startOffset":43837,"endOffset":44332,"count":5},{"startOffset":44088,"endOffset":44169,"count":0},{"startOffset":44196,"endOffset":44331,"count":0}],"isBlockCoverage":true},{"functionName":"receivedMinCalls","ranges":[{"startOffset":44334,"endOffset":44516,"count":20}],"isBlockCoverage":true},{"functionName":"receivedMaxCalls","ranges":[{"startOffset":44518,"endOffset":44700,"count":5},{"startOffset":44609,"endOffset":44638,"count":0}],"isBlockCoverage":true},{"functionName":"verifyMatcher","ranges":[{"startOffset":44702,"endOffset":44868,"count":28},{"startOffset":44828,"endOffset":44856,"count":12},{"startOffset":44858,"endOffset":44865,"count":16}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":44943,"endOffset":45152,"count":5}],"isBlockCoverage":true},{"functionName":"invoke","ranges":[{"startOffset":45167,"endOffset":45314,"count":5}],"isBlockCoverage":true},{"functionName":"atLeast","ranges":[{"startOffset":45330,"endOffset":45645,"count":5},{"startOffset":45391,"endOffset":45476,"count":0}],"isBlockCoverage":true},{"functionName":"atMost","ranges":[{"startOffset":45660,"endOffset":45974,"count":5},{"startOffset":45720,"endOffset":45805,"count":0},{"startOffset":45836,"endOffset":45916,"count":0}],"isBlockCoverage":true},{"functionName":"never","ranges":[{"startOffset":45988,"endOffset":46044,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":46057,"endOffset":46112,"count":5}],"isBlockCoverage":true},{"functionName":"twice","ranges":[{"startOffset":46126,"endOffset":46182,"count":0}],"isBlockCoverage":false},{"functionName":"thrice","ranges":[{"startOffset":46197,"endOffset":46254,"count":0}],"isBlockCoverage":false},{"functionName":"exactly","ranges":[{"startOffset":46270,"endOffset":46485,"count":5},{"startOffset":46331,"endOffset":46418,"count":0}],"isBlockCoverage":true},{"functionName":"met","ranges":[{"startOffset":46497,"endOffset":46574,"count":20}],"isBlockCoverage":true},{"functionName":"verifyCallAllowed","ranges":[{"startOffset":46600,"endOffset":48921,"count":5},{"startOffset":46741,"endOffset":46913,"count":0},{"startOffset":46950,"endOffset":46984,"count":0},{"startOffset":46986,"endOffset":47218,"count":0},{"startOffset":47264,"endOffset":47295,"count":0},{"startOffset":47316,"endOffset":47511,"count":0},{"startOffset":47565,"endOffset":47784,"count":0},{"startOffset":47837,"endOffset":47892,"count":2},{"startOffset":47903,"endOffset":48123,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48185,"endOffset":48885,"count":14},{"startOffset":48281,"endOffset":48547,"count":0},{"startOffset":48608,"endOffset":48871,"count":0}],"isBlockCoverage":true},{"functionName":"allowsCall","ranges":[{"startOffset":48940,"endOffset":49985,"count":5},{"startOffset":49061,"endOffset":49086,"count":0},{"startOffset":49088,"endOffset":49125,"count":0},{"startOffset":49162,"endOffset":49196,"count":0},{"startOffset":49198,"endOffset":49235,"count":0},{"startOffset":49281,"endOffset":49317,"count":0},{"startOffset":49403,"endOffset":49408,"count":0},{"startOffset":49464,"endOffset":49501,"count":0},{"startOffset":49554,"endOffset":49610,"count":2},{"startOffset":49621,"endOffset":49658,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49700,"endOffset":49977,"count":14},{"startOffset":49793,"endOffset":49838,"count":0},{"startOffset":49896,"endOffset":49941,"count":0}],"isBlockCoverage":true},{"functionName":"withArgs","ranges":[{"startOffset":50002,"endOffset":50101,"count":5}],"isBlockCoverage":true},{"functionName":"withExactArgs","ranges":[{"startOffset":50123,"endOffset":50264,"count":2}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":50275,"endOffset":50365,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":50382,"endOffset":50995,"count":5},{"startOffset":50446,"endOffset":50451,"count":0},{"startOffset":50495,"endOffset":50539,"count":3},{"startOffset":50621,"endOffset":50652,"count":0},{"startOffset":50912,"endOffset":50994,"count":0}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":51010,"endOffset":51207,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":51220,"endOffset":51280,"count":5}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":51293,"endOffset":51440,"count":0}],"isBlockCoverage":false},{"functionName":"13../mock-expectation","ranges":[{"startOffset":51663,"endOffset":57830,"count":1}],"isBlockCoverage":true},{"functionName":"mock","ranges":[{"startOffset":52385,"endOffset":52573,"count":14},{"startOffset":52456,"endOffset":52538,"count":0}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":52575,"endOffset":52677,"count":47},{"startOffset":52640,"endOffset":52645,"count":27}],"isBlockCoverage":true},{"functionName":"arrayEquals","ranges":[{"startOffset":52679,"endOffset":52914,"count":5},{"startOffset":52751,"endOffset":52781,"count":2},{"startOffset":52783,"endOffset":52812,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52837,"endOffset":52910,"count":14}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":52943,"endOffset":53194,"count":14},{"startOffset":52990,"endOffset":53052,"count":0}],"isBlockCoverage":true},{"functionName":"expects","ranges":[{"startOffset":53210,"endOffset":54070,"count":5},{"startOffset":53258,"endOffset":53321,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53635,"endOffset":53735,"count":5}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":54086,"endOffset":54325,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54171,"endOffset":54317,"count":10},{"startOffset":54251,"endOffset":54307,"count":5}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":54340,"endOffset":55111,"count":14},{"startOffset":54407,"endOffset":54412,"count":9},{"startOffset":54453,"endOffset":54475,"count":5},{"startOffset":54476,"endOffset":54480,"count":9},{"startOffset":54897,"endOffset":54977,"count":0},{"startOffset":55003,"endOffset":55083,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54534,"endOffset":54835,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54591,"endOffset":54823,"count":5},{"startOffset":54656,"endOffset":54732,"count":0}],"isBlockCoverage":true},{"functionName":"usingPromise","ranges":[{"startOffset":55132,"endOffset":55245,"count":0}],"isBlockCoverage":false},{"functionName":"invokeMethod","ranges":[{"startOffset":55266,"endOffset":57798,"count":5},{"startOffset":55623,"endOffset":55627,"count":0},{"startOffset":55662,"endOffset":55667,"count":0},{"startOffset":56504,"endOffset":56867,"count":0},{"startOffset":56869,"endOffset":57797,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55784,"endOffset":56073,"count":5},{"startOffset":55876,"endOffset":55881,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56185,"endOffset":56369,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56609,"endOffset":56823,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56965,"endOffset":57057,"count":0}],"isBlockCoverage":false},{"functionName":"14../fake","ranges":[{"startOffset":58013,"endOffset":60621,"count":1}],"isBlockCoverage":true},{"functionName":"getFakeExecutor","ranges":[{"startOffset":58585,"endOffset":58764,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":59065,"endOffset":60591,"count":0}],"isBlockCoverage":false},{"functionName":"15.@sinonjs/commons","ranges":[{"startOffset":60672,"endOffset":62475,"count":1}],"isBlockCoverage":true},{"functionName":"incrementCallCount","ranges":[{"startOffset":60815,"endOffset":61074,"count":5}],"isBlockCoverage":true},{"functionName":"createCallProperties","ranges":[{"startOffset":61108,"endOffset":61326,"count":10}],"isBlockCoverage":true},{"functionName":"delegateToCalls","ranges":[{"startOffset":61355,"endOffset":62471,"count":26}],"isBlockCoverage":true},{"functionName":"proxy.<computed>","ranges":[{"startOffset":61508,"endOffset":62468,"count":0}],"isBlockCoverage":false},{"functionName":"16.@sinonjs/commons","ranges":[{"startOffset":62505,"endOffset":70675,"count":1}],"isBlockCoverage":true},{"functionName":"throwYieldError","ranges":[{"startOffset":63148,"endOffset":63349,"count":0}],"isBlockCoverage":false},{"functionName":"calledOn","ranges":[{"startOffset":63385,"endOffset":63569,"count":0}],"isBlockCoverage":false},{"functionName":"calledWith","ranges":[{"startOffset":63588,"endOffset":63981,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithMatch","ranges":[{"startOffset":64005,"endOffset":64475,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithExactly","ranges":[{"startOffset":64501,"endOffset":64669,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWith","ranges":[{"startOffset":64691,"endOffset":64779,"count":0}],"isBlockCoverage":false},{"functionName":"notCalledWithMatch","ranges":[{"startOffset":64806,"endOffset":64904,"count":0}],"isBlockCoverage":false},{"functionName":"returned","ranges":[{"startOffset":64921,"endOffset":65004,"count":0}],"isBlockCoverage":false},{"functionName":"threw","ranges":[{"startOffset":65018,"endOffset":65239,"count":0}],"isBlockCoverage":false},{"functionName":"calledWithNew","ranges":[{"startOffset":65261,"endOffset":65370,"count":5}],"isBlockCoverage":true},{"functionName":"calledBefore","ranges":[{"startOffset":65391,"endOffset":65458,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":65478,"endOffset":65545,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":65577,"endOffset":65650,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":65681,"endOffset":65754,"count":0}],"isBlockCoverage":false},{"functionName":"callArg","ranges":[{"startOffset":65770,"endOffset":65865,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOn","ranges":[{"startOffset":65883,"endOffset":66004,"count":0}],"isBlockCoverage":false},{"functionName":"callArgWith","ranges":[{"startOffset":66024,"endOffset":66170,"count":0}],"isBlockCoverage":false},{"functionName":"callArgOnWith","ranges":[{"startOffset":66192,"endOffset":66361,"count":0}],"isBlockCoverage":false},{"functionName":"throwArg","ranges":[{"startOffset":66378,"endOffset":66621,"count":0}],"isBlockCoverage":false},{"functionName":"yield","ranges":[{"startOffset":66635,"endOffset":66732,"count":0}],"isBlockCoverage":false},{"functionName":"yieldOn","ranges":[{"startOffset":66748,"endOffset":67185,"count":0}],"isBlockCoverage":false},{"functionName":"yieldTo","ranges":[{"startOffset":67201,"endOffset":67345,"count":0}],"isBlockCoverage":false},{"functionName":"yieldToOn","ranges":[{"startOffset":67363,"endOffset":67939,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":67956,"endOffset":68971,"count":5},{"startOffset":67994,"endOffset":68030,"count":0},{"startOffset":68092,"endOffset":68096,"count":0},{"startOffset":68321,"endOffset":68391,"count":0},{"startOffset":68421,"endOffset":68598,"count":0},{"startOffset":68623,"endOffset":68940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68143,"endOffset":68202,"count":17}],"isBlockCoverage":true},{"functionName":"ensureArgIsAFunction","ranges":[{"startOffset":69000,"endOffset":69260,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":69364,"endOffset":69464,"count":0}],"isBlockCoverage":false},{"functionName":"createProxyCall","ranges":[{"startOffset":69693,"endOffset":70573,"count":25},{"startOffset":69855,"endOffset":69918,"count":0},{"startOffset":70169,"endOffset":70178,"count":0}],"isBlockCoverage":true},{"functionName":"17../proxy-call-util","ranges":[{"startOffset":70737,"endOffset":73584,"count":1}],"isBlockCoverage":true},{"functionName":"invoke","ranges":[{"startOffset":71131,"endOffset":73580,"count":5},{"startOffset":71987,"endOffset":72366,"count":0},{"startOffset":72460,"endOffset":72500,"count":2},{"startOffset":73521,"endOffset":73553,"count":2},{"startOffset":73553,"endOffset":73579,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71460,"endOffset":71667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":72651,"endOffset":72774,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":73238,"endOffset":73314,"count":0}],"isBlockCoverage":false},{"functionName":"18../proxy-call","ranges":[{"startOffset":73637,"endOffset":83747,"count":1}],"isBlockCoverage":true},{"functionName":"named","ranges":[{"startOffset":74264,"endOffset":74712,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":74876,"endOffset":74938,"count":0}],"isBlockCoverage":false},{"functionName":"getCall","ranges":[{"startOffset":74954,"endOffset":75477,"count":45},{"startOffset":75022,"endOffset":75142,"count":0},{"startOffset":75185,"endOffset":75221,"count":20},{"startOffset":75221,"endOffset":75476,"count":25}],"isBlockCoverage":true},{"functionName":"getCalls","ranges":[{"startOffset":75494,"endOffset":75677,"count":0}],"isBlockCoverage":false},{"functionName":"calledBefore","ranges":[{"startOffset":75698,"endOffset":75938,"count":0}],"isBlockCoverage":false},{"functionName":"calledAfter","ranges":[{"startOffset":75958,"endOffset":76143,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyBefore","ranges":[{"startOffset":76175,"endOffset":76432,"count":0}],"isBlockCoverage":false},{"functionName":"calledImmediatelyAfter","ranges":[{"startOffset":76463,"endOffset":76719,"count":0}],"isBlockCoverage":false},{"functionName":"printf","ranges":[{"startOffset":76779,"endOffset":77324,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":77345,"endOffset":78389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":79435,"endOffset":79475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":79591,"endOffset":79631,"count":0}],"isBlockCoverage":false},{"functionName":"createProxy","ranges":[{"startOffset":79970,"endOffset":80224,"count":5}],"isBlockCoverage":true},{"functionName":"wrapFunction","ranges":[{"startOffset":80226,"endOffset":83713,"count":5},{"startOffset":80699,"endOffset":80839,"count":0},{"startOffset":80848,"endOffset":80991,"count":0},{"startOffset":81000,"endOffset":81146,"count":0},{"startOffset":81155,"endOffset":81304,"count":0},{"startOffset":81313,"endOffset":81465,"count":0},{"startOffset":81474,"endOffset":81629,"count":0},{"startOffset":81638,"endOffset":81796,"count":0},{"startOffset":81805,"endOffset":81966,"count":0},{"startOffset":81975,"endOffset":82139,"count":0},{"startOffset":82148,"endOffset":82316,"count":0},{"startOffset":82325,"endOffset":82496,"count":0},{"startOffset":82505,"endOffset":82679,"count":0},{"startOffset":82688,"endOffset":82828,"count":0}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":80575,"endOffset":80670,"count":5}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":80723,"endOffset":80819,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":80872,"endOffset":80971,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81024,"endOffset":81126,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81179,"endOffset":81284,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81337,"endOffset":81445,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81498,"endOffset":81609,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81662,"endOffset":81776,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81829,"endOffset":81946,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":81999,"endOffset":82119,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82173,"endOffset":82296,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82350,"endOffset":82476,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82530,"endOffset":82659,"count":0}],"isBlockCoverage":false},{"functionName":"proxy","ranges":[{"startOffset":82713,"endOffset":82808,"count":0}],"isBlockCoverage":false},{"functionName":"19../util/core/walk-object","ranges":[{"startOffset":83931,"endOffset":84336,"count":1}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":84036,"endOffset":84144,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":84146,"endOffset":84216,"count":0}],"isBlockCoverage":false},{"functionName":"restoreObject","ranges":[{"startOffset":84218,"endOffset":84300,"count":0}],"isBlockCoverage":false},{"functionName":"20../assert","ranges":[{"startOffset":84373,"endOffset":99737,"count":1}],"isBlockCoverage":true},{"functionName":"applyOnEach","ranges":[{"startOffset":85520,"endOffset":85754,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85598,"endOffset":85672,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85703,"endOffset":85750,"count":14}],"isBlockCoverage":true},{"functionName":"throwOnAccessors","ranges":[{"startOffset":85756,"endOffset":86058,"count":0}],"isBlockCoverage":false},{"functionName":"verifySameType","ranges":[{"startOffset":86060,"endOffset":86336,"count":0}],"isBlockCoverage":false},{"functionName":"checkForValidArguments","ranges":[{"startOffset":86338,"endOffset":86775,"count":0}],"isBlockCoverage":false},{"functionName":"Sandbox","ranges":[{"startOffset":86912,"endOffset":99673,"count":1}],"isBlockCoverage":true},{"functionName":"addToCollection","ranges":[{"startOffset":87186,"endOffset":87673,"count":14},{"startOffset":87295,"endOffset":87328,"count":0},{"startOffset":87339,"endOffset":87667,"count":0}],"isBlockCoverage":true},{"functionName":"getFakes","ranges":[{"startOffset":87842,"endOffset":87896,"count":0}],"isBlockCoverage":false},{"functionName":"createStubInstance","ranges":[{"startOffset":87932,"endOffset":88272,"count":0}],"isBlockCoverage":false},{"functionName":"inject","ranges":[{"startOffset":88296,"endOffset":89569,"count":0}],"isBlockCoverage":false},{"functionName":"mock","ranges":[{"startOffset":89591,"endOffset":89756,"count":14}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":89779,"endOffset":89894,"count":0}],"isBlockCoverage":false},{"functionName":"resetBehavior","ranges":[{"startOffset":89925,"endOffset":90007,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":90037,"endOffset":90297,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":90322,"endOffset":90786,"count":7},{"startOffset":90373,"endOffset":90528,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90660,"endOffset":90715,"count":0}],"isBlockCoverage":false},{"functionName":"restoreContext","ranges":[{"startOffset":90818,"endOffset":91088,"count":7},{"startOffset":90912,"endOffset":91087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90952,"endOffset":91038,"count":0}],"isBlockCoverage":false},{"functionName":"getFakeRestorer","ranges":[{"startOffset":91326,"endOffset":91914,"count":0}],"isBlockCoverage":false},{"functionName":"verifyNotReplaced","ranges":[{"startOffset":91920,"endOffset":92327,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":92568,"endOffset":93096,"count":0}],"isBlockCoverage":false},{"functionName":"replaceUsingAccessor","ranges":[{"startOffset":93135,"endOffset":93675,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":93699,"endOffset":94428,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGetter","ranges":[{"startOffset":94459,"endOffset":95517,"count":0}],"isBlockCoverage":false},{"functionName":"replaceSetter","ranges":[{"startOffset":95548,"endOffset":96657,"count":0}],"isBlockCoverage":false},{"functionName":"commonPostInitSetup","ranges":[{"startOffset":96664,"endOffset":97487,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":97507,"endOffset":97652,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":97674,"endOffset":97824,"count":0}],"isBlockCoverage":false},{"functionName":"fake","ranges":[{"startOffset":97893,"endOffset":98022,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98061,"endOffset":98384,"count":7}],"isBlockCoverage":true},{"functionName":"sandbox.fake.<computed>","ranges":[{"startOffset":98205,"endOffset":98367,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeTimers","ranges":[{"startOffset":98416,"endOffset":98604,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":98628,"endOffset":98696,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAndRestore","ranges":[{"startOffset":98730,"endOffset":98985,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeServer","ranges":[{"startOffset":99016,"endOffset":99299,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeXMLHttpRequest","ranges":[{"startOffset":99338,"endOffset":99481,"count":0}],"isBlockCoverage":false},{"functionName":"usingPromise","ranges":[{"startOffset":99511,"endOffset":99670,"count":0}],"isBlockCoverage":false},{"functionName":"21../colorizer","ranges":[{"startOffset":100056,"endOffset":104717,"count":1}],"isBlockCoverage":true},{"functionName":"colorSinonMatchText","ranges":[{"startOffset":100677,"endOffset":101122,"count":0}],"isBlockCoverage":false},{"functionName":"colorDiffText","ranges":[{"startOffset":101188,"endOffset":101606,"count":0}],"isBlockCoverage":false},{"functionName":"quoteStringValue","ranges":[{"startOffset":101672,"endOffset":101807,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":101835,"endOffset":101917,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":101927,"endOffset":102083,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":102093,"endOffset":103742,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":103752,"endOffset":104276,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":104286,"endOffset":104520,"count":0}],"isBlockCoverage":false},{"functionName":"*","ranges":[{"startOffset":104532,"endOffset":104710,"count":0}],"isBlockCoverage":false},{"functionName":"22../proxy","ranges":[{"startOffset":104838,"endOffset":110447,"count":1}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":105792,"endOffset":106065,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":106112,"endOffset":107121,"count":0}],"isBlockCoverage":false},{"functionName":"matchingFakes","ranges":[{"startOffset":107188,"endOffset":107336,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107253,"endOffset":107328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107532,"endOffset":107651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107758,"endOffset":107877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107983,"endOffset":108103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108161,"endOffset":108277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108462,"endOffset":108578,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108640,"endOffset":108819,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108910,"endOffset":109113,"count":0}],"isBlockCoverage":false},{"functionName":"createSpy","ranges":[{"startOffset":109119,"endOffset":109613,"count":0}],"isBlockCoverage":false},{"functionName":"spy","ranges":[{"startOffset":109615,"endOffset":110400,"count":0}],"isBlockCoverage":false},{"functionName":"23../behavior","ranges":[{"startOffset":110687,"endOffset":118283,"count":1}],"isBlockCoverage":true},{"functionName":"createStub","ranges":[{"startOffset":111806,"endOffset":112885,"count":5},{"startOffset":112580,"endOffset":112608,"count":0}],"isBlockCoverage":true},{"functionName":"functionStub","ranges":[{"startOffset":111907,"endOffset":112364,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":112098,"endOffset":112265,"count":0}],"isBlockCoverage":false},{"functionName":"stub","ranges":[{"startOffset":112887,"endOffset":114825,"count":5},{"startOffset":112951,"endOffset":113071,"count":0},{"startOffset":113101,"endOffset":113169,"count":0},{"startOffset":113268,"endOffset":113391,"count":0},{"startOffset":113864,"endOffset":113906,"count":0},{"startOffset":113907,"endOffset":114019,"count":0},{"startOffset":114054,"endOffset":114102,"count":0},{"startOffset":114167,"endOffset":114275,"count":0},{"startOffset":114288,"endOffset":114294,"count":0},{"startOffset":114785,"endOffset":114788,"count":0},{"startOffset":114789,"endOffset":114822,"count":0}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":114480,"endOffset":114737,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPropertyDescriptor","ranges":[{"startOffset":114827,"endOffset":115545,"count":5},{"startOffset":114910,"endOffset":114922,"count":0},{"startOffset":114947,"endOffset":115000,"count":0},{"startOffset":115001,"endOffset":115024,"count":0},{"startOffset":115026,"endOffset":115203,"count":0},{"startOffset":115205,"endOffset":115232,"count":0},{"startOffset":115234,"endOffset":115422,"count":0},{"startOffset":115424,"endOffset":115543,"count":0}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":115547,"endOffset":115720,"count":0}],"isBlockCoverage":false},{"functionName":"getParentBehaviour","ranges":[{"startOffset":115762,"endOffset":115882,"count":2},{"startOffset":115837,"endOffset":115879,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultBehavior","ranges":[{"startOffset":115884,"endOffset":116071,"count":5},{"startOffset":115978,"endOffset":116021,"count":2},{"startOffset":116022,"endOffset":116062,"count":2}],"isBlockCoverage":true},{"functionName":"getCurrentBehavior","ranges":[{"startOffset":116073,"endOffset":116326,"count":5},{"startOffset":116224,"endOffset":116254,"count":0},{"startOffset":116263,"endOffset":116280,"count":0}],"isBlockCoverage":true},{"functionName":"resetBehavior","ranges":[{"startOffset":116402,"endOffset":116808,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":116822,"endOffset":116900,"count":0}],"isBlockCoverage":false},{"functionName":"onCall","ranges":[{"startOffset":116915,"endOffset":117091,"count":0}],"isBlockCoverage":false},{"functionName":"onFirstCall","ranges":[{"startOffset":117111,"endOffset":117172,"count":0}],"isBlockCoverage":false},{"functionName":"onSecondCall","ranges":[{"startOffset":117193,"endOffset":117255,"count":0}],"isBlockCoverage":false},{"functionName":"onThirdCall","ranges":[{"startOffset":117275,"endOffset":117336,"count":0}],"isBlockCoverage":false},{"functionName":"withArgs","ranges":[{"startOffset":117353,"endOffset":117745,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":117782,"endOffset":118028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":118064,"endOffset":118233,"count":35}],"isBlockCoverage":true},{"functionName":"24.@sinonjs/commons","ranges":[{"startOffset":118629,"endOffset":119046,"count":1}],"isBlockCoverage":true},{"functionName":"throwOnFalsyObject","ranges":[{"startOffset":118743,"endOffset":119005,"count":5},{"startOffset":118808,"endOffset":118818,"count":0},{"startOffset":118820,"endOffset":119003,"count":0}],"isBlockCoverage":true},{"functionName":"25","ranges":[{"startOffset":119076,"endOffset":119481,"count":1}],"isBlockCoverage":true},{"functionName":"26.@sinonjs/commons","ranges":[{"startOffset":119490,"endOffset":120351,"count":1}],"isBlockCoverage":true},{"functionName":"exportAsyncBehaviors","ranges":[{"startOffset":119656,"endOffset":120347,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":119770,"endOffset":120325,"count":37},{"startOffset":119940,"endOffset":119965,"count":9},{"startOffset":119967,"endOffset":120291,"count":9}],"isBlockCoverage":true},{"functionName":"acc.<computed>","ranges":[{"startOffset":120009,"endOffset":120276,"count":0}],"isBlockCoverage":false},{"functionName":"27.@sinonjs/commons","ranges":[{"startOffset":120381,"endOffset":125435,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":120775,"endOffset":121709,"count":1},{"startOffset":121564,"endOffset":121661,"count":10}],"isBlockCoverage":true},{"functionName":"constructor","ranges":[{"startOffset":120828,"endOffset":120875,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":120895,"endOffset":120942,"count":1}],"isBlockCoverage":true},{"functionName":"valueOf","ranges":[{"startOffset":120961,"endOffset":121008,"count":1}],"isBlockCoverage":true},{"functionName":"toLocaleString","ranges":[{"startOffset":121034,"endOffset":121081,"count":1}],"isBlockCoverage":true},{"functionName":"prototype","ranges":[{"startOffset":121102,"endOffset":121149,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototypeOf","ranges":[{"startOffset":121174,"endOffset":121221,"count":1}],"isBlockCoverage":true},{"functionName":"propertyIsEnumerable","ranges":[{"startOffset":121253,"endOffset":121300,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":121326,"endOffset":121373,"count":1}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":121391,"endOffset":121438,"count":1}],"isBlockCoverage":true},{"functionName":"unique","ranges":[{"startOffset":121456,"endOffset":121503,"count":1}],"isBlockCoverage":true},{"functionName":"extendCommon","ranges":[{"startOffset":121801,"endOffset":122530,"count":65},{"startOffset":121917,"endOffset":122508,"count":81},{"startOffset":121978,"endOffset":122097,"count":1093},{"startOffset":122333,"endOffset":122382,"count":0},{"startOffset":122383,"endOffset":122433,"count":0},{"startOffset":122444,"endOffset":122502,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":122915,"endOffset":124661,"count":15}],"isBlockCoverage":true},{"functionName":"copyValue","ranges":[{"startOffset":123019,"endOffset":124651,"count":304},{"startOffset":123373,"endOffset":123411,"count":0},{"startOffset":123413,"endOffset":123452,"count":0},{"startOffset":124202,"endOffset":124581,"count":0}],"isBlockCoverage":true},{"functionName":"extendNonEnum","ranges":[{"startOffset":125053,"endOffset":125431,"count":50}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":125164,"endOffset":125421,"count":789}],"isBlockCoverage":true},{"functionName":"28","ranges":[{"startOffset":125465,"endOffset":126165,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":125531,"endOffset":126161,"count":0}],"isBlockCoverage":false},{"functionName":"29","ranges":[{"startOffset":126174,"endOffset":126640,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":126286,"endOffset":126346,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTick","ranges":[{"startOffset":126365,"endOffset":126636,"count":1},{"startOffset":126530,"endOffset":126635,"count":0}],"isBlockCoverage":true},{"functionName":"30","ranges":[{"startOffset":126649,"endOffset":128052,"count":1}],"isBlockCoverage":true},{"functionName":"getPropertyDescriptor","ranges":[{"startOffset":127559,"endOffset":128008,"count":25},{"startOffset":127696,"endOffset":127748,"count":20},{"startOffset":127784,"endOffset":127859,"count":20},{"startOffset":127866,"endOffset":127919,"count":0},{"startOffset":127941,"endOffset":127982,"count":20}],"isBlockCoverage":true},{"functionName":"31","ranges":[{"startOffset":128061,"endOffset":128651,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":128464,"endOffset":128647,"count":5},{"startOffset":128512,"endOffset":128552,"count":0},{"startOffset":128553,"endOffset":128603,"count":0},{"startOffset":128604,"endOffset":128638,"count":0}],"isBlockCoverage":true},{"functionName":"32","ranges":[{"startOffset":128660,"endOffset":129032,"count":1}],"isBlockCoverage":true},{"functionName":"isNonExistentProperty","ranges":[{"startOffset":128833,"endOffset":128988,"count":5},{"startOffset":128919,"endOffset":128953,"count":0},{"startOffset":128954,"endOffset":128978,"count":0}],"isBlockCoverage":true},{"functionName":"33../get-property-descriptor","ranges":[{"startOffset":129041,"endOffset":129396,"count":1}],"isBlockCoverage":true},{"functionName":"isPropertyConfigurable","ranges":[{"startOffset":129159,"endOffset":129351,"count":0}],"isBlockCoverage":false},{"functionName":"34","ranges":[{"startOffset":129435,"endOffset":129677,"count":1}],"isBlockCoverage":true},{"functionName":"isRestorable","ranges":[{"startOffset":129484,"endOffset":129642,"count":0}],"isBlockCoverage":false},{"functionName":"35../get-next-tick","ranges":[{"startOffset":129686,"endOffset":129922,"count":1}],"isBlockCoverage":true},{"functionName":"36","ranges":[{"startOffset":129973,"endOffset":130634,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":130353,"endOffset":130544,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":130550,"endOffset":130627,"count":5}],"isBlockCoverage":true},{"functionName":"37","ranges":[{"startOffset":130643,"endOffset":130845,"count":1}],"isBlockCoverage":true},{"functionName":"timesInWords","ranges":[{"startOffset":130759,"endOffset":130841,"count":5},{"startOffset":130814,"endOffset":130838,"count":0}],"isBlockCoverage":true},{"functionName":"38","ranges":[{"startOffset":130854,"endOffset":131315,"count":1}],"isBlockCoverage":true},{"functionName":"usePromiseLibrary","ranges":[{"startOffset":130945,"endOffset":131275,"count":19},{"startOffset":131053,"endOffset":131273,"count":0}],"isBlockCoverage":true},{"functionName":"39../get-property-descriptor","ranges":[{"startOffset":131324,"endOffset":133013,"count":1}],"isBlockCoverage":true},{"functionName":"walkObject","ranges":[{"startOffset":131915,"endOffset":132980,"count":0}],"isBlockCoverage":false},{"functionName":"40.@sinonjs/commons","ranges":[{"startOffset":133086,"endOffset":134952,"count":1}],"isBlockCoverage":true},{"functionName":"walkInternal","ranges":[{"startOffset":133206,"endOffset":134198,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":134849,"endOffset":134948,"count":0}],"isBlockCoverage":false},{"functionName":"41../extend","ranges":[{"startOffset":134982,"endOffset":143756,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":135090,"endOffset":135098,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":135466,"endOffset":135616,"count":5},{"startOffset":135540,"endOffset":135607,"count":0}],"isBlockCoverage":true},{"functionName":"mirrorProperties","ranges":[{"startOffset":135618,"endOffset":135798,"count":10},{"startOffset":135693,"endOffset":135796,"count":25},{"startOffset":135738,"endOffset":135790,"count":20}],"isBlockCoverage":true},{"functionName":"getAccessor","ranges":[{"startOffset":135800,"endOffset":136191,"count":10},{"startOffset":135999,"endOffset":136172,"count":20},{"startOffset":136051,"endOffset":136111,"count":0},{"startOffset":136122,"endOffset":136166,"count":0}],"isBlockCoverage":true},{"functionName":"wrapMethod","ranges":[{"startOffset":136298,"endOffset":143752,"count":5},{"startOffset":136363,"endOffset":136433,"count":0},{"startOffset":136472,"endOffset":136501,"count":0},{"startOffset":136503,"endOffset":136626,"count":0},{"startOffset":138292,"endOffset":138326,"count":0},{"startOffset":138442,"endOffset":138450,"count":0},{"startOffset":138554,"endOffset":138709,"count":0},{"startOffset":138758,"endOffset":138804,"count":0},{"startOffset":138815,"endOffset":138950,"count":0},{"startOffset":138970,"endOffset":139189,"count":0},{"startOffset":139789,"endOffset":139844,"count":0},{"startOffset":140082,"endOffset":140323,"count":0},{"startOffset":140329,"endOffset":140378,"count":0}],"isBlockCoverage":true},{"functionName":"checkWrappedMethod","ranges":[{"startOffset":136632,"endOffset":137733,"count":5},{"startOffset":136737,"endOffset":136946,"count":0},{"startOffset":136978,"endOffset":137008,"count":0},{"startOffset":137010,"endOffset":137199,"count":0},{"startOffset":137237,"endOffset":137499,"count":0},{"startOffset":137520,"endOffset":137727,"count":0}],"isBlockCoverage":true},{"functionName":"simplePropertyAssignment","ranges":[{"startOffset":137842,"endOffset":138044,"count":0}],"isBlockCoverage":false},{"functionName":"extendObjectWithWrappedMethods","ranges":[{"startOffset":140423,"endOffset":141230,"count":5},{"startOffset":140624,"endOffset":140642,"count":0},{"startOffset":141142,"endOffset":141214,"count":0}],"isBlockCoverage":true},{"functionName":"restore","ranges":[{"startOffset":141236,"endOffset":143730,"count":5},{"startOffset":141553,"endOffset":142761,"count":0},{"startOffset":142793,"endOffset":142938,"count":0},{"startOffset":143222,"endOffset":143300,"count":0},{"startOffset":143314,"endOffset":143463,"count":0},{"startOffset":143529,"endOffset":143724,"count":0}],"isBlockCoverage":true},{"functionName":"42../core/extend","ranges":[{"startOffset":143849,"endOffset":146196,"count":1}],"isBlockCoverage":true},{"functionName":"createClock","ranges":[{"startOffset":144184,"endOffset":144494,"count":0}],"isBlockCoverage":false},{"functionName":"addIfDefined","ranges":[{"startOffset":144546,"endOffset":144738,"count":2}],"isBlockCoverage":true},{"functionName":"exports.useFakeTimers","ranges":[{"startOffset":144917,"endOffset":145825,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":145858,"endOffset":145924,"count":0}],"isBlockCoverage":false},{"functionName":"43../prototypes/array","ranges":[{"startOffset":146271,"endOffset":147752,"count":4}],"isBlockCoverage":true},{"functionName":"hasCallsLeft","ranges":[{"startOffset":146390,"endOffset":146550,"count":0}],"isBlockCoverage":false},{"functionName":"checkAdjacentCalls","ranges":[{"startOffset":146572,"endOffset":146907,"count":0}],"isBlockCoverage":false},{"functionName":"calledInOrder","ranges":[{"startOffset":147482,"endOffset":147716,"count":0}],"isBlockCoverage":false},{"functionName":"44../function-name","ranges":[{"startOffset":147784,"endOffset":148741,"count":4}],"isBlockCoverage":true},{"functionName":"className","ranges":[{"startOffset":148039,"endOffset":148709,"count":0}],"isBlockCoverage":false},{"functionName":"45","ranges":[{"startOffset":148770,"endOffset":150169,"count":4}],"isBlockCoverage":true},{"functionName":"exports.wrap","ranges":[{"startOffset":149086,"endOffset":149324,"count":0}],"isBlockCoverage":false},{"functionName":"exports.defaultMsg","ranges":[{"startOffset":149578,"endOffset":149748,"count":0}],"isBlockCoverage":false},{"functionName":"exports.printWarning","ranges":[{"startOffset":149884,"endOffset":150165,"count":0}],"isBlockCoverage":false},{"functionName":"46","ranges":[{"startOffset":150178,"endOffset":150880,"count":4}],"isBlockCoverage":true},{"functionName":"every","ranges":[{"startOffset":150453,"endOffset":150876,"count":0}],"isBlockCoverage":false},{"functionName":"47","ranges":[{"startOffset":150889,"endOffset":151743,"count":4}],"isBlockCoverage":true},{"functionName":"functionName","ranges":[{"startOffset":151055,"endOffset":151739,"count":0}],"isBlockCoverage":false},{"functionName":"48","ranges":[{"startOffset":151752,"endOffset":152174,"count":4},{"startOffset":152002,"endOffset":152139,"count":0}],"isBlockCoverage":true},{"functionName":"49../called-in-order","ranges":[{"startOffset":152183,"endOffset":152676,"count":4}],"isBlockCoverage":true},{"functionName":"50../prototypes/array","ranges":[{"startOffset":152874,"endOffset":153727,"count":4}],"isBlockCoverage":true},{"functionName":"comparator","ranges":[{"startOffset":153040,"endOffset":153284,"count":0}],"isBlockCoverage":false},{"functionName":"orderByFirstCall","ranges":[{"startOffset":153609,"endOffset":153688,"count":0}],"isBlockCoverage":false},{"functionName":"51../copy-prototype-methods","ranges":[{"startOffset":153759,"endOffset":153917,"count":4}],"isBlockCoverage":true},{"functionName":"52../throws-on-proto","ranges":[{"startOffset":153955,"endOffset":155001,"count":4},{"startOffset":154412,"endOffset":154459,"count":0}],"isBlockCoverage":true},{"functionName":"copyPrototypeMethods","ranges":[{"startOffset":154478,"endOffset":154997,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":154660,"endOffset":154968,"count":512},{"startOffset":154757,"endOffset":154795,"count":16},{"startOffset":154795,"endOffset":154848,"count":496},{"startOffset":154848,"endOffset":154886,"count":20},{"startOffset":154886,"endOffset":154967,"count":476}],"isBlockCoverage":true},{"functionName":"53../copy-prototype-methods","ranges":[{"startOffset":155032,"endOffset":155193,"count":4}],"isBlockCoverage":true},{"functionName":"54../array","ranges":[{"startOffset":155231,"endOffset":155492,"count":4}],"isBlockCoverage":true},{"functionName":"55../copy-prototype-methods","ranges":[{"startOffset":155579,"endOffset":155735,"count":4}],"isBlockCoverage":true},{"functionName":"56../copy-prototype-methods","ranges":[{"startOffset":155773,"endOffset":155932,"count":4}],"isBlockCoverage":true},{"functionName":"57../copy-prototype-methods","ranges":[{"startOffset":155970,"endOffset":156126,"count":4}],"isBlockCoverage":true},{"functionName":"58../copy-prototype-methods","ranges":[{"startOffset":156164,"endOffset":156323,"count":4}],"isBlockCoverage":true},{"functionName":"59","ranges":[{"startOffset":156361,"endOffset":157146,"count":4},{"startOffset":156883,"endOffset":157110,"count":0}],"isBlockCoverage":true},{"functionName":"60.type-detect","ranges":[{"startOffset":157155,"endOffset":157457,"count":4}],"isBlockCoverage":true},{"functionName":"typeOf","ranges":[{"startOffset":157389,"endOffset":157453,"count":26}],"isBlockCoverage":true},{"functionName":"61","ranges":[{"startOffset":157483,"endOffset":157889,"count":4}],"isBlockCoverage":true},{"functionName":"valueToString","ranges":[{"startOffset":157633,"endOffset":157853,"count":0}],"isBlockCoverage":false},{"functionName":"62.@sinonjs/commons","ranges":[{"startOffset":157898,"endOffset":219378,"count":1},{"startOffset":158147,"endOffset":158183,"count":0}],"isBlockCoverage":true},{"functionName":"withGlobal","ranges":[{"startOffset":162951,"endOffset":218895,"count":1},{"startOffset":164401,"endOffset":164463,"count":0},{"startOffset":164542,"endOffset":164603,"count":0},{"startOffset":164680,"endOffset":164740,"count":0},{"startOffset":164815,"endOffset":164874,"count":0},{"startOffset":191486,"endOffset":191563,"count":0},{"startOffset":191680,"endOffset":191755,"count":0},{"startOffset":191793,"endOffset":191866,"count":0},{"startOffset":191903,"endOffset":191974,"count":0},{"startOffset":192094,"endOffset":192115,"count":0}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":163213,"endOffset":163258,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP_ARRAY","ranges":[{"startOffset":163283,"endOffset":163321,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberFinite","ranges":[{"startOffset":165289,"endOffset":165438,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsNearInfiniteLimit","ranges":[{"startOffset":165551,"endOffset":165712,"count":0}],"isBlockCoverage":false},{"functionName":"resetIsNearInfiniteLimit","ranges":[{"startOffset":165741,"endOffset":165821,"count":0}],"isBlockCoverage":false},{"functionName":"parseTime","ranges":[{"startOffset":166092,"endOffset":166782,"count":0}],"isBlockCoverage":false},{"functionName":"nanoRemainder","ranges":[{"startOffset":167074,"endOffset":167334,"count":0}],"isBlockCoverage":false},{"functionName":"getEpoch","ranges":[{"startOffset":167494,"endOffset":167830,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":167960,"endOffset":168069,"count":0}],"isBlockCoverage":false},{"functionName":"getInfiniteLoopError","ranges":[{"startOffset":168145,"endOffset":170437,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorDateProperties","ranges":[{"startOffset":170569,"endOffset":171647,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":171704,"endOffset":173818,"count":0}],"isBlockCoverage":false},{"functionName":"createIntl","ranges":[{"startOffset":174128,"endOffset":175411,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueJob","ranges":[{"startOffset":175468,"endOffset":175675,"count":0}],"isBlockCoverage":false},{"functionName":"runJobs","ranges":[{"startOffset":175732,"endOffset":176273,"count":0}],"isBlockCoverage":false},{"functionName":"addTimer","ranges":[{"startOffset":176400,"endOffset":179248,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimers","ranges":[{"startOffset":179416,"endOffset":180320,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimerInRange","ranges":[{"startOffset":180448,"endOffset":180974,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimer","ranges":[{"startOffset":181048,"endOffset":181413,"count":0}],"isBlockCoverage":false},{"functionName":"lastTimer","ranges":[{"startOffset":181487,"endOffset":181852,"count":0}],"isBlockCoverage":false},{"functionName":"callTimer","ranges":[{"startOffset":181930,"endOffset":182427,"count":0}],"isBlockCoverage":false},{"functionName":"getClearHandler","ranges":[{"startOffset":182539,"endOffset":182727,"count":0}],"isBlockCoverage":false},{"functionName":"getScheduleHandler","ranges":[{"startOffset":182842,"endOffset":183032,"count":0}],"isBlockCoverage":false},{"functionName":"createWarnOnce","ranges":[{"startOffset":183109,"endOffset":183291,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":183175,"endOffset":183284,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimer","ranges":[{"startOffset":183440,"endOffset":185343,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":185449,"endOffset":187888,"count":0}],"isBlockCoverage":false},{"functionName":"hijackMethod","ranges":[{"startOffset":188082,"endOffset":189784,"count":0}],"isBlockCoverage":false},{"functionName":"doIntervalTick","ranges":[{"startOffset":189874,"endOffset":189968,"count":0}],"isBlockCoverage":false},{"functionName":"createClock","ranges":[{"startOffset":192346,"endOffset":213844,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":213976,"endOffset":218720,"count":0}],"isBlockCoverage":false},{"functionName":"63","ranges":[{"startOffset":219432,"endOffset":219704,"count":1}],"isBlockCoverage":true},{"functionName":"64../create-matcher/assert-matcher","ranges":[{"startOffset":219713,"endOffset":232008,"count":1}],"isBlockCoverage":true},{"functionName":"createMatcher","ranges":[{"startOffset":221202,"endOffset":222153,"count":15},{"startOffset":221393,"endOffset":221459,"count":0},{"startOffset":221491,"endOffset":221608,"count":0},{"startOffset":221692,"endOffset":221804,"count":0},{"startOffset":221826,"endOffset":221893,"count":0}],"isBlockCoverage":true},{"functionName":"m.test","ranges":[{"startOffset":221717,"endOffset":221797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222227,"endOffset":222259,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222308,"endOffset":222381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222433,"endOffset":222482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":222532,"endOffset":222573,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.same","ranges":[{"startOffset":222607,"endOffset":222764,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.in","ranges":[{"startOffset":222786,"endOffset":223144,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.typeOf","ranges":[{"startOffset":223170,"endOffset":223343,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":223253,"endOffset":223318,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.instanceOf","ranges":[{"startOffset":223373,"endOffset":223891,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyMatcher","ranges":[{"startOffset":224147,"endOffset":224872,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224220,"endOffset":224869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":224916,"endOffset":225069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":225125,"endOffset":225201,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.hasNested","ranges":[{"startOffset":225241,"endOffset":225820,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.json","ranges":[{"startOffset":225982,"endOffset":226429,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.every","ranges":[{"startOffset":226454,"endOffset":226950,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.some","ranges":[{"startOffset":226974,"endOffset":227473,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.deepEquals","ranges":[{"startOffset":227563,"endOffset":228308,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.startsWith","ranges":[{"startOffset":228344,"endOffset":228683,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.endsWith","ranges":[{"startOffset":228717,"endOffset":229191,"count":0}],"isBlockCoverage":false},{"functionName":"createMatcher.array.contains","ranges":[{"startOffset":229225,"endOffset":229566,"count":0}],"isBlockCoverage":false},{"functionName":"mapDeepEquals","ranges":[{"startOffset":229650,"endOffset":230201,"count":0}],"isBlockCoverage":false},{"functionName":"mapContains","ranges":[{"startOffset":230233,"endOffset":230585,"count":0}],"isBlockCoverage":false},{"functionName":"setDeepEquals","ranges":[{"startOffset":230669,"endOffset":231183,"count":0}],"isBlockCoverage":false},{"functionName":"setContains","ranges":[{"startOffset":231215,"endOffset":231535,"count":0}],"isBlockCoverage":false},{"functionName":"65../is-matcher","ranges":[{"startOffset":232351,"endOffset":232711,"count":1}],"isBlockCoverage":true},{"functionName":"assertMatcher","ranges":[{"startOffset":232558,"endOffset":232675,"count":0}],"isBlockCoverage":false},{"functionName":"66","ranges":[{"startOffset":232737,"endOffset":233410,"count":1}],"isBlockCoverage":true},{"functionName":"assertMethodExists","ranges":[{"startOffset":233156,"endOffset":233369,"count":0}],"isBlockCoverage":false},{"functionName":"67.@sinonjs/commons","ranges":[{"startOffset":233419,"endOffset":234098,"count":1}],"isBlockCoverage":true},{"functionName":"assertType","ranges":[{"startOffset":233846,"endOffset":234065,"count":11},{"startOffset":233944,"endOffset":234063,"count":0}],"isBlockCoverage":true},{"functionName":"68.@sinonjs/commons","ranges":[{"startOffset":234128,"endOffset":234524,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":234394,"endOffset":234491,"count":0}],"isBlockCoverage":false},{"functionName":"69../matcher-prototype","ranges":[{"startOffset":234554,"endOffset":235027,"count":1}],"isBlockCoverage":true},{"functionName":"isMatcher","ranges":[{"startOffset":234913,"endOffset":234995,"count":88}],"isBlockCoverage":true},{"functionName":"70.../deep-equal","ranges":[{"startOffset":235082,"endOffset":236780,"count":1}],"isBlockCoverage":true},{"functionName":"matchObject","ranges":[{"startOffset":235809,"endOffset":236746,"count":0}],"isBlockCoverage":false},{"functionName":"71.../create-matcher","ranges":[{"startOffset":236847,"endOffset":238168,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":236935,"endOffset":236983,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.or","ranges":[{"startOffset":237011,"endOffset":237554,"count":0}],"isBlockCoverage":false},{"functionName":"matcherPrototype.and","ranges":[{"startOffset":237580,"endOffset":238128,"count":0}],"isBlockCoverage":false},{"functionName":"72../match-object","ranges":[{"startOffset":238199,"endOffset":240360,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeMap","ranges":[{"startOffset":238636,"endOffset":240323,"count":1}],"isBlockCoverage":true},{"functionName":"function","ranges":[{"startOffset":238686,"endOffset":238840,"count":15},{"startOffset":238789,"endOffset":238829,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":238858,"endOffset":239073,"count":0}],"isBlockCoverage":false},{"functionName":"object","ranges":[{"startOffset":239091,"endOffset":239805,"count":0}],"isBlockCoverage":false},{"functionName":"regexp","ranges":[{"startOffset":239823,"endOffset":239995,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":240013,"endOffset":240313,"count":0}],"isBlockCoverage":false},{"functionName":"73../get-class","ranges":[{"startOffset":240410,"endOffset":251615,"count":1}],"isBlockCoverage":true},{"functionName":"deepEqualCyclic","ranges":[{"startOffset":242311,"endOffset":251442,"count":42}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":242933,"endOffset":251405,"count":42},{"startOffset":243294,"endOffset":243469,"count":18},{"startOffset":243340,"endOffset":243408,"count":0},{"startOffset":243469,"endOffset":243622,"count":24},{"startOffset":243622,"endOffset":243653,"count":0},{"startOffset":243654,"endOffset":243690,"count":0},{"startOffset":243691,"endOffset":243724,"count":0},{"startOffset":243725,"endOffset":243763,"count":0},{"startOffset":243764,"endOffset":243802,"count":0},{"startOffset":243803,"endOffset":243846,"count":0},{"startOffset":243847,"endOffset":243885,"count":0},{"startOffset":243886,"endOffset":243929,"count":0},{"startOffset":243940,"endOffset":244008,"count":24},{"startOffset":244008,"endOffset":244137,"count":0},{"startOffset":244139,"endOffset":244325,"count":0},{"startOffset":244327,"endOffset":244636,"count":0},{"startOffset":244638,"endOffset":244850,"count":0},{"startOffset":244852,"endOffset":244987,"count":0},{"startOffset":244989,"endOffset":245498,"count":0},{"startOffset":245515,"endOffset":245628,"count":0},{"startOffset":245785,"endOffset":245815,"count":0},{"startOffset":245817,"endOffset":246371,"count":0},{"startOffset":246373,"endOffset":246718,"count":0},{"startOffset":246720,"endOffset":247746,"count":0},{"startOffset":247747,"endOffset":247796,"count":0},{"startOffset":247807,"endOffset":247980,"count":0},{"startOffset":247981,"endOffset":248019,"count":0},{"startOffset":248104,"endOffset":248147,"count":0},{"startOffset":248148,"endOffset":248191,"count":0},{"startOffset":248230,"endOffset":248262,"count":0},{"startOffset":248264,"endOffset":251404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":247008,"endOffset":247187,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":248566,"endOffset":248751,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":248852,"endOffset":251397,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqualCyclic.use","ranges":[{"startOffset":251466,"endOffset":251576,"count":3}],"isBlockCoverage":true},{"functionName":"deepEqual","ranges":[{"startOffset":251496,"endOffset":251573,"count":42}],"isBlockCoverage":true},{"functionName":"74.@sinonjs/commons","ranges":[{"startOffset":251848,"endOffset":252383,"count":1}],"isBlockCoverage":true},{"functionName":"getClass","ranges":[{"startOffset":252278,"endOffset":252352,"count":0}],"isBlockCoverage":false},{"functionName":"75../is-nan","ranges":[{"startOffset":252413,"endOffset":253449,"count":1}],"isBlockCoverage":true},{"functionName":"identical","ranges":[{"startOffset":253235,"endOffset":253417,"count":24},{"startOffset":253290,"endOffset":253321,"count":0},{"startOffset":253351,"endOffset":253389,"count":0},{"startOffset":253396,"endOffset":253416,"count":0}],"isBlockCoverage":true},{"functionName":"76../get-class","ranges":[{"startOffset":253490,"endOffset":253928,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":253817,"endOffset":253894,"count":0}],"isBlockCoverage":false},{"functionName":"77../array-types","ranges":[{"startOffset":253953,"endOffset":254608,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayType","ranges":[{"startOffset":254469,"endOffset":254574,"count":0}],"isBlockCoverage":false},{"functionName":"78","ranges":[{"startOffset":254675,"endOffset":255005,"count":1}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":254916,"endOffset":254976,"count":0}],"isBlockCoverage":false},{"functionName":"79","ranges":[{"startOffset":255014,"endOffset":255819,"count":1},{"startOffset":255105,"endOffset":255137,"count":0}],"isBlockCoverage":true},{"functionName":"isElement","ranges":[{"startOffset":255538,"endOffset":255787,"count":0}],"isBlockCoverage":false},{"functionName":"80","ranges":[{"startOffset":255828,"endOffset":256339,"count":1}],"isBlockCoverage":true},{"functionName":"isIterable","ranges":[{"startOffset":256123,"endOffset":256306,"count":0}],"isBlockCoverage":false},{"functionName":"81","ranges":[{"startOffset":256348,"endOffset":256700,"count":1}],"isBlockCoverage":true},{"functionName":"isMap","ranges":[{"startOffset":256584,"endOffset":256672,"count":0}],"isBlockCoverage":false},{"functionName":"82","ranges":[{"startOffset":256709,"endOffset":257211,"count":1}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":256910,"endOffset":257183,"count":0}],"isBlockCoverage":false},{"functionName":"83","ranges":[{"startOffset":257220,"endOffset":257562,"count":1}],"isBlockCoverage":true},{"functionName":"isNegZero","ranges":[{"startOffset":257450,"endOffset":257530,"count":0}],"isBlockCoverage":false},{"functionName":"84","ranges":[{"startOffset":257571,"endOffset":258572,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":258135,"endOffset":258541,"count":0}],"isBlockCoverage":false},{"functionName":"85","ranges":[{"startOffset":258581,"endOffset":259008,"count":1}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":258885,"endOffset":258980,"count":0}],"isBlockCoverage":false},{"functionName":"86.@sinonjs/commons","ranges":[{"startOffset":259017,"endOffset":259924,"count":1}],"isBlockCoverage":true},{"functionName":"isSubset","ranges":[{"startOffset":259551,"endOffset":259893,"count":0}],"isBlockCoverage":false},{"functionName":"87.@sinonjs/commons","ranges":[{"startOffset":259954,"endOffset":261866,"count":1}],"isBlockCoverage":true},{"functionName":"iterableToString","ranges":[{"startOffset":260367,"endOffset":260515,"count":0}],"isBlockCoverage":false},{"functionName":"mapToString","ranges":[{"startOffset":260679,"endOffset":261018,"count":0}],"isBlockCoverage":false},{"functionName":"genericIterableToString","ranges":[{"startOffset":261202,"endOffset":261538,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":261726,"endOffset":261827,"count":0}],"isBlockCoverage":false},{"functionName":"88../create-matcher","ranges":[{"startOffset":261896,"endOffset":267449,"count":1}],"isBlockCoverage":true},{"functionName":"arrayContains","ranges":[{"startOffset":262804,"endOffset":263349,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":263663,"endOffset":267295,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":267364,"endOffset":267419,"count":26}],"isBlockCoverage":true},{"functionName":"89../create-matcher","ranges":[{"startOffset":267575,"endOffset":268276,"count":1}],"isBlockCoverage":true},{"functionName":"90../prototypes/array","ranges":[{"startOffset":268439,"endOffset":268519,"count":1}],"isBlockCoverage":true},{"functionName":"91../function-name","ranges":[{"startOffset":268560,"endOffset":268640,"count":1}],"isBlockCoverage":true},{"functionName":"92.dup","ranges":[{"startOffset":268678,"endOffset":268758,"count":1}],"isBlockCoverage":true},{"functionName":"93.dup","ranges":[{"startOffset":268775,"endOffset":268855,"count":1}],"isBlockCoverage":true},{"functionName":"94.dup","ranges":[{"startOffset":268872,"endOffset":268952,"count":1}],"isBlockCoverage":true},{"functionName":"95.dup","ranges":[{"startOffset":268969,"endOffset":269049,"count":1}],"isBlockCoverage":true},{"functionName":"96../called-in-order","ranges":[{"startOffset":269066,"endOffset":269146,"count":1}],"isBlockCoverage":true},{"functionName":"97../prototypes/array","ranges":[{"startOffset":269356,"endOffset":269436,"count":1}],"isBlockCoverage":true},{"functionName":"98../copy-prototype-methods","ranges":[{"startOffset":269477,"endOffset":269557,"count":1}],"isBlockCoverage":true},{"functionName":"99../throws-on-proto","ranges":[{"startOffset":269604,"endOffset":269684,"count":1}],"isBlockCoverage":true},{"functionName":"100../copy-prototype-methods","ranges":[{"startOffset":269726,"endOffset":269806,"count":1}],"isBlockCoverage":true},{"functionName":"101../array","ranges":[{"startOffset":269854,"endOffset":269934,"count":1}],"isBlockCoverage":true},{"functionName":"102../copy-prototype-methods","ranges":[{"startOffset":270036,"endOffset":270116,"count":1}],"isBlockCoverage":true},{"functionName":"103../copy-prototype-methods","ranges":[{"startOffset":270164,"endOffset":270244,"count":1}],"isBlockCoverage":true},{"functionName":"104../copy-prototype-methods","ranges":[{"startOffset":270292,"endOffset":270372,"count":1}],"isBlockCoverage":true},{"functionName":"105../copy-prototype-methods","ranges":[{"startOffset":270420,"endOffset":270500,"count":1}],"isBlockCoverage":true},{"functionName":"106.dup","ranges":[{"startOffset":270548,"endOffset":270628,"count":1}],"isBlockCoverage":true},{"functionName":"107.dup","ranges":[{"startOffset":270646,"endOffset":270726,"count":1}],"isBlockCoverage":true},{"functionName":"108.dup","ranges":[{"startOffset":270762,"endOffset":270842,"count":1}],"isBlockCoverage":true},{"functionName":"109../lib/encoding.js","ranges":[{"startOffset":270860,"endOffset":271154,"count":0}],"isBlockCoverage":false},{"functionName":"110","ranges":[{"startOffset":271187,"endOffset":801316,"count":0}],"isBlockCoverage":false},{"functionName":"111../encoding-indexes.js","ranges":[{"startOffset":801326,"endOffset":902762,"count":0}],"isBlockCoverage":false},{"functionName":"112.object-assign","ranges":[{"startOffset":902799,"endOffset":918830,"count":1},{"startOffset":918697,"endOffset":918826,"count":0}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":903191,"endOffset":903510,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":903511,"endOffset":903687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":905275,"endOffset":905333,"count":1}],"isBlockCoverage":true},{"functionName":"foo","ranges":[{"startOffset":905298,"endOffset":905315,"count":0}],"isBlockCoverage":false},{"functionName":"pToString","ranges":[{"startOffset":905338,"endOffset":905412,"count":0}],"isBlockCoverage":false},{"functionName":"isView","ranges":[{"startOffset":905413,"endOffset":905849,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":906428,"endOffset":906645,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":906670,"endOffset":907724,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":907815,"endOffset":907947,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":907948,"endOffset":908194,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":908195,"endOffset":908356,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":908854,"endOffset":909103,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":909480,"endOffset":909570,"count":1},{"startOffset":909524,"endOffset":909568,"count":0}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":909726,"endOffset":909850,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":910008,"endOffset":910148,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":910287,"endOffset":910454,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":910482,"endOffset":910666,"count":0}],"isBlockCoverage":false},{"functionName":"_deepEqual","ranges":[{"startOffset":910669,"endOffset":913619,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":913621,"endOffset":913726,"count":0}],"isBlockCoverage":false},{"functionName":"objEquiv","ranges":[{"startOffset":913728,"endOffset":914989,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":915136,"endOffset":915311,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":915362,"endOffset":915547,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":915707,"endOffset":915855,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":916033,"endOffset":916187,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":916190,"endOffset":916671,"count":0}],"isBlockCoverage":false},{"functionName":"_tryBlock","ranges":[{"startOffset":916673,"endOffset":916787,"count":0}],"isBlockCoverage":false},{"functionName":"_throws","ranges":[{"startOffset":916789,"endOffset":917853,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":917956,"endOffset":918055,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":918141,"endOffset":918241,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":918261,"endOffset":918298,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":918343,"endOffset":918434,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":918700,"endOffset":918826,"count":0}],"isBlockCoverage":false},{"functionName":"113","ranges":[{"startOffset":918871,"endOffset":919579,"count":2},{"startOffset":919288,"endOffset":919576,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":919023,"endOffset":919285,"count":1}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":919353,"endOffset":919574,"count":0}],"isBlockCoverage":false},{"functionName":"114","ranges":[{"startOffset":919589,"endOffset":919828,"count":2}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":919640,"endOffset":919826,"count":0}],"isBlockCoverage":false},{"functionName":"115../support/isBuffer","ranges":[{"startOffset":919838,"endOffset":935437,"count":2}],"isBlockCoverage":true},{"functionName":"exports.format","ranges":[{"startOffset":921054,"endOffset":921889,"count":0}],"isBlockCoverage":false},{"functionName":"exports.deprecate","ranges":[{"startOffset":922066,"endOffset":922699,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debuglog","ranges":[{"startOffset":922757,"endOffset":923234,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":923527,"endOffset":924260,"count":17},{"startOffset":923683,"endOffset":923708,"count":0},{"startOffset":923738,"endOffset":923764,"count":0},{"startOffset":923788,"endOffset":923837,"count":0},{"startOffset":923853,"endOffset":923921,"count":0},{"startOffset":924184,"endOffset":924215,"count":0}],"isBlockCoverage":true},{"functionName":"stylizeWithColor","ranges":[{"startOffset":924929,"endOffset":925179,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":925182,"endOffset":925239,"count":35}],"isBlockCoverage":true},{"functionName":"arrayToHash","ranges":[{"startOffset":925242,"endOffset":925372,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":925306,"endOffset":925352,"count":12}],"isBlockCoverage":true},{"functionName":"formatValue","ranges":[{"startOffset":925375,"endOffset":928491,"count":29},{"startOffset":925622,"endOffset":925734,"count":0},{"startOffset":925735,"endOffset":925878,"count":0},{"startOffset":925880,"endOffset":926030,"count":0},{"startOffset":926140,"endOffset":926167,"count":17},{"startOffset":926167,"endOffset":926301,"count":12},{"startOffset":926301,"endOffset":926352,"count":0},{"startOffset":926352,"endOffset":926501,"count":12},{"startOffset":926501,"endOffset":926570,"count":0},{"startOffset":926572,"endOffset":926608,"count":0},{"startOffset":926608,"endOffset":926699,"count":12},{"startOffset":926699,"endOffset":927131,"count":6},{"startOffset":926758,"endOffset":926777,"count":0},{"startOffset":926852,"endOffset":927127,"count":0},{"startOffset":927131,"endOffset":927249,"count":6},{"startOffset":927249,"endOffset":927297,"count":0},{"startOffset":927297,"endOffset":927372,"count":6},{"startOffset":927372,"endOffset":927461,"count":0},{"startOffset":927461,"endOffset":927530,"count":6},{"startOffset":927530,"endOffset":927591,"count":0},{"startOffset":927591,"endOffset":927665,"count":6},{"startOffset":927665,"endOffset":927727,"count":0},{"startOffset":927727,"endOffset":927800,"count":6},{"startOffset":927800,"endOffset":927842,"count":0},{"startOffset":927842,"endOffset":927868,"count":6},{"startOffset":927868,"endOffset":927900,"count":0},{"startOffset":927902,"endOffset":927948,"count":0},{"startOffset":927948,"endOffset":927974,"count":6},{"startOffset":927974,"endOffset":928149,"count":0},{"startOffset":928149,"endOffset":928203,"count":6},{"startOffset":928203,"endOffset":928279,"count":0},{"startOffset":928279,"endOffset":928490,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":928309,"endOffset":928410,"count":12}],"isBlockCoverage":true},{"functionName":"formatPrimitive","ranges":[{"startOffset":928494,"endOffset":929160,"count":29},{"startOffset":928563,"endOffset":928608,"count":0},{"startOffset":928632,"endOffset":928889,"count":17},{"startOffset":928889,"endOffset":928917,"count":12},{"startOffset":928917,"endOffset":928958,"count":0},{"startOffset":928958,"endOffset":928987,"count":12},{"startOffset":928987,"endOffset":929029,"count":0},{"startOffset":929029,"endOffset":929123,"count":12},{"startOffset":929123,"endOffset":929158,"count":0}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":929163,"endOffset":929253,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":929256,"endOffset":929771,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":929774,"endOffset":931391,"count":12},{"startOffset":929927,"endOffset":929951,"count":0},{"startOffset":929969,"endOffset":930116,"count":0},{"startOffset":930142,"endOffset":930197,"count":0},{"startOffset":930243,"endOffset":930276,"count":0},{"startOffset":930367,"endOffset":930426,"count":0},{"startOffset":930538,"endOffset":930833,"count":0},{"startOffset":930839,"endOffset":930902,"count":0},{"startOffset":930948,"endOffset":930969,"count":0},{"startOffset":930971,"endOffset":930996,"count":0},{"startOffset":931179,"endOffset":931356,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":930597,"endOffset":930657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":930741,"endOffset":930802,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":931394,"endOffset":931921,"count":6},{"startOffset":931682,"endOffset":931847,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":931500,"endOffset":931656,"count":12},{"startOffset":931573,"endOffset":931587,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":932073,"endOffset":932125,"count":6}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":932154,"endOffset":932216,"count":29}],"isBlockCoverage":true},{"functionName":"isNull","ranges":[{"startOffset":932249,"endOffset":932296,"count":24}],"isBlockCoverage":true},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":932323,"endOffset":932380,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":932429,"endOffset":932489,"count":12}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":932520,"endOffset":932580,"count":29}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":932611,"endOffset":932671,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":932702,"endOffset":932756,"count":109}],"isBlockCoverage":true},{"functionName":"isRegExp","ranges":[{"startOffset":932793,"endOffset":932885,"count":6}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":932916,"endOffset":932992,"count":30},{"startOffset":932974,"endOffset":932989,"count":24}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":933023,"endOffset":933108,"count":6}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":933135,"endOffset":933252,"count":18},{"startOffset":933178,"endOffset":933249,"count":12}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":933281,"endOffset":933345,"count":41}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":933380,"endOffset":933631,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":933719,"endOffset":933793,"count":24}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":933796,"endOffset":933872,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":934008,"endOffset":934230,"count":0}],"isBlockCoverage":false},{"functionName":"exports.log","ranges":[{"startOffset":934318,"endOffset":934413,"count":0}],"isBlockCoverage":false},{"functionName":"exports._extend","ranges":[{"startOffset":935091,"endOffset":935335,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":935338,"endOffset":935434,"count":12}],"isBlockCoverage":true},{"functionName":"116.dup","ranges":[{"startOffset":935486,"endOffset":935567,"count":1}],"isBlockCoverage":true},{"functionName":"117.dup","ranges":[{"startOffset":935586,"endOffset":935667,"count":1}],"isBlockCoverage":true},{"functionName":"118../support/isBuffer","ranges":[{"startOffset":935686,"endOffset":935767,"count":1}],"isBlockCoverage":true},{"functionName":"119","ranges":[{"startOffset":935826,"endOffset":985965,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":937465,"endOffset":937713,"count":1},{"startOffset":937576,"endOffset":937710,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":937721,"endOffset":985958,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":937759,"endOffset":937777,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":937809,"endOffset":942203,"count":0}],"isBlockCoverage":false},{"functionName":"pushComponent","ranges":[{"startOffset":942224,"endOffset":942786,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":942807,"endOffset":943414,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":943428,"endOffset":943681,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":943700,"endOffset":943894,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":943911,"endOffset":943964,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":943980,"endOffset":944042,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":944054,"endOffset":944111,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":944120,"endOffset":946225,"count":0}],"isBlockCoverage":false},{"functionName":"clonePath","ranges":[{"startOffset":946229,"endOffset":946349,"count":0}],"isBlockCoverage":false},{"functionName":"diffChars","ranges":[{"startOffset":946387,"endOffset":946492,"count":0}],"isBlockCoverage":false},{"functionName":"generateOptions","ranges":[{"startOffset":946496,"endOffset":946848,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.equals","ranges":[{"startOffset":947591,"endOffset":947846,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":947871,"endOffset":948576,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":948581,"endOffset":948759,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":948762,"endOffset":948871,"count":0}],"isBlockCoverage":false},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":948925,"endOffset":949618,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":949623,"endOffset":949725,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":949728,"endOffset":949919,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":949981,"endOffset":950052,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":950057,"endOffset":950167,"count":0}],"isBlockCoverage":false},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":950219,"endOffset":950282,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":950287,"endOffset":950386,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":950390,"endOffset":950818,"count":0}],"isBlockCoverage":false},{"functionName":"_toConsumableArray","ranges":[{"startOffset":950822,"endOffset":950981,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":950985,"endOffset":951082,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":951086,"endOffset":951222,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":951226,"endOffset":951668,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":951672,"endOffset":951867,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":951871,"endOffset":952067,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":952459,"endOffset":952969,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":952992,"endOffset":953138,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":953143,"endOffset":953242,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":953441,"endOffset":954981,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":955037,"endOffset":955085,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":955131,"endOffset":955171,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":955176,"endOffset":955280,"count":0}],"isBlockCoverage":false},{"functionName":"parsePatch","ranges":[{"startOffset":955284,"endOffset":960030,"count":0}],"isBlockCoverage":false},{"functionName":"distanceIterator","ranges":[{"startOffset":960218,"endOffset":961381,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatch","ranges":[{"startOffset":961385,"endOffset":965274,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":965340,"endOffset":966034,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":966038,"endOffset":970020,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":970023,"endOffset":971086,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":971089,"endOffset":971310,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":971313,"endOffset":971495,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEqual","ranges":[{"startOffset":971499,"endOffset":971624,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":971627,"endOffset":971871,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":971875,"endOffset":972301,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":972304,"endOffset":975319,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":975323,"endOffset":975696,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":975700,"endOffset":975810,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":975814,"endOffset":976022,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":976026,"endOffset":976157,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":976161,"endOffset":976376,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":976380,"endOffset":978529,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":978533,"endOffset":979601,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":979605,"endOffset":980015,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":980019,"endOffset":980177,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":980181,"endOffset":980416,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":980420,"endOffset":980594,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":980598,"endOffset":981124,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":981128,"endOffset":982481,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":982485,"endOffset":982625,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":982629,"endOffset":982961,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":982965,"endOffset":983988,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":984060,"endOffset":984453,"count":0}],"isBlockCoverage":false},{"functionName":"convertChangesToXML","ranges":[{"startOffset":984457,"endOffset":984922,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":984926,"endOffset":985118,"count":0}],"isBlockCoverage":false},{"functionName":"120","ranges":[{"startOffset":985975,"endOffset":987958,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":986780,"endOffset":987744,"count":4},{"startOffset":986926,"endOffset":986956,"count":0},{"startOffset":987011,"endOffset":987067,"count":0},{"startOffset":987163,"endOffset":987725,"count":5},{"startOffset":987228,"endOffset":987721,"count":32},{"startOffset":987347,"endOffset":987368,"count":0},{"startOffset":987370,"endOffset":987659,"count":0}],"isBlockCoverage":true},{"functionName":"isCloneable","ranges":[{"startOffset":987746,"endOffset":987850,"count":0}],"isBlockCoverage":false},{"functionName":"isUnextendable","ranges":[{"startOffset":987852,"endOffset":987955,"count":4},{"startOffset":987924,"endOffset":987951,"count":1}],"isBlockCoverage":true},{"functionName":"121","ranges":[{"startOffset":987968,"endOffset":1011402,"count":1},{"startOffset":989710,"endOffset":989717,"count":0},{"startOffset":989718,"endOffset":989743,"count":0},{"startOffset":989744,"endOffset":989751,"count":0},{"startOffset":989825,"endOffset":989836,"count":0},{"startOffset":989837,"endOffset":989865,"count":0},{"startOffset":992117,"endOffset":992128,"count":0},{"startOffset":992186,"endOffset":992197,"count":0}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":990079,"endOffset":990164,"count":2},{"startOffset":990136,"endOffset":990147,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":990358,"endOffset":990685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":991006,"endOffset":991158,"count":1},{"startOffset":991056,"endOffset":991074,"count":0},{"startOffset":991075,"endOffset":991102,"count":0},{"startOffset":991124,"endOffset":991150,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":992323,"endOffset":992528,"count":2},{"startOffset":992389,"endOffset":992405,"count":0},{"startOffset":992455,"endOffset":992526,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":992634,"endOffset":992716,"count":2},{"startOffset":992709,"endOffset":992713,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":992997,"endOffset":993078,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":993261,"endOffset":993492,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":993727,"endOffset":993862,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":994091,"endOffset":994244,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":994566,"endOffset":994776,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":994893,"endOffset":994944,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":995192,"endOffset":995476,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":995670,"endOffset":995817,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":996063,"endOffset":996141,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":996387,"endOffset":996598,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":996998,"endOffset":997207,"count":1},{"startOffset":997068,"endOffset":997084,"count":0},{"startOffset":997134,"endOffset":997205,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":997316,"endOffset":997449,"count":1},{"startOffset":997405,"endOffset":997417,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":997689,"endOffset":997768,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":997954,"endOffset":998024,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":998262,"endOffset":998332,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":998569,"endOffset":998661,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":999156,"endOffset":999324,"count":0}],"isBlockCoverage":false},{"functionName":"baseGet","ranges":[{"startOffset":999577,"endOffset":999864,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":1000085,"endOffset":1000312,"count":2},{"startOffset":1000159,"endOffset":1000182,"count":0},{"startOffset":1000218,"endOffset":1000240,"count":0},{"startOffset":1000255,"endOffset":1000269,"count":0}],"isBlockCoverage":true},{"functionName":"baseToString","ranges":[{"startOffset":1000521,"endOffset":1000875,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":1001050,"endOffset":1001133,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":1001307,"endOffset":1001462,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":1001708,"endOffset":1001830,"count":2},{"startOffset":1001816,"endOffset":1001827,"count":0}],"isBlockCoverage":true},{"functionName":"isKey","ranges":[{"startOffset":1002099,"endOffset":1002451,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":1002654,"endOffset":1002853,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":1003042,"endOffset":1003116,"count":2},{"startOffset":1003090,"endOffset":1003113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1003317,"endOffset":1003620,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":1003802,"endOffset":1004001,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":1004162,"endOffset":1004350,"count":2},{"startOffset":1004264,"endOffset":1004331,"count":0},{"startOffset":1004335,"endOffset":1004349,"count":0}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":1005797,"endOffset":1006355,"count":1},{"startOffset":1005877,"endOffset":1005909,"count":0},{"startOffset":1005912,"endOffset":1005959,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":1005977,"endOffset":1006281,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":1007097,"endOffset":1007192,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1007994,"endOffset":1008286,"count":2},{"startOffset":1008237,"endOffset":1008241,"count":0},{"startOffset":1008267,"endOffset":1008283,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":1008869,"endOffset":1008986,"count":4}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1009485,"endOffset":1009563,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":1009922,"endOffset":1010057,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1010473,"endOffset":1010552,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1011210,"endOffset":1011376,"count":0}],"isBlockCoverage":false},{"functionName":"122","ranges":[{"startOffset":1011412,"endOffset":1013087,"count":1}],"isBlockCoverage":true},{"functionName":"configureLogger","ranges":[{"startOffset":1011685,"endOffset":1013049,"count":1},{"startOffset":1011790,"endOffset":1011795,"count":0}],"isBlockCoverage":true},{"functionName":"config.logger","ranges":[{"startOffset":1011956,"endOffset":1011969,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":1012412,"endOffset":1013046,"count":0}],"isBlockCoverage":false},{"functionName":"123../event","ranges":[{"startOffset":1013097,"endOffset":1013444,"count":1}],"isBlockCoverage":true},{"functionName":"CustomEvent","ranges":[{"startOffset":1013179,"endOffset":1013322,"count":0}],"isBlockCoverage":false},{"functionName":"124","ranges":[{"startOffset":1013467,"endOffset":1017573,"count":1}],"isBlockCoverage":true},{"functionName":"flattenOptions","ranges":[{"startOffset":1013516,"endOffset":1013858,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1013859,"endOffset":1013953,"count":0}],"isBlockCoverage":false},{"functionName":"hasListenerFilter","ranges":[{"startOffset":1013954,"endOffset":1014169,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":1014282,"endOffset":1015775,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":1015875,"endOffset":1016637,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":1016659,"endOffset":1017536,"count":0}],"isBlockCoverage":false},{"functionName":"125","ranges":[{"startOffset":1017583,"endOffset":1018188,"count":1}],"isBlockCoverage":true},{"functionName":"Event","ranges":[{"startOffset":1017632,"endOffset":1017740,"count":2}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":1017777,"endOffset":1017991,"count":2}],"isBlockCoverage":true},{"functionName":"stopPropagation","ranges":[{"startOffset":1018065,"endOffset":1018078,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":1018101,"endOffset":1018157,"count":0}],"isBlockCoverage":false},{"functionName":"126../custom-event","ranges":[{"startOffset":1018198,"endOffset":1018437,"count":1}],"isBlockCoverage":true},{"functionName":"127../event","ranges":[{"startOffset":1018525,"endOffset":1019157,"count":1}],"isBlockCoverage":true},{"functionName":"ProgressEvent","ranges":[{"startOffset":1018607,"endOffset":1019027,"count":0}],"isBlockCoverage":false},{"functionName":"128../index","ranges":[{"startOffset":1019180,"endOffset":1021149,"count":1}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":1019363,"endOffset":1019383,"count":1}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":1019490,"endOffset":1020567,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1020600,"endOffset":1020936,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1020969,"endOffset":1021106,"count":0}],"isBlockCoverage":false},{"functionName":"129.../configure-logger","ranges":[{"startOffset":1021199,"endOffset":1030632,"count":1}],"isBlockCoverage":true},{"functionName":"responseArray","ranges":[{"startOffset":1021500,"endOffset":1022158,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultWindowLocation","ranges":[{"startOffset":1022160,"endOffset":1022448,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowLocation","ranges":[{"startOffset":1022450,"endOffset":1022999,"count":0}],"isBlockCoverage":false},{"functionName":"matchOne","ranges":[{"startOffset":1023001,"endOffset":1023416,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1023418,"endOffset":1024193,"count":0}],"isBlockCoverage":false},{"functionName":"incrementRequestCount","ranges":[{"startOffset":1024195,"endOffset":1024600,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1024633,"endOffset":1025163,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":1025181,"endOffset":1025782,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":1025801,"endOffset":1026417,"count":0}],"isBlockCoverage":false},{"functionName":"getHTTPMethod","ranges":[{"startOffset":1026439,"endOffset":1026758,"count":0}],"isBlockCoverage":false},{"functionName":"handleRequest","ranges":[{"startOffset":1026780,"endOffset":1026945,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":1026960,"endOffset":1027021,"count":0}],"isBlockCoverage":false},{"functionName":"respondWith","ranges":[{"startOffset":1027094,"endOffset":1028409,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1028425,"endOffset":1028768,"count":0}],"isBlockCoverage":false},{"functionName":"respondAll","ranges":[{"startOffset":1028787,"endOffset":1029054,"count":0}],"isBlockCoverage":false},{"functionName":"processRequest","ranges":[{"startOffset":1029077,"endOffset":1029870,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1029886,"endOffset":1029992,"count":0}],"isBlockCoverage":false},{"functionName":"getRequest","ranges":[{"startOffset":1030011,"endOffset":1030090,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1030104,"endOffset":1030187,"count":0}],"isBlockCoverage":false},{"functionName":"resetBehavior","ranges":[{"startOffset":1030209,"endOffset":1030296,"count":0}],"isBlockCoverage":false},{"functionName":"resetHistory","ranges":[{"startOffset":1030317,"endOffset":1030596,"count":0}],"isBlockCoverage":false},{"functionName":"130.util","ranges":[{"startOffset":1030718,"endOffset":1031143,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":1030806,"endOffset":1031117,"count":0}],"isBlockCoverage":false},{"functionName":"131","ranges":[{"startOffset":1031163,"endOffset":1031348,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1031235,"endOffset":1031341,"count":1},{"startOffset":1031300,"endOffset":1031339,"count":0}],"isBlockCoverage":true},{"functionName":"132.../configure-logger","ranges":[{"startOffset":1031358,"endOffset":1062172,"count":1},{"startOffset":1031500,"endOffset":1031547,"count":0}],"isBlockCoverage":true},{"functionName":"getWorkingXHR","ranges":[{"startOffset":1032028,"endOffset":1032452,"count":1},{"startOffset":1032160,"endOffset":1032210,"count":0},{"startOffset":1032313,"endOffset":1032431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1032330,"endOffset":1032424,"count":0}],"isBlockCoverage":false},{"functionName":"EventTargetHandler","ranges":[{"startOffset":1033058,"endOffset":1033598,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeHeaderValue","ranges":[{"startOffset":1033656,"endOffset":1033876,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":1033878,"endOffset":1034082,"count":0}],"isBlockCoverage":false},{"functionName":"excludeSetCookie2Header","ranges":[{"startOffset":1034084,"endOffset":1034172,"count":0}],"isBlockCoverage":false},{"functionName":"verifyResponseBodyType","ranges":[{"startOffset":1034174,"endOffset":1035302,"count":0}],"isBlockCoverage":false},{"functionName":"convertToArrayBuffer","ranges":[{"startOffset":1035304,"endOffset":1035495,"count":0}],"isBlockCoverage":false},{"functionName":"isXmlContentType","ranges":[{"startOffset":1035497,"endOffset":1035650,"count":0}],"isBlockCoverage":false},{"functionName":"clearResponse","ranges":[{"startOffset":1035652,"endOffset":1035890,"count":0}],"isBlockCoverage":false},{"functionName":"fakeXMLHttpRequestFor","ranges":[{"startOffset":1035892,"endOffset":1062052,"count":1},{"startOffset":1035992,"endOffset":1036050,"count":0},{"startOffset":1036532,"endOffset":1036591,"count":0},{"startOffset":1036676,"endOffset":1036747,"count":0}],"isBlockCoverage":true},{"functionName":"FakeXMLHttpRequest","ranges":[{"startOffset":1036972,"endOffset":1037682,"count":0}],"isBlockCoverage":false},{"functionName":"verifyState","ranges":[{"startOffset":1037688,"endOffset":1037930,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":1037992,"endOffset":1038613,"count":0}],"isBlockCoverage":false},{"functionName":"addFilter","ranges":[{"startOffset":1038688,"endOffset":1038749,"count":0}],"isBlockCoverage":false},{"functionName":"defake","ranges":[{"startOffset":1038783,"endOffset":1041729,"count":0}],"isBlockCoverage":false},{"functionName":"verifyRequestOpened","ranges":[{"startOffset":1041779,"endOffset":1042273,"count":0}],"isBlockCoverage":false},{"functionName":"verifyRequestSent","ranges":[{"startOffset":1042279,"endOffset":1042431,"count":0}],"isBlockCoverage":false},{"functionName":"verifyHeadersReceived","ranges":[{"startOffset":1042437,"endOffset":1042659,"count":0}],"isBlockCoverage":false},{"functionName":"convertResponseBody","ranges":[{"startOffset":1042665,"endOffset":1043784,"count":0}],"isBlockCoverage":false},{"functionName":"requestErrorSteps","ranges":[{"startOffset":1043923,"endOffset":1044359,"count":0}],"isBlockCoverage":false},{"functionName":"parseXML","ranges":[{"startOffset":1044395,"endOffset":1046045,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1047540,"endOffset":1048389,"count":0}],"isBlockCoverage":false},{"functionName":"readyStateChange","ranges":[{"startOffset":1048418,"endOffset":1050565,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestHeader","ranges":[{"startOffset":1050668,"endOffset":1051902,"count":0}],"isBlockCoverage":false},{"functionName":"setStatus","ranges":[{"startOffset":1051924,"endOffset":1052201,"count":0}],"isBlockCoverage":false},{"functionName":"setResponseHeaders","ranges":[{"startOffset":1052257,"endOffset":1052757,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1052845,"endOffset":1055698,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":1055716,"endOffset":1055871,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1055889,"endOffset":1056117,"count":0}],"isBlockCoverage":false},{"functionName":"triggerTimeout","ranges":[{"startOffset":1056144,"endOffset":1056318,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseHeader","ranges":[{"startOffset":1056348,"endOffset":1056783,"count":0}],"isBlockCoverage":false},{"functionName":"getAllResponseHeaders","ranges":[{"startOffset":1056817,"endOffset":1057357,"count":0}],"isBlockCoverage":false},{"functionName":"setResponseBody","ranges":[{"startOffset":1057385,"endOffset":1059072,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":1059092,"endOffset":1059319,"count":0}],"isBlockCoverage":false},{"functionName":"uploadProgress","ranges":[{"startOffset":1059346,"endOffset":1059697,"count":0}],"isBlockCoverage":false},{"functionName":"downloadProgress","ranges":[{"startOffset":1059726,"endOffset":1060065,"count":0}],"isBlockCoverage":false},{"functionName":"uploadError","ranges":[{"startOffset":1060089,"endOffset":1060318,"count":0}],"isBlockCoverage":false},{"functionName":"overrideMimeType","ranges":[{"startOffset":1060347,"endOffset":1060567,"count":0}],"isBlockCoverage":false},{"functionName":"useFakeXMLHttpRequest","ranges":[{"startOffset":1060802,"endOffset":1061905,"count":0}],"isBlockCoverage":false},{"functionName":"133../fake-server","ranges":[{"startOffset":1062305,"endOffset":1062529,"count":1}],"isBlockCoverage":true},{"functionName":"134../prototypes/array","ranges":[{"startOffset":1062618,"endOffset":1062698,"count":1}],"isBlockCoverage":true},{"functionName":"135../function-name","ranges":[{"startOffset":1062741,"endOffset":1062821,"count":1}],"isBlockCoverage":true},{"functionName":"136.dup","ranges":[{"startOffset":1062861,"endOffset":1062941,"count":1}],"isBlockCoverage":true},{"functionName":"137.dup","ranges":[{"startOffset":1062959,"endOffset":1063039,"count":1}],"isBlockCoverage":true},{"functionName":"138.dup","ranges":[{"startOffset":1063057,"endOffset":1063137,"count":1}],"isBlockCoverage":true},{"functionName":"139.dup","ranges":[{"startOffset":1063155,"endOffset":1063235,"count":1}],"isBlockCoverage":true},{"functionName":"140../called-in-order","ranges":[{"startOffset":1063253,"endOffset":1063333,"count":1}],"isBlockCoverage":true},{"functionName":"141../prototypes/array","ranges":[{"startOffset":1063551,"endOffset":1063631,"count":1}],"isBlockCoverage":true},{"functionName":"142../copy-prototype-methods","ranges":[{"startOffset":1063674,"endOffset":1063754,"count":1}],"isBlockCoverage":true},{"functionName":"143../throws-on-proto","ranges":[{"startOffset":1063803,"endOffset":1063883,"count":1}],"isBlockCoverage":true},{"functionName":"144../copy-prototype-methods","ranges":[{"startOffset":1063925,"endOffset":1064005,"count":1}],"isBlockCoverage":true},{"functionName":"145../array","ranges":[{"startOffset":1064054,"endOffset":1064134,"count":1}],"isBlockCoverage":true},{"functionName":"146../copy-prototype-methods","ranges":[{"startOffset":1064237,"endOffset":1064317,"count":1}],"isBlockCoverage":true},{"functionName":"147../copy-prototype-methods","ranges":[{"startOffset":1064366,"endOffset":1064446,"count":1}],"isBlockCoverage":true},{"functionName":"148../copy-prototype-methods","ranges":[{"startOffset":1064495,"endOffset":1064575,"count":1}],"isBlockCoverage":true},{"functionName":"149../copy-prototype-methods","ranges":[{"startOffset":1064624,"endOffset":1064704,"count":1}],"isBlockCoverage":true},{"functionName":"150.dup","ranges":[{"startOffset":1064753,"endOffset":1064833,"count":1}],"isBlockCoverage":true},{"functionName":"151.dup","ranges":[{"startOffset":1064851,"endOffset":1064931,"count":1}],"isBlockCoverage":true},{"functionName":"152.dup","ranges":[{"startOffset":1064967,"endOffset":1065047,"count":1}],"isBlockCoverage":true},{"functionName":"153../prototypes/array","ranges":[{"startOffset":1065065,"endOffset":1065145,"count":1}],"isBlockCoverage":true},{"functionName":"154../function-name","ranges":[{"startOffset":1065188,"endOffset":1065268,"count":1}],"isBlockCoverage":true},{"functionName":"155.dup","ranges":[{"startOffset":1065308,"endOffset":1065388,"count":1}],"isBlockCoverage":true},{"functionName":"156.dup","ranges":[{"startOffset":1065406,"endOffset":1065486,"count":1}],"isBlockCoverage":true},{"functionName":"157.dup","ranges":[{"startOffset":1065504,"endOffset":1065584,"count":1}],"isBlockCoverage":true},{"functionName":"158.dup","ranges":[{"startOffset":1065602,"endOffset":1065682,"count":1}],"isBlockCoverage":true},{"functionName":"159../called-in-order","ranges":[{"startOffset":1065700,"endOffset":1065780,"count":1}],"isBlockCoverage":true},{"functionName":"160../prototypes/array","ranges":[{"startOffset":1065998,"endOffset":1066078,"count":1}],"isBlockCoverage":true},{"functionName":"161../copy-prototype-methods","ranges":[{"startOffset":1066121,"endOffset":1066201,"count":1}],"isBlockCoverage":true},{"functionName":"162../throws-on-proto","ranges":[{"startOffset":1066250,"endOffset":1066330,"count":1}],"isBlockCoverage":true},{"functionName":"163../copy-prototype-methods","ranges":[{"startOffset":1066372,"endOffset":1066452,"count":1}],"isBlockCoverage":true},{"functionName":"164../array","ranges":[{"startOffset":1066501,"endOffset":1066581,"count":1}],"isBlockCoverage":true},{"functionName":"165../copy-prototype-methods","ranges":[{"startOffset":1066684,"endOffset":1066764,"count":1}],"isBlockCoverage":true},{"functionName":"166../copy-prototype-methods","ranges":[{"startOffset":1066813,"endOffset":1066893,"count":1}],"isBlockCoverage":true},{"functionName":"167../copy-prototype-methods","ranges":[{"startOffset":1066942,"endOffset":1067022,"count":1}],"isBlockCoverage":true},{"functionName":"168../copy-prototype-methods","ranges":[{"startOffset":1067071,"endOffset":1067151,"count":1}],"isBlockCoverage":true},{"functionName":"169.dup","ranges":[{"startOffset":1067200,"endOffset":1067280,"count":1}],"isBlockCoverage":true},{"functionName":"170.dup","ranges":[{"startOffset":1067298,"endOffset":1067378,"count":1}],"isBlockCoverage":true},{"functionName":"171.dup","ranges":[{"startOffset":1067414,"endOffset":1067494,"count":1}],"isBlockCoverage":true},{"functionName":"172.@sinonjs/commons","ranges":[{"startOffset":1067512,"endOffset":1126337,"count":1}],"isBlockCoverage":true},{"functionName":"withGlobal","ranges":[{"startOffset":1072310,"endOffset":1125854,"count":1},{"startOffset":1072381,"endOffset":1072411,"count":0},{"startOffset":1072449,"endOffset":1072483,"count":0},{"startOffset":1073904,"endOffset":1073966,"count":0},{"startOffset":1074045,"endOffset":1074106,"count":0},{"startOffset":1074183,"endOffset":1074243,"count":0},{"startOffset":1074318,"endOffset":1074377,"count":0},{"startOffset":1074670,"endOffset":1074922,"count":0},{"startOffset":1099590,"endOffset":1099667,"count":0},{"startOffset":1099784,"endOffset":1099859,"count":0},{"startOffset":1099897,"endOffset":1099970,"count":0},{"startOffset":1100007,"endOffset":1100078,"count":0},{"startOffset":1100132,"endOffset":1100153,"count":0}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":1072716,"endOffset":1072761,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP_ARRAY","ranges":[{"startOffset":1072786,"endOffset":1072824,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberFinite","ranges":[{"startOffset":1075416,"endOffset":1075565,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsNearInfiniteLimit","ranges":[{"startOffset":1075678,"endOffset":1075839,"count":0}],"isBlockCoverage":false},{"functionName":"resetIsNearInfiniteLimit","ranges":[{"startOffset":1075868,"endOffset":1075948,"count":0}],"isBlockCoverage":false},{"functionName":"parseTime","ranges":[{"startOffset":1076219,"endOffset":1076908,"count":0}],"isBlockCoverage":false},{"functionName":"nanoRemainder","ranges":[{"startOffset":1077200,"endOffset":1077460,"count":0}],"isBlockCoverage":false},{"functionName":"getEpoch","ranges":[{"startOffset":1077620,"endOffset":1077956,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":1078086,"endOffset":1078195,"count":0}],"isBlockCoverage":false},{"functionName":"getInfiniteLoopError","ranges":[{"startOffset":1078271,"endOffset":1080560,"count":0}],"isBlockCoverage":false},{"functionName":"mirrorDateProperties","ranges":[{"startOffset":1080692,"endOffset":1081770,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":1081827,"endOffset":1083939,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueJob","ranges":[{"startOffset":1083996,"endOffset":1084203,"count":0}],"isBlockCoverage":false},{"functionName":"runJobs","ranges":[{"startOffset":1084260,"endOffset":1084801,"count":0}],"isBlockCoverage":false},{"functionName":"addTimer","ranges":[{"startOffset":1084928,"endOffset":1087775,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimers","ranges":[{"startOffset":1087943,"endOffset":1088847,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimerInRange","ranges":[{"startOffset":1088975,"endOffset":1089501,"count":0}],"isBlockCoverage":false},{"functionName":"firstTimer","ranges":[{"startOffset":1089575,"endOffset":1089940,"count":0}],"isBlockCoverage":false},{"functionName":"lastTimer","ranges":[{"startOffset":1090014,"endOffset":1090379,"count":0}],"isBlockCoverage":false},{"functionName":"callTimer","ranges":[{"startOffset":1090457,"endOffset":1090954,"count":0}],"isBlockCoverage":false},{"functionName":"getClearHandler","ranges":[{"startOffset":1091066,"endOffset":1091254,"count":0}],"isBlockCoverage":false},{"functionName":"getScheduleHandler","ranges":[{"startOffset":1091369,"endOffset":1091559,"count":0}],"isBlockCoverage":false},{"functionName":"createWarnOnce","ranges":[{"startOffset":1091636,"endOffset":1091818,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1091702,"endOffset":1091811,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimer","ranges":[{"startOffset":1091967,"endOffset":1093868,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":1093974,"endOffset":1096110,"count":0}],"isBlockCoverage":false},{"functionName":"hijackMethod","ranges":[{"startOffset":1096304,"endOffset":1097917,"count":0}],"isBlockCoverage":false},{"functionName":"doIntervalTick","ranges":[{"startOffset":1098007,"endOffset":1098101,"count":0}],"isBlockCoverage":false},{"functionName":"createClock","ranges":[{"startOffset":1100384,"endOffset":1121417,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":1121549,"endOffset":1125679,"count":0}],"isBlockCoverage":false},{"functionName":"173","ranges":[{"startOffset":1126380,"endOffset":1128524,"count":1},{"startOffset":1128014,"endOffset":1128520,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":1126691,"endOffset":1126864,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":1126866,"endOffset":1127961,"count":1},{"startOffset":1126924,"endOffset":1126946,"count":0},{"startOffset":1127218,"endOffset":1127240,"count":0},{"startOffset":1127349,"endOffset":1127398,"count":10},{"startOffset":1127533,"endOffset":1127555,"count":0},{"startOffset":1127814,"endOffset":1127836,"count":0},{"startOffset":1127856,"endOffset":1127959,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1127452,"endOffset":1127490,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1127676,"endOffset":1127726,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1128016,"endOffset":1128520,"count":0}],"isBlockCoverage":false},{"functionName":"174.isarray","ranges":[{"startOffset":1128534,"endOffset":1139424,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1129709,"endOffset":1131247,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1131434,"endOffset":1131525,"count":0}],"isBlockCoverage":false},{"functionName":"encodeURIComponentPretty","ranges":[{"startOffset":1131621,"endOffset":1131787,"count":0}],"isBlockCoverage":false},{"functionName":"encodeAsterisk","ranges":[{"startOffset":1131915,"endOffset":1132069,"count":0}],"isBlockCoverage":false},{"functionName":"tokensToFunction","ranges":[{"startOffset":1132146,"endOffset":1134331,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":1134427,"endOffset":1134517,"count":0}],"isBlockCoverage":false},{"functionName":"escapeGroup","ranges":[{"startOffset":1134650,"endOffset":1134730,"count":0}],"isBlockCoverage":false},{"functionName":"attachKeys","ranges":[{"startOffset":1134862,"endOffset":1134925,"count":0}],"isBlockCoverage":false},{"functionName":"flags","ranges":[{"startOffset":1135034,"endOffset":1135111,"count":0}],"isBlockCoverage":false},{"functionName":"regexpToRegexp","ranges":[{"startOffset":1135229,"endOffset":1135693,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToRegexp","ranges":[{"startOffset":1135845,"endOffset":1136126,"count":0}],"isBlockCoverage":false},{"functionName":"stringToRegexp","ranges":[{"startOffset":1136284,"endOffset":1136394,"count":0}],"isBlockCoverage":false},{"functionName":"tokensToRegExp","ranges":[{"startOffset":1136598,"endOffset":1138482,"count":0}],"isBlockCoverage":false},{"functionName":"pathToRegexp","ranges":[{"startOffset":1138935,"endOffset":1139421,"count":0}],"isBlockCoverage":false},{"functionName":"175","ranges":[{"startOffset":1139447,"endOffset":1139603,"count":1},{"startOffset":1139512,"endOffset":1139599,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1139515,"endOffset":1139599,"count":0}],"isBlockCoverage":false},{"functionName":"176","ranges":[{"startOffset":1139613,"endOffset":1145067,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSetTimout","ranges":[{"startOffset":1140063,"endOffset":1140150,"count":0}],"isBlockCoverage":false},{"functionName":"defaultClearTimeout","ranges":[{"startOffset":1140151,"endOffset":1140244,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1140246,"endOffset":1140769,"count":1},{"startOffset":1140370,"endOffset":1140436,"count":0},{"startOffset":1140443,"endOffset":1140505,"count":0},{"startOffset":1140622,"endOffset":1140693,"count":0},{"startOffset":1140700,"endOffset":1140767,"count":0}],"isBlockCoverage":true},{"functionName":"runTimeout","ranges":[{"startOffset":1140774,"endOffset":1141772,"count":0}],"isBlockCoverage":false},{"functionName":"runClearTimeout","ranges":[{"startOffset":1141773,"endOffset":1142902,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUpNextTick","ranges":[{"startOffset":1142981,"endOffset":1143264,"count":0}],"isBlockCoverage":false},{"functionName":"drainQueue","ranges":[{"startOffset":1143266,"endOffset":1143774,"count":0}],"isBlockCoverage":false},{"functionName":"process.nextTick","ranges":[{"startOffset":1143795,"endOffset":1144120,"count":0}],"isBlockCoverage":false},{"functionName":"Item","ranges":[{"startOffset":1144155,"endOffset":1144228,"count":0}],"isBlockCoverage":false},{"functionName":"Item.run","ranges":[{"startOffset":1144250,"endOffset":1144303,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1144478,"endOffset":1144496,"count":0}],"isBlockCoverage":false},{"functionName":"process.listeners","ranges":[{"startOffset":1144762,"endOffset":1144791,"count":0}],"isBlockCoverage":false},{"functionName":"process.binding","ranges":[{"startOffset":1144811,"endOffset":1144887,"count":0}],"isBlockCoverage":false},{"functionName":"process.cwd","ranges":[{"startOffset":1144904,"endOffset":1144930,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1144948,"endOffset":1145021,"count":0}],"isBlockCoverage":false},{"functionName":"process.umask","ranges":[{"startOffset":1145039,"endOffset":1145063,"count":0}],"isBlockCoverage":false},{"functionName":"177","ranges":[{"startOffset":1145077,"endOffset":1145180,"count":1}],"isBlockCoverage":true},{"functionName":"178.process/browser.js","ranges":[{"startOffset":1145190,"endOffset":1147331,"count":1},{"startOffset":1146687,"endOffset":1147201,"count":0},{"startOffset":1147283,"endOffset":1147328,"count":0}],"isBlockCoverage":true},{"functionName":"exports.setTimeout","ranges":[{"startOffset":1145453,"endOffset":1145546,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setInterval","ranges":[{"startOffset":1145570,"endOffset":1145665,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearTimeout.exports.clearInterval","ranges":[{"startOffset":1145714,"endOffset":1145752,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":1145755,"endOffset":1145832,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref.Timeout.ref","ranges":[{"startOffset":1145883,"endOffset":1145896,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":1145924,"endOffset":1145978,"count":0}],"isBlockCoverage":false},{"functionName":"exports.enroll","ranges":[{"startOffset":1146059,"endOffset":1146150,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unenroll","ranges":[{"startOffset":1146172,"endOffset":1146253,"count":0}],"isBlockCoverage":false},{"functionName":"exports._unrefActive.exports.active","ranges":[{"startOffset":1146296,"endOffset":1146538,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setImmediate","ranges":[{"startOffset":1146689,"endOffset":1147201,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearImmediate","ranges":[{"startOffset":1147285,"endOffset":1147328,"count":0}],"isBlockCoverage":false},{"functionName":"179","ranges":[{"startOffset":1147365,"endOffset":1162885,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1147400,"endOffset":1147621,"count":1},{"startOffset":1147520,"endOffset":1147618,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1147629,"endOffset":1162878,"count":1},{"startOffset":1147882,"endOffset":1147888,"count":0}],"isBlockCoverage":true},{"functionName":"typeDetect","ranges":[{"startOffset":1149472,"endOffset":1162855,"count":26},{"startOffset":1150354,"endOffset":1151633,"count":0},{"startOffset":1151638,"endOffset":1151869,"count":0},{"startOffset":1151871,"endOffset":1157938,"count":0},{"startOffset":1157978,"endOffset":1159216,"count":0},{"startOffset":1159218,"endOffset":1159486,"count":0},{"startOffset":1159488,"endOffset":1159752,"count":0},{"startOffset":1159754,"endOffset":1160026,"count":0},{"startOffset":1160028,"endOffset":1160304,"count":0},{"startOffset":1160306,"endOffset":1160722,"count":0},{"startOffset":1160724,"endOffset":1161138,"count":0},{"startOffset":1161140,"endOffset":1161558,"count":0},{"startOffset":1161560,"endOffset":1161998,"count":0},{"startOffset":1162000,"endOffset":1162445,"count":0},{"startOffset":1162447,"endOffset":1162854,"count":0}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/version.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/streaming.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14840,"count":1}],"isBlockCoverage":true},{"functionName":"Stream","ranges":[{"startOffset":163,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"fromSSEResponse","ranges":[{"startOffset":288,"endOffset":2915,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadableStream","ranges":[{"startOffset":3049,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4588,"endOffset":4652,"count":0}],"isBlockCoverage":false},{"functionName":"tee","ranges":[{"startOffset":4780,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"toReadableStream","ranges":[{"startOffset":5654,"endOffset":6425,"count":0}],"isBlockCoverage":false},{"functionName":"_iterSSEMessages","ranges":[{"startOffset":6435,"endOffset":7147,"count":0}],"isBlockCoverage":false},{"functionName":"iterSSEChunks","ranges":[{"startOffset":7292,"endOffset":8079,"count":0}],"isBlockCoverage":false},{"functionName":"findDoubleNewlineIndex","ranges":[{"startOffset":8080,"endOffset":8975,"count":0}],"isBlockCoverage":false},{"functionName":"SSEDecoder","ranges":[{"startOffset":8999,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9102,"endOffset":10107,"count":0}],"isBlockCoverage":false},{"functionName":"LineDecoder","ranges":[{"startOffset":10363,"endOffset":10443,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":10448,"endOffset":11527,"count":0}],"isBlockCoverage":false},{"functionName":"decodeText","ranges":[{"startOffset":11532,"endOffset":12784,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":12789,"endOffset":13019,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeChunks","ranges":[{"startOffset":13216,"endOffset":13415,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":13416,"endOffset":13646,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAsyncIterable","ranges":[{"startOffset":13942,"endOffset":14801,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":279,"count":1}],"isBlockCoverage":true}]},{"scriptId":"622","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":206,"count":1}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/shared.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":133,"count":1}],"isBlockCoverage":true}]},{"scriptId":"624","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/audio.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":890,"count":1},{"startOffset":838,"endOffset":853,"count":0}],"isBlockCoverage":true},{"functionName":"Audio","ranges":[{"startOffset":387,"endOffset":653,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":657,"endOffset":830,"count":1}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/batches.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1231,"count":1},{"startOffset":1175,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":419,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":563,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":667,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":936,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1093,"endOffset":1165,"count":1}],"isBlockCoverage":true}]},{"scriptId":"626","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/beta.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1138,"count":1},{"startOffset":1088,"endOffset":1102,"count":0}],"isBlockCoverage":true},{"functionName":"Beta","ranges":[{"startOffset":460,"endOffset":769,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":773,"endOffset":1081,"count":1}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/completions.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1},{"startOffset":360,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":185,"endOffset":316,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":320,"endOffset":346,"count":1}],"isBlockCoverage":true}]},{"scriptId":"628","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/embeddings.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1},{"startOffset":406,"endOffset":426,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":264,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":368,"endOffset":393,"count":1}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/files.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3328,"count":1},{"startOffset":3276,"endOffset":3291,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1069,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":1264,"endOffset":1359,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1364,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":1620,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"content","ranges":[{"startOffset":1785,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveContent","ranges":[{"startOffset":2063,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"waitForProcessing","ranges":[{"startOffset":2373,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3194,"endOffset":3268,"count":1}],"isBlockCoverage":true}]},{"scriptId":"630","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/fine-tuning.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1},{"startOffset":569,"endOffset":589,"count":0}],"isBlockCoverage":true},{"functionName":"FineTuning","ranges":[{"startOffset":251,"endOffset":353,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":357,"endOffset":556,"count":1}],"isBlockCoverage":true}]},{"scriptId":"631","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/images.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1},{"startOffset":881,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"createVariation","ranges":[{"startOffset":300,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":547,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":737,"endOffset":847,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":851,"endOffset":872,"count":1}],"isBlockCoverage":true}]},{"scriptId":"632","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/models.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1243,"count":1},{"startOffset":1189,"endOffset":1205,"count":0}],"isBlockCoverage":true},{"functionName":"retrieve","ranges":[{"startOffset":415,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":664,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":888,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1113,"endOffset":1180,"count":1}],"isBlockCoverage":true}]},{"scriptId":"633","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/moderations.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":460,"count":1},{"startOffset":396,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":251,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":356,"endOffset":382,"count":1}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/registry.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":true},{"functionName":"setShims","ranges":[{"startOffset":485,"endOffset":1294,"count":1},{"startOffset":553,"endOffset":680,"count":0},{"startOffset":695,"endOffset":816,"count":0}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/auto/runtime-node.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":78,"count":1}],"isBlockCoverage":true}]},{"scriptId":"636","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/completions.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1},{"startOffset":365,"endOffset":386,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":185,"endOffset":321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":325,"endOffset":351,"count":1}],"isBlockCoverage":true}]},{"scriptId":"637","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/chat.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1},{"startOffset":451,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"Chat","ranges":[{"startOffset":247,"endOffset":370,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":374,"endOffset":444,"count":1}],"isBlockCoverage":true}]},{"scriptId":"638","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resource.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"APIResource","ranges":[{"startOffset":118,"endOffset":176,"count":54}],"isBlockCoverage":true}]},{"scriptId":"639","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/speech.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1},{"startOffset":400,"endOffset":416,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":240,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":370,"endOffset":391,"count":1}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/translations.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":548,"count":1},{"startOffset":482,"endOffset":504,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":299,"endOffset":436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":440,"endOffset":467,"count":1}],"isBlockCoverage":true}]},{"scriptId":"641","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/transcriptions.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":572,"count":1},{"startOffset":502,"endOffset":526,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":313,"endOffset":452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":456,"endOffset":485,"count":1}],"isBlockCoverage":true}]},{"scriptId":"642","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/chat/chat.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1},{"startOffset":456,"endOffset":470,"count":0}],"isBlockCoverage":true},{"functionName":"Chat","ranges":[{"startOffset":252,"endOffset":375,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":379,"endOffset":449,"count":1}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/assistants.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2003,"count":1},{"startOffset":1941,"endOffset":1961,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":421,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":684,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":951,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1195,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":1572,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1841,"endOffset":1928,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/threads.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2850,"count":1},{"startOffset":2794,"endOffset":2811,"count":0}],"isBlockCoverage":true},{"functionName":"Threads","ranges":[{"startOffset":430,"endOffset":596,"count":2}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":601,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":952,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1206,"endOffset":1436,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":1481,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"createAndRun","ranges":[{"startOffset":1691,"endOffset":1952,"count":0}],"isBlockCoverage":false},{"functionName":"createAndRunPoll","ranges":[{"startOffset":2201,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"createAndRunStream","ranges":[{"startOffset":2443,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2590,"endOffset":2784,"count":1}],"isBlockCoverage":true}]},{"scriptId":"645","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/vector-stores.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2559,"count":1},{"startOffset":2492,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"VectorStores","ranges":[{"startOffset":523,"endOffset":701,"count":2}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":752,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":1020,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1296,"endOffset":1542,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1547,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":1931,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2209,"endOffset":2477,"count":1}],"isBlockCoverage":true}]},{"scriptId":"646","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2531,"count":1},{"startOffset":2481,"endOffset":2495,"count":0}],"isBlockCoverage":true},{"functionName":"Jobs","ranges":[{"startOffset":422,"endOffset":545,"count":2}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":916,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":1182,"endOffset":1306,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1311,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":1602,"endOffset":1732,"count":0}],"isBlockCoverage":false},{"functionName":"listEvents","ranges":[{"startOffset":1737,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2193,"endOffset":2474,"count":1}],"isBlockCoverage":true}]},{"scriptId":"647","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/node-runtime.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2367,"count":1}],"isBlockCoverage":true},{"functionName":"fileFromPath","ranges":[{"startOffset":506,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"getMultipartRequestOptions","ranges":[{"startOffset":1190,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"getRuntime","ranges":[{"startOffset":1569,"endOffset":2325,"count":1},{"startOffset":1682,"endOffset":1840,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultAgent","ranges":[{"startOffset":2154,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":2275,"endOffset":2315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":5},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":2},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":1},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":29}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":30},{"startOffset":840,"endOffset":852,"count":28},{"startOffset":853,"endOffset":862,"count":25},{"startOffset":862,"endOffset":913,"count":5},{"startOffset":913,"endOffset":1023,"count":48},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":5},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":5},{"startOffset":1192,"endOffset":1214,"count":277129}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":4},{"startOffset":1245,"endOffset":33615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/chat/completions.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1524,"count":1}],"isBlockCoverage":true},{"functionName":"runFunctions","ranges":[{"startOffset":740,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"runTools","ranges":[{"startOffset":1022,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":1348,"endOffset":1481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/messages.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1796,"count":1},{"startOffset":1738,"endOffset":1756,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":390,"endOffset":629,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":677,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":965,"endOffset":1228,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1233,"endOffset":1597,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1650,"endOffset":1727,"count":1}],"isBlockCoverage":true}]},{"scriptId":"651","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AssistantStream.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27552,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":527,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":70,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":562,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"AssistantStream","ranges":[{"startOffset":2108,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3124,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadableStream","ranges":[{"startOffset":5490,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"_fromReadableStream","ranges":[{"startOffset":5661,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"toReadableStream","ranges":[{"startOffset":6464,"endOffset":6623,"count":0}],"isBlockCoverage":false},{"functionName":"createToolAssistantStream","ranges":[{"startOffset":6635,"endOffset":6985,"count":0}],"isBlockCoverage":false},{"functionName":"_createToolAssistantStream","ranges":[{"startOffset":6990,"endOffset":7932,"count":0}],"isBlockCoverage":false},{"functionName":"createThreadAssistantStream","ranges":[{"startOffset":7944,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"createAssistantStream","ranges":[{"startOffset":8277,"endOffset":8609,"count":0}],"isBlockCoverage":false},{"functionName":"currentEvent","ranges":[{"startOffset":8614,"endOffset":8717,"count":0}],"isBlockCoverage":false},{"functionName":"currentRun","ranges":[{"startOffset":8722,"endOffset":8829,"count":0}],"isBlockCoverage":false},{"functionName":"currentMessageSnapshot","ranges":[{"startOffset":8834,"endOffset":8950,"count":0}],"isBlockCoverage":false},{"functionName":"currentRunStepSnapshot","ranges":[{"startOffset":8955,"endOffset":9078,"count":0}],"isBlockCoverage":false},{"functionName":"finalRunSteps","ranges":[{"startOffset":9083,"endOffset":9239,"count":0}],"isBlockCoverage":false},{"functionName":"finalMessages","ranges":[{"startOffset":9244,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"finalRun","ranges":[{"startOffset":9405,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"_createThreadAssistantStream","ranges":[{"startOffset":9669,"endOffset":10547,"count":0}],"isBlockCoverage":false},{"functionName":"_createAssistantStream","ranges":[{"startOffset":10552,"endOffset":11432,"count":0}],"isBlockCoverage":false},{"functionName":"accumulateDelta","ranges":[{"startOffset":11444,"endOffset":13053,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_addEvent","ranges":[{"startOffset":13084,"endOffset":14991,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_endRequest","ranges":[{"startOffset":15023,"endOffset":15367,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_handleMessage","ranges":[{"startOffset":15402,"endOffset":19805,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_handleRunStep","ranges":[{"startOffset":19840,"endOffset":22695,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_handleEvent","ranges":[{"startOffset":22728,"endOffset":22884,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_accumulateRunStep","ranges":[{"startOffset":22923,"endOffset":24434,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_accumulateMessage","ranges":[{"startOffset":24473,"endOffset":26291,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_accumulateContent","ranges":[{"startOffset":26330,"endOffset":26485,"count":0}],"isBlockCoverage":false},{"functionName":"_AssistantStream_handleRun","ranges":[{"startOffset":26516,"endOffset":27506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/runs/runs.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6386,"count":1},{"startOffset":6336,"endOffset":6350,"count":0}],"isBlockCoverage":true},{"functionName":"Runs","ranges":[{"startOffset":511,"endOffset":616,"count":2}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":621,"endOffset":898,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":943,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1215,"endOffset":1466,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1471,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":1892,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"createAndPoll","ranges":[{"startOffset":2353,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"createAndStream","ranges":[{"startOffset":2623,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"poll","ranges":[{"startOffset":3019,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":4763,"endOffset":4913,"count":0}],"isBlockCoverage":false},{"functionName":"submitToolOutputs","ranges":[{"startOffset":4918,"endOffset":5242,"count":0}],"isBlockCoverage":false},{"functionName":"submitToolOutputsAndPoll","ranges":[{"startOffset":5491,"endOffset":5702,"count":0}],"isBlockCoverage":false},{"functionName":"submitToolOutputsStream","ranges":[{"startOffset":5958,"endOffset":6143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6192,"endOffset":6329,"count":1}],"isBlockCoverage":true}]},{"scriptId":"653","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/file-batches.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5490,"count":1},{"startOffset":5392,"endOffset":5413,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":464,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":788,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":1196,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"createAndPoll","ranges":[{"startOffset":1560,"endOffset":1745,"count":0}],"isBlockCoverage":false},{"functionName":"listFiles","ranges":[{"startOffset":1750,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"poll","ranges":[{"startOffset":2380,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"uploadAndPoll","ranges":[{"startOffset":3957,"endOffset":5348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5352,"endOffset":5378,"count":1}],"isBlockCoverage":true}]},{"scriptId":"654","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/files.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5057,"count":1},{"startOffset":5005,"endOffset":5020,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":613,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"retrieve","ranges":[{"startOffset":924,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":1176,"endOffset":1566,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":1845,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"createAndPoll","ranges":[{"startOffset":2191,"endOffset":2383,"count":0}],"isBlockCoverage":false},{"functionName":"poll","ranges":[{"startOffset":2616,"endOffset":4034,"count":0}],"isBlockCoverage":false},{"functionName":"upload","ranges":[{"startOffset":4290,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"uploadAndPoll","ranges":[{"startOffset":4620,"endOffset":4852,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4913,"endOffset":4997,"count":1}],"isBlockCoverage":true}]},{"scriptId":"655","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":929,"count":1},{"startOffset":865,"endOffset":886,"count":0}],"isBlockCoverage":true},{"functionName":"list","ranges":[{"startOffset":362,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":733,"endOffset":851,"count":1}],"isBlockCoverage":true}]},{"scriptId":"657","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"658","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"659","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"660","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"661","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"662","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":85,"count":1}],"isBlockCoverage":true}]},{"scriptId":"663","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180,"count":1}],"isBlockCoverage":true}]},{"scriptId":"664","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/MultipartBody.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":286,"count":1}],"isBlockCoverage":true},{"functionName":"MultipartBody","ranges":[{"startOffset":119,"endOffset":170,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175,"endOffset":241,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionRunner.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1231,"count":1}],"isBlockCoverage":true},{"functionName":"runFunctions","ranges":[{"startOffset":288,"endOffset":637,"count":0}],"isBlockCoverage":false},{"functionName":"runTools","ranges":[{"startOffset":649,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"_addMessage","ranges":[{"startOffset":991,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1177,"count":1}],"isBlockCoverage":true},{"functionName":"fromReadableStream","ranges":[{"startOffset":152,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"runFunctions","ranges":[{"startOffset":400,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"runTools","ranges":[{"startOffset":770,"endOffset":1116,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/RunnableFunction.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"isRunnableFunctionWithParse","ranges":[{"startOffset":7,"endOffset":94,"count":0}],"isBlockCoverage":false},{"functionName":"ParsingFunction","ranges":[{"startOffset":330,"endOffset":552,"count":0}],"isBlockCoverage":false},{"functionName":"ParsingToolFunction","ranges":[{"startOffset":734,"endOffset":823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionStream.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15033,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":527,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":70,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":562,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"ChatCompletionStream","ranges":[{"startOffset":1586,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"get currentChatCompletionSnapshot","ranges":[{"startOffset":1771,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadableStream","ranges":[{"startOffset":2173,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"createChatCompletion","ranges":[{"startOffset":2356,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"_createChatCompletion","ranges":[{"startOffset":2678,"endOffset":3680,"count":0}],"isBlockCoverage":false},{"functionName":"_fromReadableStream","ranges":[{"startOffset":3685,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4958,"endOffset":11608,"count":0}],"isBlockCoverage":false},{"functionName":"toReadableStream","ranges":[{"startOffset":11613,"endOffset":11772,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeChatCompletion","ranges":[{"startOffset":11775,"endOffset":14933,"count":0}],"isBlockCoverage":false},{"functionName":"str","ranges":[{"startOffset":14934,"endOffset":14983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AbstractAssistantStreamRunner.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14110,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractAssistantStreamRunner","ranges":[{"startOffset":1756,"endOffset":4769,"count":0}],"isBlockCoverage":false},{"functionName":"_run","ranges":[{"startOffset":4774,"endOffset":5210,"count":0}],"isBlockCoverage":false},{"functionName":"_addRun","ranges":[{"startOffset":5215,"endOffset":5255,"count":0}],"isBlockCoverage":false},{"functionName":"_connected","ranges":[{"startOffset":5260,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"get ended","ranges":[{"startOffset":5470,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"get errored","ranges":[{"startOffset":5582,"endOffset":5693,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":5698,"endOffset":5809,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":5814,"endOffset":5862,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":6260,"endOffset":6549,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":6986,"endOffset":7333,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":7570,"endOffset":7873,"count":0}],"isBlockCoverage":false},{"functionName":"emitted","ranges":[{"startOffset":8385,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":8700,"endOffset":8916,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":8921,"endOffset":11236,"count":0}],"isBlockCoverage":false},{"functionName":"_threadAssistantStream","ranges":[{"startOffset":11241,"endOffset":11379,"count":0}],"isBlockCoverage":false},{"functionName":"_runAssistantStream","ranges":[{"startOffset":11384,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"_runToolAssistantStream","ranges":[{"startOffset":11538,"endOffset":11709,"count":0}],"isBlockCoverage":false},{"functionName":"_createThreadAssistantStream","ranges":[{"startOffset":11714,"endOffset":12238,"count":0}],"isBlockCoverage":false},{"functionName":"_createToolAssistantStream","ranges":[{"startOffset":12243,"endOffset":12761,"count":0}],"isBlockCoverage":false},{"functionName":"_createAssistantStream","ranges":[{"startOffset":12766,"endOffset":13296,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/runs/steps.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1217,"count":1},{"startOffset":1165,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"retrieve","ranges":[{"startOffset":390,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"list","ranges":[{"startOffset":647,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1089,"endOffset":1157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"671","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/Util.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":true},{"functionName":"allSettledWithThrow","ranges":[{"startOffset":124,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/FormData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5323,"count":1},{"startOffset":35,"endOffset":65,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":70,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"FormData","ranges":[{"startOffset":852,"endOffset":1139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1151,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1838,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2124,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2408,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":2606,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2810,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":2919,"endOffset":3022,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3027,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":3169,"endOffset":3378,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3383,"endOffset":3475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3480,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5039,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5187,"endOffset":5248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5253,"endOffset":5320,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/Blob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5466,"count":1},{"startOffset":142,"endOffset":172,"count":0},{"startOffset":634,"endOffset":664,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":177,"endOffset":597,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":669,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"Blob","ranges":[{"startOffset":1416,"endOffset":3219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3231,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3629,"endOffset":3709,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":3714,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":3799,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3992,"endOffset":4314,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":4319,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":4636,"endOffset":5154,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5159,"endOffset":5216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/File.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2431,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":1186,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1887,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":2129,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":2214,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"get webkitRelativePath","ranges":[{"startOffset":2315,"endOffset":2366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2371,"endOffset":2428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/FormDataEncoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7617,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"FormDataEncoder","ranges":[{"startOffset":1758,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"getContentLength","ranges":[{"startOffset":4499,"endOffset":5201,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":5206,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":5795,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6026,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7512,"endOffset":7574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/FileLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"677","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/isFormData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":361,"count":1}],"isBlockCoverage":true},{"functionName":"isFormData","ranges":[{"startOffset":68,"endOffset":317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/FormDataLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"679","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/isFileLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":327,"count":1}],"isBlockCoverage":true},{"functionName":"isFileLike","ranges":[{"startOffset":68,"endOffset":325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AbstractChatCompletionRunner.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28404,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractChatCompletionRunner","ranges":[{"startOffset":2354,"endOffset":5468,"count":0}],"isBlockCoverage":false},{"functionName":"_run","ranges":[{"startOffset":5473,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"_addChatCompletion","ranges":[{"startOffset":5910,"endOffset":6209,"count":0}],"isBlockCoverage":false},{"functionName":"_addMessage","ranges":[{"startOffset":6214,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"_connected","ranges":[{"startOffset":7222,"endOffset":7426,"count":0}],"isBlockCoverage":false},{"functionName":"get ended","ranges":[{"startOffset":7431,"endOffset":7537,"count":0}],"isBlockCoverage":false},{"functionName":"get errored","ranges":[{"startOffset":7542,"endOffset":7652,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":7657,"endOffset":7767,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":7772,"endOffset":7820,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":8218,"endOffset":8505,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":8942,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":9525,"endOffset":9826,"count":0}],"isBlockCoverage":false},{"functionName":"emitted","ranges":[{"startOffset":10338,"endOffset":10647,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":10652,"endOffset":10866,"count":0}],"isBlockCoverage":false},{"functionName":"finalChatCompletion","ranges":[{"startOffset":11065,"endOffset":11349,"count":0}],"isBlockCoverage":false},{"functionName":"finalContent","ranges":[{"startOffset":11577,"endOffset":11781,"count":0}],"isBlockCoverage":false},{"functionName":"finalMessage","ranges":[{"startOffset":12017,"endOffset":12221,"count":0}],"isBlockCoverage":false},{"functionName":"finalFunctionCall","ranges":[{"startOffset":12440,"endOffset":12654,"count":0}],"isBlockCoverage":false},{"functionName":"finalFunctionCallResult","ranges":[{"startOffset":12659,"endOffset":12885,"count":0}],"isBlockCoverage":false},{"functionName":"totalUsage","ranges":[{"startOffset":12890,"endOffset":13096,"count":0}],"isBlockCoverage":false},{"functionName":"allChatCompletions","ranges":[{"startOffset":13101,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":13177,"endOffset":15481,"count":0}],"isBlockCoverage":false},{"functionName":"_emitFinal","ranges":[{"startOffset":15486,"endOffset":16977,"count":0}],"isBlockCoverage":false},{"functionName":"_createChatCompletion","ranges":[{"startOffset":16982,"endOffset":17636,"count":0}],"isBlockCoverage":false},{"functionName":"_runChatCompletion","ranges":[{"startOffset":17641,"endOffset":17887,"count":0}],"isBlockCoverage":false},{"functionName":"_runFunctions","ranges":[{"startOffset":17892,"endOffset":20872,"count":0}],"isBlockCoverage":false},{"functionName":"_runTools","ranges":[{"startOffset":20877,"endOffset":24558,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_getFinalContent","ranges":[{"startOffset":25407,"endOffset":25628,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_getFinalMessage","ranges":[{"startOffset":25678,"endOffset":26069,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_getFinalFunctionCall","ranges":[{"startOffset":26124,"endOffset":26568,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_getFinalFunctionCallResult","ranges":[{"startOffset":26629,"endOffset":27222,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_calculateTotalUsage","ranges":[{"startOffset":27276,"endOffset":27730,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_validateParams","ranges":[{"startOffset":27779,"endOffset":28053,"count":0}],"isBlockCoverage":false},{"functionName":"_AbstractChatCompletionRunner_stringifyFunctionCallResult","ranges":[{"startOffset":28115,"endOffset":28345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/chatCompletionUtils.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":377,"count":1}],"isBlockCoverage":true},{"functionName":"isAssistantMessage","ranges":[{"startOffset":34,"endOffset":92,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionMessage","ranges":[{"startOffset":127,"endOffset":184,"count":0}],"isBlockCoverage":false},{"functionName":"isToolMessage","ranges":[{"startOffset":215,"endOffset":268,"count":0}],"isBlockCoverage":false},{"functionName":"isPresent","ranges":[{"startOffset":277,"endOffset":328,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/isFile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90,"count":1}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":56,"endOffset":88,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/isBlob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90,"count":1}],"isBlockCoverage":true},{"functionName":"isBlob","ranges":[{"startOffset":56,"endOffset":88,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":26,"endOffset":66,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/deprecateConstructorEntries.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":209,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87,"endOffset":96,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/node_modules/web-streams-polyfill/dist/ponyfill.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":59447,"count":1},{"startOffset":290,"endOffset":308,"count":0},{"startOffset":3160,"endOffset":3212,"count":0},{"startOffset":3225,"endOffset":3277,"count":0},{"startOffset":8342,"endOffset":8368,"count":0},{"startOffset":35731,"endOffset":35738,"count":0},{"startOffset":35859,"endOffset":36147,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":291,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":309,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":323,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":404,"endOffset":493,"count":32},{"startOffset":482,"endOffset":492,"count":0}],"isBlockCoverage":true},{"functionName":"u","ranges":[{"startOffset":585,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":615,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":641,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":667,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"b","ranges":[{"startOffset":706,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":745,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":768,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":798,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":832,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"y","ranges":[{"startOffset":866,"endOffset":971,"count":0}],"isBlockCoverage":false},{"functionName":"g","ranges":[{"startOffset":972,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"w","ranges":[{"startOffset":1108,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":1179,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":1312,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":1343,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":1503,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":1696,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1864,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":2047,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":2193,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":2245,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"k","ranges":[{"startOffset":2618,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":2702,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"B","ranges":[{"startOffset":2800,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":2828,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":2990,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":3162,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":3227,"endOffset":3277,"count":0}],"isBlockCoverage":false},{"functionName":"F","ranges":[{"startOffset":3278,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":3407,"endOffset":3494,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":3494,"endOffset":3633,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":3633,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":3726,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Y","ranges":[{"startOffset":3809,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":3840,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":3871,"endOffset":4152,"count":0}],"isBlockCoverage":false},{"functionName":"H","ranges":[{"startOffset":4152,"endOffset":4283,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":4283,"endOffset":4414,"count":0}],"isBlockCoverage":false},{"functionName":"V","ranges":[{"startOffset":4414,"endOffset":4493,"count":0}],"isBlockCoverage":false},{"functionName":"U","ranges":[{"startOffset":4493,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"G","ranges":[{"startOffset":4541,"endOffset":4634,"count":0}],"isBlockCoverage":false},{"functionName":"X","ranges":[{"startOffset":4634,"endOffset":4686,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":4686,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReader","ranges":[{"startOffset":4778,"endOffset":4996,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":4996,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":5060,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5161,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":5600,"endOffset":5762,"count":0}],"isBlockCoverage":false},{"functionName":"K","ranges":[{"startOffset":5763,"endOffset":5893,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":5893,"endOffset":5990,"count":0}],"isBlockCoverage":false},{"functionName":"ee","ranges":[{"startOffset":5990,"endOffset":6122,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":6629,"endOffset":6731,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":6731,"endOffset":6870,"count":0}],"isBlockCoverage":false},{"functionName":"return","ranges":[{"startOffset":6870,"endOffset":6973,"count":0}],"isBlockCoverage":false},{"functionName":"_nextSteps","ranges":[{"startOffset":6973,"endOffset":7415,"count":0}],"isBlockCoverage":false},{"functionName":"_returnSteps","ranges":[{"startOffset":7415,"endOffset":7743,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":7754,"endOffset":7822,"count":0}],"isBlockCoverage":false},{"functionName":"return","ranges":[{"startOffset":7823,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"oe","ranges":[{"startOffset":7901,"endOffset":8073,"count":0}],"isBlockCoverage":false},{"functionName":"ne","ranges":[{"startOffset":8073,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8270,"endOffset":8290,"count":0}],"isBlockCoverage":false},{"functionName":"ae","ranges":[{"startOffset":8344,"endOffset":8368,"count":0}],"isBlockCoverage":false},{"functionName":"ie","ranges":[{"startOffset":8369,"endOffset":8439,"count":0}],"isBlockCoverage":false},{"functionName":"le","ranges":[{"startOffset":8439,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"se","ranges":[{"startOffset":8640,"endOffset":8764,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":8764,"endOffset":8965,"count":0}],"isBlockCoverage":false},{"functionName":"ce","ranges":[{"startOffset":8965,"endOffset":9015,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBRequest","ranges":[{"startOffset":9047,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"get view","ranges":[{"startOffset":9104,"endOffset":9163,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":9163,"endOffset":9860,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithNewView","ranges":[{"startOffset":9860,"endOffset":11018,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamController","ranges":[{"startOffset":11490,"endOffset":11547,"count":0}],"isBlockCoverage":false},{"functionName":"get byobRequest","ranges":[{"startOffset":11547,"endOffset":11971,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":11971,"endOffset":12042,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":12042,"endOffset":12711,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12711,"endOffset":13890,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":13890,"endOffset":13941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13941,"endOffset":14017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14017,"endOffset":14423,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14423,"endOffset":14584,"count":0}],"isBlockCoverage":false},{"functionName":"de","ranges":[{"startOffset":14585,"endOffset":14733,"count":0}],"isBlockCoverage":false},{"functionName":"fe","ranges":[{"startOffset":14733,"endOffset":14888,"count":0}],"isBlockCoverage":false},{"functionName":"be","ranges":[{"startOffset":14888,"endOffset":15313,"count":0}],"isBlockCoverage":false},{"functionName":"he","ranges":[{"startOffset":15313,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"_e","ranges":[{"startOffset":15360,"endOffset":15566,"count":0}],"isBlockCoverage":false},{"functionName":"pe","ranges":[{"startOffset":15566,"endOffset":15675,"count":0}],"isBlockCoverage":false},{"functionName":"me","ranges":[{"startOffset":15675,"endOffset":15769,"count":0}],"isBlockCoverage":false},{"functionName":"ye","ranges":[{"startOffset":15769,"endOffset":15854,"count":0}],"isBlockCoverage":false},{"functionName":"ge","ranges":[{"startOffset":15854,"endOffset":15936,"count":0}],"isBlockCoverage":false},{"functionName":"we","ranges":[{"startOffset":15936,"endOffset":16379,"count":0}],"isBlockCoverage":false},{"functionName":"Se","ranges":[{"startOffset":16379,"endOffset":16415,"count":0}],"isBlockCoverage":false},{"functionName":"ve","ranges":[{"startOffset":16415,"endOffset":16521,"count":0}],"isBlockCoverage":false},{"functionName":"Re","ranges":[{"startOffset":16521,"endOffset":16669,"count":0}],"isBlockCoverage":false},{"functionName":"Te","ranges":[{"startOffset":16669,"endOffset":16843,"count":0}],"isBlockCoverage":false},{"functionName":"qe","ranges":[{"startOffset":16843,"endOffset":17371,"count":0}],"isBlockCoverage":false},{"functionName":"Ce","ranges":[{"startOffset":17371,"endOffset":17421,"count":0}],"isBlockCoverage":false},{"functionName":"Ee","ranges":[{"startOffset":17421,"endOffset":17486,"count":0}],"isBlockCoverage":false},{"functionName":"Pe","ranges":[{"startOffset":17486,"endOffset":17594,"count":0}],"isBlockCoverage":false},{"functionName":"We","ranges":[{"startOffset":17594,"endOffset":17750,"count":0}],"isBlockCoverage":false},{"functionName":"ke","ranges":[{"startOffset":17750,"endOffset":17885,"count":0}],"isBlockCoverage":false},{"functionName":"Oe","ranges":[{"startOffset":17885,"endOffset":18624,"count":0}],"isBlockCoverage":false},{"functionName":"Be","ranges":[{"startOffset":18624,"endOffset":18752,"count":0}],"isBlockCoverage":false},{"functionName":"Ae","ranges":[{"startOffset":18752,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"je","ranges":[{"startOffset":18886,"endOffset":18939,"count":0}],"isBlockCoverage":false},{"functionName":"ze","ranges":[{"startOffset":18939,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"Le","ranges":[{"startOffset":18996,"endOffset":19056,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBReader","ranges":[{"startOffset":19612,"endOffset":19982,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":19982,"endOffset":20047,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":20047,"endOffset":20149,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":20149,"endOffset":21576,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":21576,"endOffset":21740,"count":0}],"isBlockCoverage":false},{"functionName":"Fe","ranges":[{"startOffset":21741,"endOffset":21873,"count":0}],"isBlockCoverage":false},{"functionName":"Ie","ranges":[{"startOffset":21873,"endOffset":21979,"count":0}],"isBlockCoverage":false},{"functionName":"De","ranges":[{"startOffset":21979,"endOffset":22105,"count":0}],"isBlockCoverage":false},{"functionName":"$e","ranges":[{"startOffset":22105,"endOffset":22239,"count":0}],"isBlockCoverage":false},{"functionName":"Me","ranges":[{"startOffset":22239,"endOffset":22288,"count":0}],"isBlockCoverage":false},{"functionName":"Ye","ranges":[{"startOffset":22288,"endOffset":22479,"count":0}],"isBlockCoverage":false},{"functionName":"Qe","ranges":[{"startOffset":22479,"endOffset":22521,"count":0}],"isBlockCoverage":false},{"functionName":"Ne","ranges":[{"startOffset":22521,"endOffset":22568,"count":0}],"isBlockCoverage":false},{"functionName":"He","ranges":[{"startOffset":22568,"endOffset":22615,"count":0}],"isBlockCoverage":false},{"functionName":"xe","ranges":[{"startOffset":22615,"endOffset":22662,"count":0}],"isBlockCoverage":false},{"functionName":"Ve","ranges":[{"startOffset":22662,"endOffset":22715,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStream","ranges":[{"startOffset":23260,"endOffset":24912,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":24912,"endOffset":24973,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":24973,"endOffset":25101,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":25101,"endOffset":25294,"count":0}],"isBlockCoverage":false},{"functionName":"getWriter","ranges":[{"startOffset":25294,"endOffset":25386,"count":0}],"isBlockCoverage":false},{"functionName":"Ge","ranges":[{"startOffset":25387,"endOffset":25517,"count":0}],"isBlockCoverage":false},{"functionName":"Xe","ranges":[{"startOffset":25517,"endOffset":25558,"count":0}],"isBlockCoverage":false},{"functionName":"Je","ranges":[{"startOffset":25558,"endOffset":26116,"count":0}],"isBlockCoverage":false},{"functionName":"Ke","ranges":[{"startOffset":26116,"endOffset":26477,"count":0}],"isBlockCoverage":false},{"functionName":"Ze","ranges":[{"startOffset":26477,"endOffset":26530,"count":0}],"isBlockCoverage":false},{"functionName":"et","ranges":[{"startOffset":26530,"endOffset":26782,"count":0}],"isBlockCoverage":false},{"functionName":"tt","ranges":[{"startOffset":26782,"endOffset":27219,"count":0}],"isBlockCoverage":false},{"functionName":"rt","ranges":[{"startOffset":27219,"endOffset":27300,"count":0}],"isBlockCoverage":false},{"functionName":"ot","ranges":[{"startOffset":27300,"endOffset":27457,"count":0}],"isBlockCoverage":false},{"functionName":"nt","ranges":[{"startOffset":27457,"endOffset":27575,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriter","ranges":[{"startOffset":28023,"endOffset":28570,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":28570,"endOffset":28635,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":28635,"endOffset":28929,"count":0}],"isBlockCoverage":false},{"functionName":"get ready","ranges":[{"startOffset":28929,"endOffset":28991,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":28991,"endOffset":29140,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":29140,"endOffset":29345,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":29345,"endOffset":29727,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":29727,"endOffset":30521,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":30522,"endOffset":30660,"count":0}],"isBlockCoverage":false},{"functionName":"it","ranges":[{"startOffset":30660,"endOffset":30746,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultController","ranges":[{"startOffset":31421,"endOffset":31478,"count":0}],"isBlockCoverage":false},{"functionName":"get abortReason","ranges":[{"startOffset":31478,"endOffset":31558,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":31558,"endOffset":31762,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":31762,"endOffset":31865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31865,"endOffset":31922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31922,"endOffset":31937,"count":0}],"isBlockCoverage":false},{"functionName":"st","ranges":[{"startOffset":31938,"endOffset":32085,"count":0}],"isBlockCoverage":false},{"functionName":"ut","ranges":[{"startOffset":32085,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"ct","ranges":[{"startOffset":32207,"endOffset":32262,"count":0}],"isBlockCoverage":false},{"functionName":"dt","ranges":[{"startOffset":32262,"endOffset":33640,"count":0}],"isBlockCoverage":false},{"functionName":"ft","ranges":[{"startOffset":33640,"endOffset":33714,"count":0}],"isBlockCoverage":false},{"functionName":"bt","ranges":[{"startOffset":33714,"endOffset":33745,"count":0}],"isBlockCoverage":false},{"functionName":"ht","ranges":[{"startOffset":33745,"endOffset":33812,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":33812,"endOffset":33918,"count":0}],"isBlockCoverage":false},{"functionName":"pt","ranges":[{"startOffset":33918,"endOffset":34058,"count":0}],"isBlockCoverage":false},{"functionName":"mt","ranges":[{"startOffset":34058,"endOffset":34190,"count":0}],"isBlockCoverage":false},{"functionName":"yt","ranges":[{"startOffset":34190,"endOffset":34275,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":34275,"endOffset":34406,"count":0}],"isBlockCoverage":false},{"functionName":"wt","ranges":[{"startOffset":34406,"endOffset":34437,"count":0}],"isBlockCoverage":false},{"functionName":"St","ranges":[{"startOffset":34437,"endOffset":34633,"count":0}],"isBlockCoverage":false},{"functionName":"vt","ranges":[{"startOffset":34633,"endOffset":34814,"count":0}],"isBlockCoverage":false},{"functionName":"Rt","ranges":[{"startOffset":34814,"endOffset":34941,"count":0}],"isBlockCoverage":false},{"functionName":"Tt","ranges":[{"startOffset":34941,"endOffset":34972,"count":0}],"isBlockCoverage":false},{"functionName":"qt","ranges":[{"startOffset":34972,"endOffset":34999,"count":0}],"isBlockCoverage":false},{"functionName":"Ct","ranges":[{"startOffset":34999,"endOffset":35189,"count":0}],"isBlockCoverage":false},{"functionName":"Et","ranges":[{"startOffset":35189,"endOffset":35366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35748,"endOffset":35852,"count":1},{"startOffset":35783,"endOffset":35803,"count":0},{"startOffset":35804,"endOffset":35813,"count":0},{"startOffset":35833,"endOffset":35851,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35860,"endOffset":36145,"count":0}],"isBlockCoverage":false},{"functionName":"kt","ranges":[{"startOffset":36148,"endOffset":38046,"count":0}],"isBlockCoverage":false},{"functionName":"Ot","ranges":[{"startOffset":38046,"endOffset":40568,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultController","ranges":[{"startOffset":40606,"endOffset":40663,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":40663,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":40734,"endOffset":40986,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":40986,"endOffset":41342,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":41342,"endOffset":41393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41393,"endOffset":41460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41460,"endOffset":41657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41657,"endOffset":41664,"count":0}],"isBlockCoverage":false},{"functionName":"Bt","ranges":[{"startOffset":41665,"endOffset":41812,"count":0}],"isBlockCoverage":false},{"functionName":"At","ranges":[{"startOffset":41812,"endOffset":42162,"count":0}],"isBlockCoverage":false},{"functionName":"jt","ranges":[{"startOffset":42162,"endOffset":42259,"count":0}],"isBlockCoverage":false},{"functionName":"zt","ranges":[{"startOffset":42259,"endOffset":42357,"count":0}],"isBlockCoverage":false},{"functionName":"Lt","ranges":[{"startOffset":42357,"endOffset":42488,"count":0}],"isBlockCoverage":false},{"functionName":"Ft","ranges":[{"startOffset":42488,"endOffset":42577,"count":0}],"isBlockCoverage":false},{"functionName":"It","ranges":[{"startOffset":42577,"endOffset":43168,"count":0}],"isBlockCoverage":false},{"functionName":"Dt","ranges":[{"startOffset":43168,"endOffset":43308,"count":0}],"isBlockCoverage":false},{"functionName":"$t","ranges":[{"startOffset":43308,"endOffset":43355,"count":0}],"isBlockCoverage":false},{"functionName":"Mt","ranges":[{"startOffset":43355,"endOffset":43402,"count":0}],"isBlockCoverage":false},{"functionName":"Yt","ranges":[{"startOffset":43402,"endOffset":43449,"count":0}],"isBlockCoverage":false},{"functionName":"Qt","ranges":[{"startOffset":43449,"endOffset":43590,"count":0}],"isBlockCoverage":false},{"functionName":"Nt","ranges":[{"startOffset":43590,"endOffset":43736,"count":0}],"isBlockCoverage":false},{"functionName":"Ht","ranges":[{"startOffset":43736,"endOffset":44211,"count":0}],"isBlockCoverage":false},{"functionName":"xt","ranges":[{"startOffset":44211,"endOffset":44640,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStream","ranges":[{"startOffset":45176,"endOffset":46087,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":46087,"endOffset":46148,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":46148,"endOffset":46279,"count":0}],"isBlockCoverage":false},{"functionName":"getReader","ranges":[{"startOffset":46279,"endOffset":46584,"count":0}],"isBlockCoverage":false},{"functionName":"pipeThrough","ranges":[{"startOffset":46584,"endOffset":47056,"count":0}],"isBlockCoverage":false},{"functionName":"pipeTo","ranges":[{"startOffset":47056,"endOffset":47619,"count":0}],"isBlockCoverage":false},{"functionName":"tee","ranges":[{"startOffset":47619,"endOffset":47753,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":47753,"endOffset":48039,"count":0}],"isBlockCoverage":false},{"functionName":"Vt","ranges":[{"startOffset":48040,"endOffset":48170,"count":0}],"isBlockCoverage":false},{"functionName":"Ut","ranges":[{"startOffset":48170,"endOffset":48211,"count":0}],"isBlockCoverage":false},{"functionName":"Gt","ranges":[{"startOffset":48211,"endOffset":48519,"count":0}],"isBlockCoverage":false},{"functionName":"Xt","ranges":[{"startOffset":48519,"endOffset":48679,"count":0}],"isBlockCoverage":false},{"functionName":"Jt","ranges":[{"startOffset":48679,"endOffset":48791,"count":0}],"isBlockCoverage":false},{"functionName":"Kt","ranges":[{"startOffset":48791,"endOffset":48897,"count":0}],"isBlockCoverage":false},{"functionName":"Zt","ranges":[{"startOffset":48897,"endOffset":49031,"count":0}],"isBlockCoverage":false},{"functionName":"er","ranges":[{"startOffset":49833,"endOffset":49848,"count":0}],"isBlockCoverage":false},{"functionName":"ByteLengthQueuingStrategy","ranges":[{"startOffset":49894,"endOffset":50031,"count":0}],"isBlockCoverage":false},{"functionName":"get highWaterMark","ranges":[{"startOffset":50031,"endOffset":50142,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":50142,"endOffset":50193,"count":0}],"isBlockCoverage":false},{"functionName":"tr","ranges":[{"startOffset":50194,"endOffset":50322,"count":0}],"isBlockCoverage":false},{"functionName":"rr","ranges":[{"startOffset":50322,"endOffset":50477,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":50757,"endOffset":50762,"count":0}],"isBlockCoverage":false},{"functionName":"CountQueuingStrategy","ranges":[{"startOffset":50803,"endOffset":50930,"count":0}],"isBlockCoverage":false},{"functionName":"get highWaterMark","ranges":[{"startOffset":50930,"endOffset":51036,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":51036,"endOffset":51087,"count":0}],"isBlockCoverage":false},{"functionName":"nr","ranges":[{"startOffset":51088,"endOffset":51206,"count":0}],"isBlockCoverage":false},{"functionName":"ar","ranges":[{"startOffset":51206,"endOffset":51351,"count":0}],"isBlockCoverage":false},{"functionName":"ir","ranges":[{"startOffset":51351,"endOffset":51398,"count":0}],"isBlockCoverage":false},{"functionName":"lr","ranges":[{"startOffset":51398,"endOffset":51445,"count":0}],"isBlockCoverage":false},{"functionName":"sr","ranges":[{"startOffset":51445,"endOffset":51498,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStream","ranges":[{"startOffset":51776,"endOffset":55454,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":55454,"endOffset":55525,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":55525,"endOffset":55596,"count":0}],"isBlockCoverage":false},{"functionName":"ur","ranges":[{"startOffset":55597,"endOffset":55729,"count":0}],"isBlockCoverage":false},{"functionName":"cr","ranges":[{"startOffset":55729,"endOffset":55762,"count":0}],"isBlockCoverage":false},{"functionName":"dr","ranges":[{"startOffset":55762,"endOffset":55928,"count":0}],"isBlockCoverage":false},{"functionName":"fr","ranges":[{"startOffset":55928,"endOffset":56119,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultController","ranges":[{"startOffset":56398,"endOffset":56455,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":56455,"endOffset":56553,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":56553,"endOffset":56608,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":56608,"endOffset":56696,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":56696,"endOffset":56873,"count":0}],"isBlockCoverage":false},{"functionName":"br","ranges":[{"startOffset":56874,"endOffset":57023,"count":0}],"isBlockCoverage":false},{"functionName":"hr","ranges":[{"startOffset":57023,"endOffset":57092,"count":0}],"isBlockCoverage":false},{"functionName":"_r","ranges":[{"startOffset":57092,"endOffset":57544,"count":0}],"isBlockCoverage":false},{"functionName":"pr","ranges":[{"startOffset":57544,"endOffset":57653,"count":0}],"isBlockCoverage":false},{"functionName":"mr","ranges":[{"startOffset":57653,"endOffset":57795,"count":0}],"isBlockCoverage":false},{"functionName":"yr","ranges":[{"startOffset":57795,"endOffset":57903,"count":0}],"isBlockCoverage":false},{"functionName":"gr","ranges":[{"startOffset":57903,"endOffset":57982,"count":0}],"isBlockCoverage":false},{"functionName":"wr","ranges":[{"startOffset":57982,"endOffset":58082,"count":0}],"isBlockCoverage":false},{"functionName":"Sr","ranges":[{"startOffset":58082,"endOffset":58215,"count":0}],"isBlockCoverage":false},{"functionName":"vr","ranges":[{"startOffset":58215,"endOffset":58271,"count":0}],"isBlockCoverage":false},{"functionName":"Rr","ranges":[{"startOffset":58271,"endOffset":58332,"count":0}],"isBlockCoverage":false},{"functionName":"Tr","ranges":[{"startOffset":58332,"endOffset":58485,"count":0}],"isBlockCoverage":false},{"functionName":"qr","ranges":[{"startOffset":58485,"endOffset":58527,"count":0}],"isBlockCoverage":false},{"functionName":"Cr","ranges":[{"startOffset":58527,"endOffset":58579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/formdata-node/lib/esm/blobHelpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2541,"count":1}],"isBlockCoverage":true},{"functionName":"clonePart","ranges":[{"startOffset":179,"endOffset":540,"count":0}],"isBlockCoverage":false},{"functionName":"consumeNodeBlob","ranges":[{"startOffset":541,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBlobParts","ranges":[{"startOffset":870,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBlob","ranges":[{"startOffset":1319,"endOffset":2540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/createBoundary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"createBoundary","ranges":[{"startOffset":57,"endOffset":231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":16,"endOffset":93,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":95,"endOffset":411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/normalizeValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeValue","ranges":[{"startOffset":23,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/escapeName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":150,"count":1}],"isBlockCoverage":true},{"functionName":"escapeName","ranges":[{"startOffset":19,"endOffset":121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/form-data-encoder/lib/esm/util/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":19,"endOffset":59,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/node-fetch/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45829,"count":1},{"startOffset":27700,"endOffset":27716,"count":0},{"startOffset":34481,"endOffset":34497,"count":0}],"isBlockCoverage":true},{"functionName":"_interopDefault","ranges":[{"startOffset":79,"endOffset":193,"count":6},{"startOffset":150,"endOffset":168,"count":5},{"startOffset":170,"endOffset":185,"count":0}],"isBlockCoverage":true},{"functionName":"Blob","ranges":[{"startOffset":758,"endOffset":1780,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":1782,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":1829,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":1867,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":1931,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":2089,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2247,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":2290,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"FetchError","ranges":[{"startOffset":3633,"endOffset":4014,"count":0}],"isBlockCoverage":false},{"functionName":"Body","ranges":[{"startOffset":4566,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":5921,"endOffset":5967,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":5971,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":6100,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"blob","ranges":[{"startOffset":6325,"endOffset":6589,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":6656,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":7028,"endOffset":7131,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":7215,"endOffset":7261,"count":0}],"isBlockCoverage":false},{"functionName":"textConverted","ranges":[{"startOffset":7421,"endOffset":7573,"count":0}],"isBlockCoverage":false},{"functionName":"Body.mixIn","ranges":[{"startOffset":7869,"endOffset":8144,"count":2},{"startOffset":7952,"endOffset":8142,"count":16}],"isBlockCoverage":true},{"functionName":"consumeBody","ranges":[{"startOffset":8297,"endOffset":10583,"count":0}],"isBlockCoverage":false},{"functionName":"convertBody","ranges":[{"startOffset":10864,"endOffset":12176,"count":0}],"isBlockCoverage":false},{"functionName":"isURLSearchParams","ranges":[{"startOffset":12384,"endOffset":12939,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":13059,"endOffset":13405,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":13531,"endOffset":14173,"count":0}],"isBlockCoverage":false},{"functionName":"extractContentType","ranges":[{"startOffset":14467,"endOffset":15516,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalBytes","ranges":[{"startOffset":15854,"endOffset":16450,"count":0}],"isBlockCoverage":false},{"functionName":"writeToStream","ranges":[{"startOffset":16600,"endOffset":16926,"count":0}],"isBlockCoverage":false},{"functionName":"validateName","ranges":[{"startOffset":17165,"endOffset":17336,"count":0}],"isBlockCoverage":false},{"functionName":"validateValue","ranges":[{"startOffset":17338,"endOffset":17506,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":17679,"endOffset":17838,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":17981,"endOffset":19520,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19639,"endOffset":19816,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":20045,"endOffset":20412,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20567,"endOffset":20768,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":20924,"endOffset":21176,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":21290,"endOffset":21392,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":21506,"endOffset":21659,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":21734,"endOffset":21764,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":21832,"endOffset":21888,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":21958,"endOffset":22018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22149,"endOffset":22224,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":22756,"endOffset":23162,"count":0}],"isBlockCoverage":false},{"functionName":"createHeadersIterator","ranges":[{"startOffset":23202,"endOffset":23384,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":23444,"endOffset":24008,"count":0}],"isBlockCoverage":false},{"functionName":"exportNodeCompatibleHeaders","ranges":[{"startOffset":24367,"endOffset":24746,"count":0}],"isBlockCoverage":false},{"functionName":"createHeadersLenient","ranges":[{"startOffset":24943,"endOffset":25494,"count":0}],"isBlockCoverage":false},{"functionName":"Response","ranges":[{"startOffset":25809,"endOffset":26450,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":26453,"endOffset":26505,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":26508,"endOffset":26560,"count":0}],"isBlockCoverage":false},{"functionName":"get ok","ranges":[{"startOffset":26641,"endOffset":26730,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":26733,"endOffset":26794,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":26797,"endOffset":26857,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":26860,"endOffset":26914,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":26977,"endOffset":27179,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":27964,"endOffset":28340,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":28522,"endOffset":28628,"count":0}],"isBlockCoverage":false},{"functionName":"isAbortSignal","ranges":[{"startOffset":28630,"endOffset":28813,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":28970,"endOffset":31075,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":31078,"endOffset":31130,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":31133,"endOffset":31197,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":31200,"endOffset":31254,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":31257,"endOffset":31313,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":31316,"endOffset":31368,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":31429,"endOffset":31469,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeRequestOptions","ranges":[{"startOffset":32058,"endOffset":33882,"count":0}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":34086,"endOffset":34312,"count":0}],"isBlockCoverage":false},{"functionName":"isDomainOrSubdomain","ranges":[{"startOffset":34653,"endOffset":34893,"count":0}],"isBlockCoverage":false},{"functionName":"isSameProtocol","ranges":[{"startOffset":35127,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":35445,"endOffset":44315,"count":0}],"isBlockCoverage":false},{"functionName":"fixResponseChunkedTransferBadEnding","ranges":[{"startOffset":44316,"endOffset":45154,"count":0}],"isBlockCoverage":false},{"functionName":"destroyStream","ranges":[{"startOffset":45156,"endOffset":45313,"count":0}],"isBlockCoverage":false},{"functionName":"fetch.isRedirect","ranges":[{"startOffset":45430,"endOffset":45535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5484,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2125,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":4167,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4416,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":4829,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5045,"endOffset":5254,"count":3},{"startOffset":5090,"endOffset":5223,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5378,"endOffset":5423,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5427,"endOffset":5478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16492,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1678,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"ReusedHandle","ranges":[{"startOffset":2656,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2739,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2920,"endOffset":6147,"count":4},{"startOffset":2982,"endOffset":3008,"count":0},{"startOffset":3556,"endOffset":3564,"count":2},{"startOffset":3947,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4084,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6255,"endOffset":6780,"count":2},{"startOffset":6325,"endOffset":6778,"count":0}],"isBlockCoverage":true},{"functionName":"onkeylog","ranges":[{"startOffset":6489,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6953,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":7483,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9680,"endOffset":10774,"count":0}],"isBlockCoverage":false},{"functionName":"calculateServerName","ranges":[{"startOffset":10777,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":11599,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13120,"endOffset":14921,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14958,"endOffset":15211,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15244,"endOffset":15412,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":15441,"endOffset":15790,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":15793,"endOffset":16034,"count":0}],"isBlockCoverage":false},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16036,"endOffset":16431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28466,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3171,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"validateHost","ranges":[{"startOffset":3441,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3770,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"ClientRequest","ranges":[{"startOffset":3844,"endOffset":11267,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11431,"endOffset":12204,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":12249,"endOffset":12461,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":12496,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12671,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":12950,"endOffset":13000,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13002,"endOffset":13162,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13164,"endOffset":14331,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":14333,"endOffset":14974,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":14976,"endOffset":15462,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15464,"endOffset":17847,"count":0}],"isBlockCoverage":false},{"functionName":"statusIsInformational","ranges":[{"startOffset":17849,"endOffset":18084,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18096,"endOffset":21153,"count":0}],"isBlockCoverage":false},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21165,"endOffset":22234,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22236,"endOffset":23393,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnTimeout","ranges":[{"startOffset":23395,"endOffset":23546,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":23688,"endOffset":23808,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":23810,"endOffset":23934,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":23936,"endOffset":25116,"count":0}],"isBlockCoverage":false},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25118,"endOffset":25226,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25228,"endOffset":25619,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":25656,"endOffset":25827,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketNT","ranges":[{"startOffset":25830,"endOffset":26624,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":26685,"endOffset":27437,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":27476,"endOffset":27841,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":27844,"endOffset":28030,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28069,"endOffset":28150,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28202,"endOffset":28327,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":28369,"endOffset":28424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8261,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2298,"endOffset":2545,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2758,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnBody","ranges":[{"startOffset":4294,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4613,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"parsersCb","ranges":[{"startOffset":5149,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"closeParserInstance","ranges":[{"startOffset":5441,"endOffset":5497,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5820,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6657,"endOffset":6748,"count":0}],"isBlockCoverage":false},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7010,"endOffset":7111,"count":0}],"isBlockCoverage":false},{"functionName":"cleanParser","ranges":[{"startOffset":7113,"endOffset":7495,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":7497,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7720,"endOffset":7905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":76,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":198,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"free","ranges":[{"startOffset":321,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14903,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1648,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":1753,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1882,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3075,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3124,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3260,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3566,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3713,"endOffset":4050,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4059,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4207,"endOffset":4510,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4519,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4668,"endOffset":5011,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5020,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5120,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5737,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":6357,"endOffset":7153,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7217,"endOffset":7676,"count":0}],"isBlockCoverage":false},{"functionName":"matchKnownFields","ranges":[{"startOffset":8398,"endOffset":12292,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLine","ranges":[{"startOffset":12903,"endOffset":13951,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14028,"endOffset":14221,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14344,"endOffset":14585,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":14588,"endOffset":14835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34157,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2763,"endOffset":2788,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3097,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"isCookieField","ranges":[{"startOffset":3348,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3450,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3578,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5300,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5426,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5560,"endOffset":5702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5802,"endOffset":5831,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5927,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6118,"endOffset":6212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6308,"endOffset":6419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6537,"endOffset":6583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6679,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7325,"endOffset":7365,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7374,"endOffset":7416,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7538,"endOffset":7994,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8094,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8663,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9203,"endOffset":9298,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9336,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9494,"endOffset":9788,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10031,"endOffset":10343,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10453,"endOffset":11404,"count":0}],"isBlockCoverage":false},{"functionName":"_writeRaw","ranges":[{"startOffset":11456,"endOffset":12306,"count":0}],"isBlockCoverage":false},{"functionName":"_storeHeader","ranges":[{"startOffset":12364,"endOffset":16976,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":16978,"endOffset":17921,"count":0}],"isBlockCoverage":false},{"functionName":"storeHeader","ranges":[{"startOffset":17923,"endOffset":18122,"count":0}],"isBlockCoverage":false},{"functionName":"matchHeader","ranges":[{"startOffset":18124,"endOffset":19048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19093,"endOffset":19255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19303,"endOffset":19573,"count":0}],"isBlockCoverage":false},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":19577,"endOffset":19847,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":19887,"endOffset":20247,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":20289,"endOffset":20713,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":20757,"endOffset":21493,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":21535,"endOffset":21757,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":21870,"endOffset":21973,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":22093,"endOffset":22494,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":22596,"endOffset":23005,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":23047,"endOffset":23205,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":23250,"endOffset":23815,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":23863,"endOffset":23954,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24090,"endOffset":24127,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24227,"endOffset":24263,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24367,"endOffset":24449,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":24528,"endOffset":24781,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24784,"endOffset":25145,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":25147,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":25298,"endOffset":25532,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":25534,"endOffset":27740,"count":0}],"isBlockCoverage":false},{"functionName":"connectionCorkNT","ranges":[{"startOffset":27743,"endOffset":27795,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":27837,"endOffset":29272,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":29275,"endOffset":29395,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":29429,"endOffset":31391,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":31565,"endOffset":31636,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":32430,"endOffset":32860,"count":0}],"isBlockCoverage":false},{"functionName":"_flushOutput","ranges":[{"startOffset":32904,"endOffset":33547,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":33592,"endOffset":33723,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":33759,"endOffset":33901,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":33959,"endOffset":34004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":349,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":418,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":577,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":651,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":712,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"traceBegin","ranges":[{"startOffset":839,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":929,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9747,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":713,"endOffset":1122,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":793,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":835,"endOffset":952,"count":18}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":956,"endOffset":1004,"count":18},{"startOffset":992,"endOffset":997,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1008,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1066,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1124,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1331,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1701,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1753,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2163,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2337,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2618,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2790,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":2993,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3040,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3345,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3706,"endOffset":3847,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3858,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4047,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4136,"endOffset":4173,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4177,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4274,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4315,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":4363,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4379,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4506,"endOffset":4772,"count":18},{"startOffset":4584,"endOffset":4599,"count":0},{"startOffset":4632,"endOffset":4659,"count":0},{"startOffset":4661,"endOffset":4741,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":4774,"endOffset":4864,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4866,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":4962,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5186,"endOffset":5328,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5355,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6506,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6662,"endOffset":6895,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":6899,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7329,"endOffset":8430,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8434,"endOffset":9545,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9549,"endOffset":9637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38107,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2770,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7104,"endOffset":7183,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":7187,"endOffset":8106,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":8273,"endOffset":8962,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9062,"endOffset":10052,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10094,"endOffset":10349,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":10392,"endOffset":10574,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":10618,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":10782,"endOffset":10880,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":10926,"endOffset":11436,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11482,"endOffset":11547,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":11598,"endOffset":14195,"count":0}],"isBlockCoverage":false},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14306,"endOffset":16915,"count":0}],"isBlockCoverage":false},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":16917,"endOffset":17388,"count":0}],"isBlockCoverage":false},{"functionName":"httpServerPreClose","ranges":[{"startOffset":17390,"endOffset":17517,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":17519,"endOffset":18754,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":18885,"endOffset":18988,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":19030,"endOffset":19236,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":19279,"endOffset":19603,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":19636,"endOffset":19765,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":19814,"endOffset":20382,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":20385,"endOffset":20730,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":20732,"endOffset":20877,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":20879,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"socketSetEncoding","ranges":[{"startOffset":24303,"endOffset":24375,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":24377,"endOffset":24493,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":24495,"endOffset":24949,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":24951,"endOffset":25324,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":25326,"endOffset":25475,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":25477,"endOffset":25660,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":25662,"endOffset":26184,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":26186,"endOffset":26415,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":26417,"endOffset":26591,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":26593,"endOffset":27092,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":27094,"endOffset":27239,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":27254,"endOffset":27262,"count":0}],"isBlockCoverage":false},{"functionName":"warnUnclosedSocket","ranges":[{"startOffset":27815,"endOffset":28128,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":28130,"endOffset":29236,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":29238,"endOffset":30859,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":30861,"endOffset":31199,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":31201,"endOffset":32525,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":32527,"endOffset":32660,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":32826,"endOffset":36216,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":36218,"endOffset":36398,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":36400,"endOffset":36922,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":36924,"endOffset":37065,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":37067,"endOffset":37319,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":37321,"endOffset":37875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/whatwg-url/lib/public-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true}]},{"scriptId":"705","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/whatwg-url/lib/URL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4212,"count":1}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":176,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":853,"endOffset":1127,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1178,"endOffset":1217,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1221,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"URL.toString","ranges":[{"startOffset":1368,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1551,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1693,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1740,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1919,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1966,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2145,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2192,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2367,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2410,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2585,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2632,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2807,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2850,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3025,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3072,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3249,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3294,"endOffset":3370,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3467,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3510,"endOffset":3584,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":3654,"endOffset":3729,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3733,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":3890,"endOffset":4121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/webidl-conversions/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5056,"count":1}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":68,"endOffset":115,"count":0}],"isBlockCoverage":false},{"functionName":"evenRound","ranges":[{"startOffset":117,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"createNumberConversion","ranges":[{"startOffset":408,"endOffset":2019,"count":8},{"startOffset":491,"endOffset":519,"count":4},{"startOffset":561,"endOffset":564,"count":4},{"startOffset":565,"endOffset":590,"count":4},{"startOffset":691,"endOffset":730,"count":2},{"startOffset":731,"endOffset":755,"count":6},{"startOffset":806,"endOffset":849,"count":2},{"startOffset":850,"endOffset":878,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":892,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.void","ranges":[{"startOffset":2043,"endOffset":2080,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.boolean","ranges":[{"startOffset":2108,"endOffset":2144,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.double","ranges":[{"startOffset":2819,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.unrestricted double","ranges":[{"startOffset":3024,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.DOMString","ranges":[{"startOffset":3340,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.ByteString","ranges":[{"startOffset":3521,"endOffset":3781,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.USVString","ranges":[{"startOffset":3811,"endOffset":4709,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.Date","ranges":[{"startOffset":4734,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"conversions.RegExp","ranges":[{"startOffset":4950,"endOffset":5054,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/whatwg-url/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":562,"count":1}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":38,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.wrapperForImpl","ranges":[{"startOffset":393,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.implForWrapper","ranges":[{"startOffset":492,"endOffset":559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/whatwg-url/lib/URL-impl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3804,"count":1}],"isBlockCoverage":true},{"functionName":"URLImpl","ranges":[{"startOffset":102,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":625,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"set href","ranges":[{"startOffset":685,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":861,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":929,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":988,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":1096,"endOffset":1147,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":1151,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":1293,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":1348,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":1490,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":1748,"endOffset":1893,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":1897,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"set hostname","ranges":[{"startOffset":2026,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":2183,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":2311,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":2550,"endOffset":2753,"count":0}],"isBlockCoverage":false},{"functionName":"set pathname","ranges":[{"startOffset":2757,"endOffset":2937,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":2941,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":3083,"endOffset":3357,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":3361,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":3510,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3764,"endOffset":3800,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/whatwg-url/lib/url-state-machine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33573,"count":1}],"isBlockCoverage":true},{"functionName":"countSymbols","ranges":[{"startOffset":250,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":329,"endOffset":440,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIDigit","ranges":[{"startOffset":444,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIAlpha","ranges":[{"startOffset":511,"endOffset":604,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIAlphanumeric","ranges":[{"startOffset":608,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIHex","ranges":[{"startOffset":694,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleDot","ranges":[{"startOffset":808,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"isDoubleDot","ranges":[{"startOffset":905,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"isWindowsDriveLetterCodePoints","ranges":[{"startOffset":1068,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"isWindowsDriveLetterString","ranges":[{"startOffset":1186,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"isNormalizedWindowsDriveLetterString","ranges":[{"startOffset":1352,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"containsForbiddenHostCodePoint","ranges":[{"startOffset":1505,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"containsForbiddenHostCodePointExcludingPercent","ranges":[{"startOffset":1654,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialScheme","ranges":[{"startOffset":1817,"endOffset":1902,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecial","ranges":[{"startOffset":1906,"endOffset":1973,"count":0}],"isBlockCoverage":false},{"functionName":"defaultPort","ranges":[{"startOffset":1977,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"percentEncode","ranges":[{"startOffset":2048,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"utf8PercentEncode","ranges":[{"startOffset":2202,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"utf8PercentDecode","ranges":[{"startOffset":2390,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"isC0ControlPercentEncode","ranges":[{"startOffset":2863,"endOffset":2937,"count":0}],"isBlockCoverage":false},{"functionName":"isPathPercentEncode","ranges":[{"startOffset":3025,"endOffset":3136,"count":0}],"isBlockCoverage":false},{"functionName":"isUserinfoPercentEncode","ranges":[{"startOffset":3234,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"percentEncodeChar","ranges":[{"startOffset":3352,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"parseIPv4Number","ranges":[{"startOffset":3545,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"parseIPv4","ranges":[{"startOffset":4068,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"serializeIPv4","ranges":[{"startOffset":4905,"endOffset":5169,"count":0}],"isBlockCoverage":false},{"functionName":"parseIPv6","ranges":[{"startOffset":5173,"endOffset":8032,"count":0}],"isBlockCoverage":false},{"functionName":"serializeIPv6","ranges":[{"startOffset":8036,"endOffset":8698,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":8702,"endOffset":9428,"count":0}],"isBlockCoverage":false},{"functionName":"parseOpaqueHost","ranges":[{"startOffset":9432,"endOffset":9769,"count":0}],"isBlockCoverage":false},{"functionName":"findLongestZeroSequence","ranges":[{"startOffset":9773,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"serializeHost","ranges":[{"startOffset":10414,"endOffset":10644,"count":0}],"isBlockCoverage":false},{"functionName":"trimControlChars","ranges":[{"startOffset":10648,"endOffset":10762,"count":0}],"isBlockCoverage":false},{"functionName":"trimTabAndNewline","ranges":[{"startOffset":10766,"endOffset":10854,"count":0}],"isBlockCoverage":false},{"functionName":"shortenPath","ranges":[{"startOffset":10858,"endOffset":11091,"count":0}],"isBlockCoverage":false},{"functionName":"includesCredentials","ranges":[{"startOffset":11095,"endOffset":11187,"count":0}],"isBlockCoverage":false},{"functionName":"cannotHaveAUsernamePasswordPort","ranges":[{"startOffset":11191,"endOffset":11338,"count":0}],"isBlockCoverage":false},{"functionName":"isNormalizedWindowsDriveLetter","ranges":[{"startOffset":11342,"endOffset":11432,"count":0}],"isBlockCoverage":false},{"functionName":"URLStateMachine","ranges":[{"startOffset":11436,"endOffset":12887,"count":0}],"isBlockCoverage":false},{"functionName":"parseSchemeStart","ranges":[{"startOffset":12941,"endOffset":13248,"count":0}],"isBlockCoverage":false},{"functionName":"parseScheme","ranges":[{"startOffset":13297,"endOffset":14982,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoScheme","ranges":[{"startOffset":15034,"endOffset":15615,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpecialRelativeOrAuthority","ranges":[{"startOffset":15687,"endOffset":15983,"count":0}],"isBlockCoverage":false},{"functionName":"parsePathOrAuthority","ranges":[{"startOffset":16043,"endOffset":16212,"count":0}],"isBlockCoverage":false},{"functionName":"parseRelative","ranges":[{"startOffset":16263,"endOffset":17717,"count":0}],"isBlockCoverage":false},{"functionName":"parseRelativeSlash","ranges":[{"startOffset":17774,"endOffset":18281,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpecialAuthoritySlashes","ranges":[{"startOffset":18349,"endOffset":18666,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpecialAuthorityIgnoreSlashes","ranges":[{"startOffset":18741,"endOffset":18939,"count":0}],"isBlockCoverage":false},{"functionName":"parseAuthority","ranges":[{"startOffset":18991,"endOffset":20241,"count":0}],"isBlockCoverage":false},{"functionName":"parseHostName","ranges":[{"startOffset":20335,"endOffset":21772,"count":0}],"isBlockCoverage":false},{"functionName":"parsePort","ranges":[{"startOffset":21819,"endOffset":22539,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile","ranges":[{"startOffset":22648,"endOffset":24114,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileSlash","ranges":[{"startOffset":24167,"endOffset":24654,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileHost","ranges":[{"startOffset":24706,"endOffset":25559,"count":0}],"isBlockCoverage":false},{"functionName":"parsePathStart","ranges":[{"startOffset":25612,"endOffset":26166,"count":0}],"isBlockCoverage":false},{"functionName":"parsePath","ranges":[{"startOffset":26213,"endOffset":27931,"count":0}],"isBlockCoverage":false},{"functionName":"parseCannotBeABaseURLPath","ranges":[{"startOffset":27999,"endOffset":28641,"count":0}],"isBlockCoverage":false},{"functionName":"parseQuery","ranges":[{"startOffset":28689,"endOffset":29758,"count":0}],"isBlockCoverage":false},{"functionName":"parseFragment","ranges":[{"startOffset":29809,"endOffset":30275,"count":0}],"isBlockCoverage":false},{"functionName":"serializeURL","ranges":[{"startOffset":30280,"endOffset":31146,"count":0}],"isBlockCoverage":false},{"functionName":"serializeOrigin","ranges":[{"startOffset":31150,"endOffset":31354,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.serializeURLOrigin","ranges":[{"startOffset":31441,"endOffset":32203,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.basicURLParse","ranges":[{"startOffset":32239,"endOffset":32520,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.setTheUsername","ranges":[{"startOffset":32557,"endOffset":32787,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.setThePassword","ranges":[{"startOffset":32824,"endOffset":33054,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.serializeInteger","ranges":[{"startOffset":33227,"endOffset":33277,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.parseURL","ranges":[{"startOffset":33308,"endOffset":33570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"node:punycode","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12971,"count":1}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1390,"endOffset":1451,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1729,"endOffset":1893,"count":0}],"isBlockCoverage":false},{"functionName":"mapDomain","ranges":[{"startOffset":2238,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"ucs2decode","ranges":[{"startOffset":3307,"endOffset":4031,"count":0}],"isBlockCoverage":false},{"functionName":"ucs2encode","ranges":[{"startOffset":4312,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"basicToDigit","ranges":[{"startOffset":4738,"endOffset":5010,"count":0}],"isBlockCoverage":false},{"functionName":"digitToBasic","ranges":[{"startOffset":5532,"endOffset":5684,"count":0}],"isBlockCoverage":false},{"functionName":"adapt","ranges":[{"startOffset":5832,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":6428,"endOffset":8553,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":8845,"endOffset":11024,"count":0}],"isBlockCoverage":false},{"functionName":"toUnicode","ranges":[{"startOffset":11499,"endOffset":11659,"count":0}],"isBlockCoverage":false},{"functionName":"toASCII","ranges":[{"startOffset":12135,"endOffset":12281,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/tr46/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7567,"count":1}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":178,"endOffset":316,"count":0}],"isBlockCoverage":false},{"functionName":"findStatus","ranges":[{"startOffset":318,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"countSymbols","ranges":[{"startOffset":766,"endOffset":947,"count":0}],"isBlockCoverage":false},{"functionName":"mapChars","ranges":[{"startOffset":949,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"validateLabel","ranges":[{"startOffset":5100,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"processing","ranges":[{"startOffset":5995,"endOffset":6530,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.toASCII","ranges":[{"startOffset":6557,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.toUnicode","ranges":[{"startOffset":7321,"endOffset":7508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10288,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1847,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":1942,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3282,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":3668,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":3781,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5226,"endOffset":5617,"count":1},{"startOffset":5288,"endOffset":5314,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":5988,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":7745,"endOffset":7812,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":7847,"endOffset":8420,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":8455,"endOffset":8685,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":8825,"endOffset":9354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10090,"endOffset":10196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11612,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3466,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3559,"endOffset":3653,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3776,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"convertProtocols","ranges":[{"startOffset":4037,"endOffset":4649,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4682,"endOffset":5206,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5209,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5399,"endOffset":5493,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5495,"endOffset":5639,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5641,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8001,"endOffset":9237,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9269,"endOffset":11167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5145,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1791,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2164,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3003,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3712,"endOffset":5053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9249,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":727,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":979,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1213,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1379,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1541,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1823,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2067,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":2900,"endOffset":9202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15174,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1590,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1653,"endOffset":1712,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1887,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2100,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2177,"endOffset":2219,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2253,"endOffset":2295,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2299,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2753,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":6661,"endOffset":6874,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7100,"endOffset":9535,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":9537,"endOffset":9676,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":9678,"endOffset":9829,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":9831,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":9984,"endOffset":10123,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10125,"endOffset":10467,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":10469,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10710,"endOffset":10979,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":10983,"endOffset":11215,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":11217,"endOffset":11487,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12023,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":12305,"endOffset":12541,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":12543,"endOffset":12708,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":12710,"endOffset":12922,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":12924,"endOffset":13105,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":13244,"endOffset":14210,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":14212,"endOffset":14595,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2520,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1890,"endOffset":2133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53526,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2051,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4277,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5062,"endOffset":5355,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5358,"endOffset":6563,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6566,"endOffset":7219,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7222,"endOffset":8258,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8260,"endOffset":9582,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9584,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":9781,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10019,"endOffset":10855,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":10857,"endOffset":11507,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11509,"endOffset":12216,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12218,"endOffset":12309,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12311,"endOffset":12427,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12429,"endOffset":13557,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":13701,"endOffset":14248,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14326,"endOffset":17438,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":17881,"endOffset":18056,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":17923,"endOffset":18053,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18223,"endOffset":18916,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":18962,"endOffset":19035,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":19220,"endOffset":20299,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":20345,"endOffset":20921,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":21060,"endOffset":21303,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":21305,"endOffset":21452,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":21454,"endOffset":21505,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":21541,"endOffset":21833,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":21836,"endOffset":22147,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":22149,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":22591,"endOffset":27388,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":27425,"endOffset":28672,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":28718,"endOffset":29040,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":29084,"endOffset":29206,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":29246,"endOffset":29315,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":29354,"endOffset":29440,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":29475,"endOffset":29583,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":29624,"endOffset":29780,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":29817,"endOffset":30876,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":30908,"endOffset":31407,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":31446,"endOffset":31614,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":31650,"endOffset":31788,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":31832,"endOffset":31996,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":32036,"endOffset":32242,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":32290,"endOffset":32430,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":32474,"endOffset":32602,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":32639,"endOffset":32837,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":32687,"endOffset":32834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33055,"endOffset":33133,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":33175,"endOffset":33670,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":33672,"endOffset":33908,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":33910,"endOffset":33997,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":33999,"endOffset":34352,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":34354,"endOffset":35240,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":38006,"endOffset":39753,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":39907,"endOffset":39991,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":40031,"endOffset":42934,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":42972,"endOffset":43056,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":43094,"endOffset":43171,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":43208,"endOffset":43288,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":43325,"endOffset":43521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43565,"endOffset":45631,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":45754,"endOffset":46205,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":46254,"endOffset":46509,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":46512,"endOffset":46828,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":47061,"endOffset":47789,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":47791,"endOffset":50094,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":50096,"endOffset":50645,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":50711,"endOffset":53524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8879,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3092,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3336,"endOffset":3418,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3420,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3522,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3626,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3732,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3840,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3998,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4082,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4140,"endOffset":4222,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4224,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4308,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5437,"endOffset":5522,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5524,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5691,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5860,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6118,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6356,"endOffset":7189,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6454,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6950,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8252,"endOffset":8292,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8404,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8577,"endOffset":8598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16342,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1282,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1650,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2113,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2658,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3328,"endOffset":4374,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4924,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7166,"endOffset":8042,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8045,"endOffset":8207,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8439,"endOffset":9129,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9494,"endOffset":9793,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9795,"endOffset":10521,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10523,"endOffset":10826,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10828,"endOffset":11066,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11068,"endOffset":11388,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11390,"endOffset":12623,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12625,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13083,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13615,"endOffset":13659,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13734,"endOffset":14161,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14163,"endOffset":14460,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14462,"endOffset":15355,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15357,"endOffset":16155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3295,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":494,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1306,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1822,"endOffset":2293,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2336,"endOffset":3227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"722","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3608,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":648,"endOffset":1460,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1462,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1979,"endOffset":3560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3304,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1274,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1704,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2172,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2549,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21401,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2331,"endOffset":6452,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2441,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2989,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3049,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3196,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3698,"endOffset":3756,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3762,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3848,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4329,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4707,"endOffset":4767,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4773,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4931,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5372,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5436,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5792,"endOffset":5851,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5857,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6456,"endOffset":6841,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6843,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7697,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7820,"endOffset":8520,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8522,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8661,"endOffset":10019,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10218,"endOffset":10354,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10554,"endOffset":10670,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10672,"endOffset":11250,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11252,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11759,"endOffset":14308,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14310,"endOffset":15853,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15855,"endOffset":15943,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15945,"endOffset":16040,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16042,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16742,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16948,"endOffset":17285,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17287,"endOffset":17628,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17630,"endOffset":17712,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18135,"endOffset":18195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18199,"endOffset":18548,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18552,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18691,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18834,"endOffset":18969,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18973,"endOffset":19116,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19694,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20177,"endOffset":20529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20533,"endOffset":20737,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20866,"endOffset":20950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10888,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1240,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1312,"endOffset":1466,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1468,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2250,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2369,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2749,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4001,"endOffset":9408,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9439,"endOffset":9976,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9978,"endOffset":10180,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10182,"endOffset":10652,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10654,"endOffset":10788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10617,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1254,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3185,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3622,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3898,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4356,"endOffset":4512,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4623,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4906,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5180,"endOffset":5342,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5384,"endOffset":5573,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5617,"endOffset":5808,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5812,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6277,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6432,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6651,"endOffset":7001,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7004,"endOffset":7139,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7141,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7538,"endOffset":8606,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8725,"endOffset":10511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"727","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10414,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1255,"endOffset":2003,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1323,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2504,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2872,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3108,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3529,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3766,"endOffset":4105,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4348,"endOffset":4549,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4692,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4837,"endOffset":4975,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5004,"endOffset":5654,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5683,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6024,"endOffset":6171,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6204,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6368,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6608,"endOffset":6950,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7198,"endOffset":7408,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7410,"endOffset":8001,"count":3},{"startOffset":7806,"endOffset":7879,"count":1},{"startOffset":7879,"endOffset":7941,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8402,"endOffset":8610,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9015,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9394,"endOffset":10255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":469,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":663,"endOffset":971,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":973,"endOffset":1192,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7113,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":892,"endOffset":1151,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1274,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1393,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1757,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1834,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1917,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2271,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2540,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3206,"endOffset":4424,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4426,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4921,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5561,"endOffset":7039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4634,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":976,"endOffset":1496,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1627,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1826,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1958,"endOffset":2038,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2065,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2605,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2953,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3534,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4108,"endOffset":4579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1155,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1240,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2487,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2651,"endOffset":9663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8209,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":335,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":741,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":806,"endOffset":871,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":873,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":938,"endOffset":1009,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1011,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1848,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3716,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3769,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3835,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3896,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3955,"endOffset":5202,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5270,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5566,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6915,"endOffset":7358,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7362,"endOffset":8172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1991,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":398,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":491,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":620,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":828,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":950,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1183,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1800,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1906,"endOffset":1989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30086,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3530,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4159,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4492,"endOffset":4577,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4579,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4911,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5454,"endOffset":5768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5993,"endOffset":6329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6633,"endOffset":6924,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7161,"endOffset":9213,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9438,"endOffset":9475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9918,"endOffset":9964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10111,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10304,"endOffset":10412,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":10558,"endOffset":10630,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":10697,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11331,"endOffset":11406,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":11847,"endOffset":12249,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12279,"endOffset":12361,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12394,"endOffset":12454,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12489,"endOffset":13023,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13061,"endOffset":13290,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13293,"endOffset":15578,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":15580,"endOffset":16170,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16172,"endOffset":19026,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":19028,"endOffset":19218,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":19415,"endOffset":21733,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":22083,"endOffset":22349,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":22375,"endOffset":22842,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":22886,"endOffset":23021,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":23117,"endOffset":23252,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":23348,"endOffset":23471,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23561,"endOffset":23692,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23786,"endOffset":23991,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":24093,"endOffset":24240,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":24342,"endOffset":24469,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24561,"endOffset":24950,"count":18},{"startOffset":24620,"endOffset":24949,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24633,"endOffset":24734,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24749,"endOffset":24947,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25035,"endOffset":25122,"count":107},{"startOffset":25093,"endOffset":25113,"count":9},{"startOffset":25114,"endOffset":25121,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":25341,"endOffset":26678,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":26772,"endOffset":26936,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":27050,"endOffset":27220,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":27339,"endOffset":27525,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":27460,"endOffset":27517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27754,"endOffset":27790,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27794,"endOffset":27835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/agentkeepalive/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"737","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/agentkeepalive/lib/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15296,"count":1},{"startOffset":667,"endOffset":705,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":775,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":904,"endOffset":3513,"count":2},{"startOffset":949,"endOffset":954,"count":0},{"startOffset":1362,"endOffset":1573,"count":0},{"startOffset":1704,"endOffset":1945,"count":0},{"startOffset":2125,"endOffset":2262,"count":0},{"startOffset":2455,"endOffset":2484,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3147,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"get freeSocketKeepAliveTimeout","ranges":[{"startOffset":3517,"endOffset":3715,"count":0}],"isBlockCoverage":false},{"functionName":"get timeout","ranges":[{"startOffset":3719,"endOffset":3859,"count":0}],"isBlockCoverage":false},{"functionName":"get socketActiveTTL","ranges":[{"startOffset":3863,"endOffset":4035,"count":0}],"isBlockCoverage":false},{"functionName":"calcSocketTimeout","ranges":[{"startOffset":4039,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":5135,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":5836,"endOffset":6506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6510,"endOffset":6655,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6659,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":7676,"endOffset":8144,"count":0}],"isBlockCoverage":false},{"functionName":"get statusChanged","ranges":[{"startOffset":8148,"endOffset":9018,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentStatus","ranges":[{"startOffset":9022,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketTimeout","ranges":[{"startOffset":9627,"endOffset":9712,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":9714,"endOffset":15148,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":15175,"endOffset":15295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/humanize-ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":221,"endOffset":440,"count":4},{"startOffset":274,"endOffset":439,"count":0}],"isBlockCoverage":true}]},{"scriptId":"739","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/agentkeepalive/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":559,"count":1}],"isBlockCoverage":true}]},{"scriptId":"741","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/agentkeepalive/lib/https_agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"HttpsAgent","ranges":[{"startOffset":222,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"createConnection","ranges":[{"startOffset":579,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1037,"endOffset":1231,"count":4}],"isBlockCoverage":true}]},{"scriptId":"742","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/abort-controller/dist/abort-controller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3610,"count":1}],"isBlockCoverage":true},{"functionName":"AbortSignal","ranges":[{"startOffset":459,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":703,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":1095,"endOffset":1286,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":1320,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"AbortController","ranges":[{"startOffset":2143,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":2302,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":2463,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"getSignal","ranges":[{"startOffset":2641,"endOffset":2913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/event-target-shim/dist/event-target-shim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23692,"count":1},{"startOffset":7539,"endOffset":7577,"count":0},{"startOffset":7579,"endOffset":7738,"count":0},{"startOffset":23233,"endOffset":23281,"count":0},{"startOffset":23284,"endOffset":23367,"count":0}],"isBlockCoverage":true},{"functionName":"pd","ranges":[{"startOffset":1340,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"setCancelFlag","ranges":[{"startOffset":1644,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2476,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3359,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":3495,"endOffset":3551,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":3634,"endOffset":3699,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":3787,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"get NONE","ranges":[{"startOffset":4033,"endOffset":4068,"count":0}],"isBlockCoverage":false},{"functionName":"get CAPTURING_PHASE","ranges":[{"startOffset":4149,"endOffset":4195,"count":0}],"isBlockCoverage":false},{"functionName":"get AT_TARGET","ranges":[{"startOffset":4270,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"get BUBBLING_PHASE","ranges":[{"startOffset":4390,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":4513,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":4646,"endOffset":4848,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4922,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":5267,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelable","ranges":[{"startOffset":5415,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":5561,"endOffset":5618,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5712,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":5853,"endOffset":5923,"count":0}],"isBlockCoverage":false},{"functionName":"get timeStamp","ranges":[{"startOffset":6004,"endOffset":6061,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":6163,"endOffset":6223,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6328,"endOffset":6386,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":6392,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6762,"endOffset":6821,"count":0}],"isBlockCoverage":false},{"functionName":"set returnValue","ranges":[{"startOffset":6827,"endOffset":6926,"count":0}],"isBlockCoverage":false},{"functionName":"initEvent","ranges":[{"startOffset":7245,"endOffset":7287,"count":0}],"isBlockCoverage":false},{"functionName":"defineRedirectDescriptor","ranges":[{"startOffset":7972,"endOffset":8226,"count":0}],"isBlockCoverage":false},{"functionName":"defineCallDescriptor","ranges":[{"startOffset":8466,"endOffset":8702,"count":0}],"isBlockCoverage":false},{"functionName":"defineWrapper","ranges":[{"startOffset":8920,"endOffset":9903,"count":0}],"isBlockCoverage":false},{"functionName":"getWrapper","ranges":[{"startOffset":10095,"endOffset":10419,"count":0}],"isBlockCoverage":false},{"functionName":"wrapEvent","ranges":[{"startOffset":10652,"endOffset":10799,"count":0}],"isBlockCoverage":false},{"functionName":"isStopped","ranges":[{"startOffset":10978,"endOffset":11045,"count":0}],"isBlockCoverage":false},{"functionName":"setEventPhase","ranges":[{"startOffset":11239,"endOffset":11323,"count":0}],"isBlockCoverage":false},{"functionName":"setCurrentTarget","ranges":[{"startOffset":11528,"endOffset":11624,"count":0}],"isBlockCoverage":false},{"functionName":"setPassiveListener","ranges":[{"startOffset":11830,"endOffset":11934,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":12497,"endOffset":12611,"count":0}],"isBlockCoverage":false},{"functionName":"getListeners","ranges":[{"startOffset":12767,"endOffset":13032,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventAttributeDescriptor","ranges":[{"startOffset":13257,"endOffset":15168,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13331,"endOffset":13668,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":13679,"endOffset":15105,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventAttribute","ranges":[{"startOffset":15407,"endOffset":15613,"count":1}],"isBlockCoverage":true},{"functionName":"defineCustomEventTarget","ranges":[{"startOffset":15805,"endOffset":16330,"count":0}],"isBlockCoverage":false},{"functionName":"EventTarget","ranges":[{"startOffset":16722,"endOffset":17354,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":17764,"endOffset":19192,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":19525,"endOffset":20473,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":20639,"endOffset":22952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":210,"endOffset":527,"count":1},{"startOffset":323,"endOffset":524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":536,"endOffset":212177,"count":1},{"startOffset":12029,"endOffset":12105,"count":0},{"startOffset":12289,"endOffset":12365,"count":0},{"startOffset":27330,"endOffset":27429,"count":0},{"startOffset":30386,"endOffset":30482,"count":0},{"startOffset":30515,"endOffset":30534,"count":0},{"startOffset":127556,"endOffset":127575,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":576,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"typeIsObject","ranges":[{"startOffset":631,"endOffset":744,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionName","ranges":[{"startOffset":798,"endOffset":1249,"count":33},{"startOffset":995,"endOffset":1243,"count":0}],"isBlockCoverage":true},{"functionName":"newPromise","ranges":[{"startOffset":1473,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"promiseResolvedWith","ranges":[{"startOffset":1624,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectedWith","ranges":[{"startOffset":1789,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"PerformPromiseThen","ranges":[{"startOffset":1884,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"uponPromise","ranges":[{"startOffset":2509,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"uponFulfillment","ranges":[{"startOffset":2701,"endOffset":2798,"count":0}],"isBlockCoverage":false},{"functionName":"uponRejection","ranges":[{"startOffset":2803,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"transformPromiseWith","ranges":[{"startOffset":2912,"endOffset":3078,"count":0}],"isBlockCoverage":false},{"functionName":"setPromiseIsHandledToTrue","ranges":[{"startOffset":3083,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"_queueMicrotask","ranges":[{"startOffset":3241,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"reflectCall","ranges":[{"startOffset":3586,"endOffset":3796,"count":0}],"isBlockCoverage":false},{"functionName":"promiseCall","ranges":[{"startOffset":3801,"endOffset":4011,"count":0}],"isBlockCoverage":false},{"functionName":"SimpleQueue","ranges":[{"startOffset":4474,"endOffset":5124,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":5133,"endOffset":5188,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":5378,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":6115,"endOffset":6922,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":7547,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":8242,"endOffset":8424,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamReaderGenericInitialize","ranges":[{"startOffset":8686,"endOffset":9186,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamReaderGenericCancel","ranges":[{"startOffset":9330,"endOffset":9501,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamReaderGenericRelease","ranges":[{"startOffset":9506,"endOffset":10154,"count":0}],"isBlockCoverage":false},{"functionName":"readerLockException","ranges":[{"startOffset":10200,"endOffset":10328,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseInitialize","ranges":[{"startOffset":10394,"endOffset":10637,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseInitializeAsRejected","ranges":[{"startOffset":10642,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseInitializeAsResolved","ranges":[{"startOffset":10838,"endOffset":11014,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseReject","ranges":[{"startOffset":11019,"endOffset":11377,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseResetToRejected","ranges":[{"startOffset":11382,"endOffset":11528,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderClosedPromiseResolve","ranges":[{"startOffset":11533,"endOffset":11831,"count":0}],"isBlockCoverage":false},{"functionName":"NumberIsFinite","ranges":[{"startOffset":12032,"endOffset":12105,"count":0}],"isBlockCoverage":false},{"functionName":"MathTrunc","ranges":[{"startOffset":12292,"endOffset":12365,"count":0}],"isBlockCoverage":false},{"functionName":"isDictionary","ranges":[{"startOffset":12429,"endOffset":12526,"count":0}],"isBlockCoverage":false},{"functionName":"assertDictionary","ranges":[{"startOffset":12531,"endOffset":12708,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":12776,"endOffset":12934,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":12990,"endOffset":13099,"count":0}],"isBlockCoverage":false},{"functionName":"assertObject","ranges":[{"startOffset":13104,"endOffset":13248,"count":0}],"isBlockCoverage":false},{"functionName":"assertRequiredArgument","ranges":[{"startOffset":13253,"endOffset":13442,"count":0}],"isBlockCoverage":false},{"functionName":"assertRequiredField","ranges":[{"startOffset":13447,"endOffset":13617,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnrestrictedDouble","ranges":[{"startOffset":13686,"endOffset":13765,"count":0}],"isBlockCoverage":false},{"functionName":"censorNegativeZero","ranges":[{"startOffset":13770,"endOffset":13840,"count":0}],"isBlockCoverage":false},{"functionName":"integerPart","ranges":[{"startOffset":13845,"endOffset":13925,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnsignedLongLongWithEnforceRange","ranges":[{"startOffset":13993,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"assertReadableStream","ranges":[{"startOffset":14811,"endOffset":14978,"count":0}],"isBlockCoverage":false},{"functionName":"AcquireReadableStreamDefaultReader","ranges":[{"startOffset":15035,"endOffset":15150,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamAddReadRequest","ranges":[{"startOffset":15206,"endOffset":15328,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFulfillReadRequest","ranges":[{"startOffset":15333,"endOffset":15638,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamGetNumReadRequests","ranges":[{"startOffset":15643,"endOffset":15752,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamHasDefaultReader","ranges":[{"startOffset":15757,"endOffset":16034,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReader","ranges":[{"startOffset":16181,"endOffset":16648,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":16883,"endOffset":17105,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":17249,"endOffset":17661,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":17936,"endOffset":18846,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":19530,"endOffset":19847,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamDefaultReader","ranges":[{"startOffset":20610,"endOffset":20893,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReaderRead","ranges":[{"startOffset":20898,"endOffset":21355,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReaderRelease","ranges":[{"startOffset":21360,"endOffset":21592,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":21597,"endOffset":21868,"count":0}],"isBlockCoverage":false},{"functionName":"defaultReaderBrandCheckException","ranges":[{"startOffset":21934,"endOffset":22118,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22310,"endOffset":22332,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamAsyncIteratorImpl","ranges":[{"startOffset":22448,"endOffset":22662,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":22671,"endOffset":22955,"count":0}],"isBlockCoverage":false},{"functionName":"return","ranges":[{"startOffset":22964,"endOffset":23213,"count":0}],"isBlockCoverage":false},{"functionName":"_nextSteps","ranges":[{"startOffset":23222,"endOffset":24738,"count":0}],"isBlockCoverage":false},{"functionName":"_returnSteps","ranges":[{"startOffset":24747,"endOffset":25367,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":25433,"endOffset":25664,"count":0}],"isBlockCoverage":false},{"functionName":"return","ranges":[{"startOffset":25674,"endOffset":25921,"count":0}],"isBlockCoverage":false},{"functionName":"AcquireReadableStreamAsyncIterator","ranges":[{"startOffset":26073,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamAsyncIterator","ranges":[{"startOffset":26447,"endOffset":26909,"count":0}],"isBlockCoverage":false},{"functionName":"streamAsyncIteratorBrandCheckException","ranges":[{"startOffset":26962,"endOffset":27141,"count":0}],"isBlockCoverage":false},{"functionName":"NumberIsNaN","ranges":[{"startOffset":27333,"endOffset":27429,"count":0}],"isBlockCoverage":false},{"functionName":"CreateArrayFromList","ranges":[{"startOffset":27456,"endOffset":27692,"count":0}],"isBlockCoverage":false},{"functionName":"CopyDataBlockBytes","ranges":[{"startOffset":27697,"endOffset":27850,"count":0}],"isBlockCoverage":false},{"functionName":"TransferArrayBuffer","ranges":[{"startOffset":27881,"endOffset":28334,"count":0}],"isBlockCoverage":false},{"functionName":"IsDetachedBuffer","ranges":[{"startOffset":28363,"endOffset":28660,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferSlice","ranges":[{"startOffset":28666,"endOffset":29109,"count":0}],"isBlockCoverage":false},{"functionName":"GetMethod","ranges":[{"startOffset":29114,"endOffset":29427,"count":0}],"isBlockCoverage":false},{"functionName":"CreateAsyncFromSyncIterator","ranges":[{"startOffset":29432,"endOffset":30225,"count":0}],"isBlockCoverage":false},{"functionName":"GetIterator","ranges":[{"startOffset":30540,"endOffset":31527,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorNext","ranges":[{"startOffset":31532,"endOffset":31824,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorComplete","ranges":[{"startOffset":31829,"endOffset":31915,"count":0}],"isBlockCoverage":false},{"functionName":"IteratorValue","ranges":[{"startOffset":31920,"endOffset":31995,"count":0}],"isBlockCoverage":false},{"functionName":"IsNonNegativeNumber","ranges":[{"startOffset":32001,"endOffset":32257,"count":0}],"isBlockCoverage":false},{"functionName":"CloneAsUint8Array","ranges":[{"startOffset":32262,"endOffset":32432,"count":0}],"isBlockCoverage":false},{"functionName":"DequeueValue","ranges":[{"startOffset":32438,"endOffset":32698,"count":0}],"isBlockCoverage":false},{"functionName":"EnqueueValueWithSize","ranges":[{"startOffset":32703,"endOffset":33018,"count":0}],"isBlockCoverage":false},{"functionName":"PeekQueueValue","ranges":[{"startOffset":33023,"endOffset":33138,"count":0}],"isBlockCoverage":false},{"functionName":"ResetQueue","ranges":[{"startOffset":33143,"endOffset":33266,"count":0}],"isBlockCoverage":false},{"functionName":"isDataViewConstructor","ranges":[{"startOffset":33272,"endOffset":33350,"count":0}],"isBlockCoverage":false},{"functionName":"isDataView","ranges":[{"startOffset":33355,"endOffset":33444,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewElementSize","ranges":[{"startOffset":33449,"endOffset":33612,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBRequest","ranges":[{"startOffset":33768,"endOffset":33849,"count":0}],"isBlockCoverage":false},{"functionName":"get view","ranges":[{"startOffset":33990,"endOffset":34173,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":34182,"endOffset":34982,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithNewView","ranges":[{"startOffset":34991,"endOffset":35847,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamController","ranges":[{"startOffset":36653,"endOffset":36734,"count":0}],"isBlockCoverage":false},{"functionName":"get byobRequest","ranges":[{"startOffset":36847,"endOffset":37094,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":37374,"endOffset":37621,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":37856,"endOffset":38468,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":38477,"endOffset":39554,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":39707,"endOffset":39938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39972,"endOffset":40252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40286,"endOffset":41601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41635,"endOffset":41970,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableByteStreamController","ranges":[{"startOffset":42796,"endOffset":43097,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamBYOBRequest","ranges":[{"startOffset":43102,"endOffset":43407,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":43412,"endOffset":44267,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":44272,"endOffset":44479,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":44484,"endOffset":45028,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":45033,"endOffset":45383,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":45388,"endOffset":45614,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":45619,"endOffset":46096,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":46101,"endOffset":46492,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":46497,"endOffset":48372,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":48377,"endOffset":48534,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":48539,"endOffset":48939,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":48944,"endOffset":49271,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":49276,"endOffset":49938,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":49943,"endOffset":50405,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerPullInto","ranges":[{"startOffset":50410,"endOffset":52882,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":52887,"endOffset":53532,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":53537,"endOffset":55048,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerRespondInternal","ranges":[{"startOffset":55053,"endOffset":55683,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":55688,"endOffset":55857,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerShouldCallPull","ranges":[{"startOffset":55862,"endOffset":56675,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":56680,"endOffset":56848,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerClose","ranges":[{"startOffset":56957,"endOffset":57854,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerEnqueue","ranges":[{"startOffset":57859,"endOffset":60380,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerError","ranges":[{"startOffset":60385,"endOffset":60797,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":60802,"endOffset":61193,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerGetBYOBRequest","ranges":[{"startOffset":61198,"endOffset":61874,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":61879,"endOffset":62226,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerRespond","ranges":[{"startOffset":62231,"endOffset":63176,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":63181,"endOffset":64605,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpReadableByteStreamController","ranges":[{"startOffset":64610,"endOffset":65931,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpReadableByteStreamControllerFromUnderlyingSource","ranges":[{"startOffset":65936,"endOffset":67260,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpReadableStreamBYOBRequest","ranges":[{"startOffset":67265,"endOffset":67439,"count":0}],"isBlockCoverage":false},{"functionName":"byobRequestBrandCheckException","ranges":[{"startOffset":67503,"endOffset":67681,"count":0}],"isBlockCoverage":false},{"functionName":"byteStreamControllerBrandCheckException","ranges":[{"startOffset":67748,"endOffset":67941,"count":0}],"isBlockCoverage":false},{"functionName":"convertReaderOptions","ranges":[{"startOffset":67947,"endOffset":68285,"count":0}],"isBlockCoverage":false},{"functionName":"convertReadableStreamReaderMode","ranges":[{"startOffset":68290,"endOffset":68560,"count":0}],"isBlockCoverage":false},{"functionName":"convertByobReadOptions","ranges":[{"startOffset":68565,"endOffset":68933,"count":0}],"isBlockCoverage":false},{"functionName":"AcquireReadableStreamBYOBReader","ranges":[{"startOffset":68990,"endOffset":69099,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamAddReadIntoRequest","ranges":[{"startOffset":69155,"endOffset":69293,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFulfillReadIntoRequest","ranges":[{"startOffset":69298,"endOffset":69628,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamGetNumReadIntoRequests","ranges":[{"startOffset":69633,"endOffset":69750,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamHasBYOBReader","ranges":[{"startOffset":69755,"endOffset":70026,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBReader","ranges":[{"startOffset":70167,"endOffset":70891,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":71126,"endOffset":71342,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":71486,"endOffset":71892,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":71901,"endOffset":74284,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":74965,"endOffset":75273,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamBYOBReader","ranges":[{"startOffset":76018,"endOffset":76299,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBReaderRead","ranges":[{"startOffset":76304,"endOffset":76723,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBReaderRelease","ranges":[{"startOffset":76728,"endOffset":76958,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":76963,"endOffset":77259,"count":0}],"isBlockCoverage":false},{"functionName":"byobReaderBrandCheckException","ranges":[{"startOffset":77322,"endOffset":77497,"count":0}],"isBlockCoverage":false},{"functionName":"ExtractHighWaterMark","ranges":[{"startOffset":77503,"endOffset":77852,"count":0}],"isBlockCoverage":false},{"functionName":"ExtractSizeAlgorithm","ranges":[{"startOffset":77857,"endOffset":78019,"count":0}],"isBlockCoverage":false},{"functionName":"convertQueuingStrategy","ranges":[{"startOffset":78025,"endOffset":78550,"count":0}],"isBlockCoverage":false},{"functionName":"convertQueuingStrategySize","ranges":[{"startOffset":78555,"endOffset":78710,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSink","ranges":[{"startOffset":78716,"endOffset":80015,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSinkAbortCallback","ranges":[{"startOffset":80020,"endOffset":80195,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSinkCloseCallback","ranges":[{"startOffset":80200,"endOffset":80363,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSinkStartCallback","ranges":[{"startOffset":80368,"endOffset":80551,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSinkWriteCallback","ranges":[{"startOffset":80556,"endOffset":80753,"count":0}],"isBlockCoverage":false},{"functionName":"assertWritableStream","ranges":[{"startOffset":80759,"endOffset":80926,"count":0}],"isBlockCoverage":false},{"functionName":"isAbortSignal","ranges":[{"startOffset":80932,"endOffset":81277,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortController","ranges":[{"startOffset":81467,"endOffset":81624,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStream","ranges":[{"startOffset":81785,"endOffset":82704,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":82814,"endOffset":83005,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":83642,"endOffset":84044,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":84676,"endOffset":85228,"count":0}],"isBlockCoverage":false},{"functionName":"getWriter","ranges":[{"startOffset":85837,"endOffset":86042,"count":0}],"isBlockCoverage":false},{"functionName":"AcquireWritableStreamDefaultWriter","ranges":[{"startOffset":86728,"endOffset":86843,"count":0}],"isBlockCoverage":false},{"functionName":"CreateWritableStream","ranges":[{"startOffset":86900,"endOffset":87419,"count":0}],"isBlockCoverage":false},{"functionName":"InitializeWritableStream","ranges":[{"startOffset":87424,"endOffset":89237,"count":0}],"isBlockCoverage":false},{"functionName":"IsWritableStream","ranges":[{"startOffset":89242,"endOffset":89511,"count":0}],"isBlockCoverage":false},{"functionName":"IsWritableStreamLocked","ranges":[{"startOffset":89516,"endOffset":89664,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamAbort","ranges":[{"startOffset":89669,"endOffset":91331,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamClose","ranges":[{"startOffset":91336,"endOffset":92150,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamAddWriteRequest","ranges":[{"startOffset":92206,"endOffset":92525,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDealWithRejection","ranges":[{"startOffset":92530,"endOffset":92798,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamStartErroring","ranges":[{"startOffset":92803,"endOffset":93314,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamFinishErroring","ranges":[{"startOffset":93319,"endOffset":94576,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamFinishInFlightWrite","ranges":[{"startOffset":94581,"endOffset":94747,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":94752,"endOffset":94985,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamFinishInFlightClose","ranges":[{"startOffset":94990,"endOffset":95718,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":95723,"endOffset":96190,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":96239,"endOffset":96452,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":96457,"endOffset":96683,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":96688,"endOffset":96854,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":96859,"endOffset":96997,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":97002,"endOffset":97405,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamUpdateBackpressure","ranges":[{"startOffset":97410,"endOffset":97845,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriter","ranges":[{"startOffset":97992,"endOffset":99527,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":99762,"endOffset":99984,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":100534,"endOffset":100910,"count":0}],"isBlockCoverage":false},{"functionName":"get ready","ranges":[{"startOffset":101457,"endOffset":101676,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":101818,"endOffset":102233,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":102369,"endOffset":102971,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":103767,"endOffset":104119,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":104128,"endOffset":104544,"count":0}],"isBlockCoverage":false},{"functionName":"IsWritableStreamDefaultWriter","ranges":[{"startOffset":105519,"endOffset":105809,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterAbort","ranges":[{"startOffset":105917,"endOffset":106086,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterClose","ranges":[{"startOffset":106091,"endOffset":106244,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":106249,"endOffset":106720,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":106725,"endOffset":107033,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":107038,"endOffset":107342,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":107347,"endOffset":107758,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterRelease","ranges":[{"startOffset":107763,"endOffset":108471,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriterWrite","ranges":[{"startOffset":108476,"endOffset":109506,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultController","ranges":[{"startOffset":109723,"endOffset":109804,"count":0}],"isBlockCoverage":false},{"functionName":"get abortReason","ranges":[{"startOffset":110172,"endOffset":110390,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":110542,"endOffset":111275,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":111755,"endOffset":112308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112342,"endOffset":112524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112558,"endOffset":112614,"count":0}],"isBlockCoverage":false},{"functionName":"IsWritableStreamDefaultController","ranges":[{"startOffset":113153,"endOffset":113456,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpWritableStreamDefaultController","ranges":[{"startOffset":113461,"endOffset":114980,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpWritableStreamDefaultControllerFromUnderlyingSink","ranges":[{"startOffset":114985,"endOffset":116330,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":116459,"endOffset":116733,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerClose","ranges":[{"startOffset":116738,"endOffset":116936,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":116941,"endOffset":117248,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":117253,"endOffset":117396,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerWrite","ranges":[{"startOffset":117401,"endOffset":118106,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":118179,"endOffset":118972,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":118977,"endOffset":119210,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerProcessClose","ranges":[{"startOffset":119215,"endOffset":119827,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":119832,"endOffset":120924,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":120929,"endOffset":121124,"count":0}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultControllerError","ranges":[{"startOffset":121236,"endOffset":121489,"count":0}],"isBlockCoverage":false},{"functionName":"streamBrandCheckException$2","ranges":[{"startOffset":121542,"endOffset":121695,"count":0}],"isBlockCoverage":false},{"functionName":"defaultControllerBrandCheckException$2","ranges":[{"startOffset":121765,"endOffset":121963,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterBrandCheckException","ranges":[{"startOffset":122029,"endOffset":122213,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterLockException","ranges":[{"startOffset":122218,"endOffset":122353,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseInitialize","ranges":[{"startOffset":122358,"endOffset":122653,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseInitializeAsRejected","ranges":[{"startOffset":122658,"endOffset":122849,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseInitializeAsResolved","ranges":[{"startOffset":122854,"endOffset":123030,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseReject","ranges":[{"startOffset":123035,"endOffset":123442,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseResetToRejected","ranges":[{"startOffset":123447,"endOffset":123593,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterClosedPromiseResolve","ranges":[{"startOffset":123598,"endOffset":123945,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseInitialize","ranges":[{"startOffset":123950,"endOffset":124236,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseInitializeAsRejected","ranges":[{"startOffset":124241,"endOffset":124429,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseInitializeAsResolved","ranges":[{"startOffset":124434,"endOffset":124607,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseReject","ranges":[{"startOffset":124612,"endOffset":125012,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseReset","ranges":[{"startOffset":125017,"endOffset":125125,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseResetToRejected","ranges":[{"startOffset":125130,"endOffset":125274,"count":0}],"isBlockCoverage":false},{"functionName":"defaultWriterReadyPromiseResolve","ranges":[{"startOffset":125279,"endOffset":125621,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobals","ranges":[{"startOffset":125659,"endOffset":125974,"count":1},{"startOffset":125772,"endOffset":125973,"count":0}],"isBlockCoverage":true},{"functionName":"isDOMExceptionConstructor","ranges":[{"startOffset":126049,"endOffset":126416,"count":1},{"startOffset":126133,"endOffset":126160,"count":0},{"startOffset":126163,"endOffset":126200,"count":0},{"startOffset":126243,"endOffset":126280,"count":0},{"startOffset":126362,"endOffset":126410,"count":0}],"isBlockCoverage":true},{"functionName":"getFromGlobal","ranges":[{"startOffset":126584,"endOffset":126776,"count":1},{"startOffset":126671,"endOffset":126679,"count":0},{"startOffset":126758,"endOffset":126769,"count":0}],"isBlockCoverage":true},{"functionName":"createPolyfill","ranges":[{"startOffset":126836,"endOffset":127450,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamPipeTo","ranges":[{"startOffset":127582,"endOffset":135615,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultController","ranges":[{"startOffset":135803,"endOffset":135884,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":136159,"endOffset":136411,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":136646,"endOffset":137043,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":137052,"endOffset":137488,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":137641,"endOffset":137877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":137911,"endOffset":138125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":138159,"endOffset":138908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":138942,"endOffset":138997,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamDefaultController","ranges":[{"startOffset":139801,"endOffset":140104,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":140109,"endOffset":140934,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":140939,"endOffset":141563,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":141568,"endOffset":141794,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerClose","ranges":[{"startOffset":141906,"endOffset":142351,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerEnqueue","ranges":[{"startOffset":142356,"endOffset":143405,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerError","ranges":[{"startOffset":143410,"endOffset":143753,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":143758,"endOffset":144104,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":144171,"endOffset":144376,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":144381,"endOffset":144649,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpReadableStreamDefaultController","ranges":[{"startOffset":144654,"endOffset":145771,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpReadableStreamDefaultControllerFromUnderlyingSource","ranges":[{"startOffset":145776,"endOffset":146872,"count":0}],"isBlockCoverage":false},{"functionName":"defaultControllerBrandCheckException$1","ranges":[{"startOffset":146942,"endOffset":147140,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamTee","ranges":[{"startOffset":147146,"endOffset":147394,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultTee","ranges":[{"startOffset":147399,"endOffset":151890,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableByteStreamTee","ranges":[{"startOffset":151895,"endOffset":162796,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":162802,"endOffset":162927,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":162933,"endOffset":163153,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFromIterable","ranges":[{"startOffset":163158,"endOffset":165481,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFromDefaultReader","ranges":[{"startOffset":165486,"endOffset":166801,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingDefaultOrByteSource","ranges":[{"startOffset":166807,"endOffset":168350,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSourceCancelCallback","ranges":[{"startOffset":168355,"endOffset":168533,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSourcePullCallback","ranges":[{"startOffset":168538,"endOffset":168722,"count":0}],"isBlockCoverage":false},{"functionName":"convertUnderlyingSourceStartCallback","ranges":[{"startOffset":168727,"endOffset":168912,"count":0}],"isBlockCoverage":false},{"functionName":"convertReadableStreamType","ranges":[{"startOffset":168917,"endOffset":169176,"count":0}],"isBlockCoverage":false},{"functionName":"convertIteratorOptions","ranges":[{"startOffset":169182,"endOffset":169444,"count":0}],"isBlockCoverage":false},{"functionName":"convertPipeOptions","ranges":[{"startOffset":169450,"endOffset":170261,"count":0}],"isBlockCoverage":false},{"functionName":"assertAbortSignal","ranges":[{"startOffset":170266,"endOffset":170435,"count":0}],"isBlockCoverage":false},{"functionName":"convertReadableWritablePair","ranges":[{"startOffset":170441,"endOffset":171060,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStream","ranges":[{"startOffset":171214,"endOffset":172467,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":172607,"endOffset":172798,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":173109,"endOffset":173515,"count":0}],"isBlockCoverage":false},{"functionName":"getReader","ranges":[{"startOffset":173524,"endOffset":173954,"count":0}],"isBlockCoverage":false},{"functionName":"pipeThrough","ranges":[{"startOffset":173963,"endOffset":175002,"count":0}],"isBlockCoverage":false},{"functionName":"pipeTo","ranges":[{"startOffset":175011,"endOffset":176308,"count":0}],"isBlockCoverage":false},{"functionName":"tee","ranges":[{"startOffset":176968,"endOffset":177204,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":177213,"endOffset":177540,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":177549,"endOffset":177685,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":177991,"endOffset":178076,"count":0}],"isBlockCoverage":false},{"functionName":"CreateReadableStream","ranges":[{"startOffset":179453,"endOffset":179940,"count":0}],"isBlockCoverage":false},{"functionName":"CreateReadableByteStream","ranges":[{"startOffset":179997,"endOffset":180422,"count":0}],"isBlockCoverage":false},{"functionName":"InitializeReadableStream","ranges":[{"startOffset":180427,"endOffset":180624,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStream","ranges":[{"startOffset":180629,"endOffset":180898,"count":0}],"isBlockCoverage":false},{"functionName":"IsReadableStreamLocked","ranges":[{"startOffset":180903,"endOffset":181051,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamCancel","ranges":[{"startOffset":181107,"endOffset":181977,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamClose","ranges":[{"startOffset":181982,"endOffset":182497,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamError","ranges":[{"startOffset":182502,"endOffset":183002,"count":0}],"isBlockCoverage":false},{"functionName":"streamBrandCheckException$1","ranges":[{"startOffset":183055,"endOffset":183208,"count":0}],"isBlockCoverage":false},{"functionName":"convertQueuingStrategyInit","ranges":[{"startOffset":183214,"endOffset":183587,"count":0}],"isBlockCoverage":false},{"functionName":"byteLengthSizeFunction","ranges":[{"startOffset":183705,"endOffset":183756,"count":0}],"isBlockCoverage":false},{"functionName":"ByteLengthQueuingStrategy","ranges":[{"startOffset":183968,"endOffset":184237,"count":0}],"isBlockCoverage":false},{"functionName":"get highWaterMark","ranges":[{"startOffset":184338,"endOffset":184572,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":184698,"endOffset":184892,"count":0}],"isBlockCoverage":false},{"functionName":"byteLengthBrandCheckException","ranges":[{"startOffset":185353,"endOffset":185530,"count":0}],"isBlockCoverage":false},{"functionName":"IsByteLengthQueuingStrategy","ranges":[{"startOffset":185535,"endOffset":185840,"count":0}],"isBlockCoverage":false},{"functionName":"countSizeFunction","ranges":[{"startOffset":185953,"endOffset":185984,"count":0}],"isBlockCoverage":false},{"functionName":"CountQueuingStrategy","ranges":[{"startOffset":186173,"endOffset":186432,"count":0}],"isBlockCoverage":false},{"functionName":"get highWaterMark","ranges":[{"startOffset":186533,"endOffset":186752,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":186947,"endOffset":187126,"count":0}],"isBlockCoverage":false},{"functionName":"countBrandCheckException","ranges":[{"startOffset":187567,"endOffset":187729,"count":0}],"isBlockCoverage":false},{"functionName":"IsCountQueuingStrategy","ranges":[{"startOffset":187734,"endOffset":188024,"count":0}],"isBlockCoverage":false},{"functionName":"convertTransformer","ranges":[{"startOffset":188030,"endOffset":189503,"count":0}],"isBlockCoverage":false},{"functionName":"convertTransformerFlushCallback","ranges":[{"startOffset":189508,"endOffset":189688,"count":0}],"isBlockCoverage":false},{"functionName":"convertTransformerStartCallback","ranges":[{"startOffset":189693,"endOffset":189873,"count":0}],"isBlockCoverage":false},{"functionName":"convertTransformerTransformCallback","ranges":[{"startOffset":189878,"endOffset":190076,"count":0}],"isBlockCoverage":false},{"functionName":"convertTransformerCancelCallback","ranges":[{"startOffset":190081,"endOffset":190254,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStream","ranges":[{"startOffset":190747,"endOffset":192488,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":192575,"endOffset":192755,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":192842,"endOffset":193022,"count":0}],"isBlockCoverage":false},{"functionName":"InitializeTransformStream","ranges":[{"startOffset":193393,"endOffset":194940,"count":0}],"isBlockCoverage":false},{"functionName":"IsTransformStream","ranges":[{"startOffset":194945,"endOffset":195217,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamError","ranges":[{"startOffset":195280,"endOffset":195485,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamErrorWritableAndUnblockWrite","ranges":[{"startOffset":195490,"endOffset":195799,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamUnblockWrite","ranges":[{"startOffset":195804,"endOffset":196255,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamSetBackpressure","ranges":[{"startOffset":196260,"endOffset":196705,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultController","ranges":[{"startOffset":196965,"endOffset":197046,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":197206,"endOffset":197579,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":197588,"endOffset":197838,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":198107,"endOffset":198353,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":198610,"endOffset":198842,"count":0}],"isBlockCoverage":false},{"functionName":"IsTransformStreamDefaultController","ranges":[{"startOffset":199659,"endOffset":199965,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpTransformStreamDefaultController","ranges":[{"startOffset":199970,"endOffset":200534,"count":0}],"isBlockCoverage":false},{"functionName":"SetUpTransformStreamDefaultControllerFromTransformer","ranges":[{"startOffset":200539,"endOffset":201893,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":201898,"endOffset":202123,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultControllerEnqueue","ranges":[{"startOffset":202128,"endOffset":203235,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultControllerError","ranges":[{"startOffset":203240,"endOffset":203381,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultControllerPerformTransform","ranges":[{"startOffset":203386,"endOffset":203723,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultControllerTerminate","ranges":[{"startOffset":203728,"endOffset":204140,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultSinkWriteAlgorithm","ranges":[{"startOffset":204190,"endOffset":204927,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultSinkAbortAlgorithm","ranges":[{"startOffset":204932,"endOffset":206489,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultSinkCloseAlgorithm","ranges":[{"startOffset":206494,"endOffset":208024,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultSourcePullAlgorithm","ranges":[{"startOffset":208076,"endOffset":208395,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStreamDefaultSourceCancelAlgorithm","ranges":[{"startOffset":208400,"endOffset":210141,"count":0}],"isBlockCoverage":false},{"functionName":"defaultControllerBrandCheckException","ranges":[{"startOffset":210212,"endOffset":210410,"count":0}],"isBlockCoverage":false},{"functionName":"defaultControllerFinishPromiseResolve","ranges":[{"startOffset":210415,"endOffset":210728,"count":0}],"isBlockCoverage":false},{"functionName":"defaultControllerFinishPromiseReject","ranges":[{"startOffset":210733,"endOffset":211119,"count":0}],"isBlockCoverage":false},{"functionName":"streamBrandCheckException","ranges":[{"startOffset":211173,"endOffset":211326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":false}]},{"scriptId":"746","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4831,"count":1}],"isBlockCoverage":false},{"functionName":"InternalPerformanceResourceTiming","ranges":[{"startOffset":735,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1274,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1326,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1391,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1483,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1545,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1630,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1707,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":1780,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":1858,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":1970,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2078,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2183,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2284,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":2411,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":2529,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":2616,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":2705,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":2770,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":2847,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":2924,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3107,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":4052,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":4183,"endOffset":4756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4934,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":983,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1496,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2097,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":2224,"endOffset":2325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2329,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":2397,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":2555,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":4140,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":4575,"endOffset":4830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3516,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":729,"endOffset":2742,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1394,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1606,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1820,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2035,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2248,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2469,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2746,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2991,"endOffset":3377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":186,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15478,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3683,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3769,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3909,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4024,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4628,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4862,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5103,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5470,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5579,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5946,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6403,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6848,"endOffset":6887,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":6960,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7214,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7482,"endOffset":8109,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8116,"endOffset":9479,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9529,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9882,"endOffset":10188,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10239,"endOffset":10388,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10392,"endOffset":10768,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10772,"endOffset":10952,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11203,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11207,"endOffset":11477,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11479,"endOffset":11659,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":11661,"endOffset":11756,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11758,"endOffset":11844,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11931,"endOffset":12445,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12449,"endOffset":12862,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12898,"endOffset":13027,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13064,"endOffset":13462,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13530,"endOffset":13940,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14223,"endOffset":14390,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14675,"endOffset":14846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5348,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1086,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1150,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1449,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1609,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1760,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":1891,"endOffset":2028,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2030,"endOffset":2096,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2098,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2287,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4615,"endOffset":4810,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4816,"endOffset":4950,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":5113,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":876,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":121,"endOffset":835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":608,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":987,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8273,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":913,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1009,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1073,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1536,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1714,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1904,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2078,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2264,"endOffset":2387,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2438,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2624,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2800,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":2982,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3176,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3376,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3796,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4220,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4472,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4710,"endOffset":4826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4830,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4991,"endOffset":5051,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5055,"endOffset":5312,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5364,"endOffset":5424,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5493,"endOffset":5964,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6001,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6208,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6485,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6656,"endOffset":6716,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6720,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":6952,"endOffset":6960,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":6963,"endOffset":7202,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7257,"endOffset":7265,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7409,"endOffset":8096,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1724,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":625,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":726,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":977,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1283,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"node:internal/deps/undici/undici","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576379,"count":1}],"isBlockCoverage":false},{"functionName":"__name","ranges":[{"startOffset":118,"endOffset":193,"count":256}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":212,"endOffset":351,"count":56}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":225,"endOffset":351,"count":167},{"startOffset":261,"endOffset":335,"count":55}],"isBlockCoverage":true},{"functionName":"lib/core/symbols.js","ranges":[{"startOffset":414,"endOffset":3135,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/symbols.js","ranges":[{"startOffset":3203,"endOffset":3486,"count":1}],"isBlockCoverage":true},{"functionName":"lib/core/errors.js","ranges":[{"startOffset":3550,"endOffset":13057,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3660,"endOffset":3713,"count":1}],"isBlockCoverage":true},{"functionName":"UndiciError","ranges":[{"startOffset":3720,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3933,"endOffset":3994,"count":1}],"isBlockCoverage":true},{"functionName":"_ConnectTimeoutError","ranges":[{"startOffset":4001,"endOffset":4265,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4358,"endOffset":4419,"count":1}],"isBlockCoverage":true},{"functionName":"_HeadersTimeoutError","ranges":[{"startOffset":4426,"endOffset":4690,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4785,"endOffset":4847,"count":1}],"isBlockCoverage":true},{"functionName":"_HeadersOverflowError","ranges":[{"startOffset":4854,"endOffset":5122,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5209,"endOffset":5267,"count":1}],"isBlockCoverage":true},{"functionName":"_BodyTimeoutError","ranges":[{"startOffset":5274,"endOffset":5526,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5627,"endOffset":5692,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseStatusCodeError","ranges":[{"startOffset":5699,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6233,"endOffset":6295,"count":1}],"isBlockCoverage":true},{"functionName":"_InvalidArgumentError","ranges":[{"startOffset":6302,"endOffset":6565,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6666,"endOffset":6731,"count":1}],"isBlockCoverage":true},{"functionName":"_InvalidReturnValueError","ranges":[{"startOffset":6738,"endOffset":7020,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7113,"endOffset":7174,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestAbortedError","ranges":[{"startOffset":7181,"endOffset":7422,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7513,"endOffset":7573,"count":1}],"isBlockCoverage":true},{"functionName":"_InformationalError","ranges":[{"startOffset":7580,"endOffset":7829,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7950,"endOffset":8025,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestContentLengthMismatchError","ranges":[{"startOffset":8032,"endOffset":8371,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":8494,"endOffset":8570,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseContentLengthMismatchError","ranges":[{"startOffset":8577,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":9014,"endOffset":9076,"count":1}],"isBlockCoverage":true},{"functionName":"_ClientDestroyedError","ranges":[{"startOffset":9083,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":9434,"endOffset":9493,"count":1}],"isBlockCoverage":true},{"functionName":"_ClientClosedError","ranges":[{"startOffset":9500,"endOffset":9750,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":9827,"endOffset":9880,"count":1}],"isBlockCoverage":true},{"functionName":"_SocketError","ranges":[{"startOffset":9887,"endOffset":10155,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":10244,"endOffset":10303,"count":1}],"isBlockCoverage":true},{"functionName":"_NotSupportedError","ranges":[{"startOffset":10310,"endOffset":10566,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":10651,"endOffset":10725,"count":1}],"isBlockCoverage":true},{"functionName":"BalancedPoolMissingUpstreamError","ranges":[{"startOffset":10732,"endOffset":11024,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":11103,"endOffset":11160,"count":1}],"isBlockCoverage":true},{"functionName":"_HTTPParserError","ranges":[{"startOffset":11167,"endOffset":11433,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":11544,"endOffset":11614,"count":1}],"isBlockCoverage":true},{"functionName":"_ResponseExceededMaxSizeError","ranges":[{"startOffset":11621,"endOffset":11922,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":12011,"endOffset":12070,"count":1}],"isBlockCoverage":true},{"functionName":"_RequestRetryError","ranges":[{"startOffset":12077,"endOffset":12444,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/constants.js","ranges":[{"startOffset":13127,"endOffset":16018,"count":1},{"startOffset":15665,"endOffset":15861,"count":95}],"isBlockCoverage":true},{"functionName":"lib/core/util.js","ranges":[{"startOffset":16078,"endOffset":31735,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16654,"endOffset":16670,"count":3}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":16677,"endOffset":16699,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":16728,"endOffset":16869,"count":0}],"isBlockCoverage":false},{"functionName":"isBlobLike","ranges":[{"startOffset":16908,"endOffset":17167,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":17210,"endOffset":17544,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":17583,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"parseOrigin","ranges":[{"startOffset":19823,"endOffset":20024,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":20069,"endOffset":20366,"count":0}],"isBlockCoverage":false},{"functionName":"getServerName","ranges":[{"startOffset":20411,"endOffset":20674,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":20723,"endOffset":20800,"count":1}],"isBlockCoverage":true},{"functionName":"isAsyncIterable","ranges":[{"startOffset":20841,"endOffset":20959,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":21012,"endOffset":21173,"count":0}],"isBlockCoverage":false},{"functionName":"bodyLength","ranges":[{"startOffset":21216,"endOffset":21686,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":21729,"endOffset":21837,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableAborted","ranges":[{"startOffset":21882,"endOffset":22045,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":22102,"endOffset":22668,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeepAliveTimeout","ranges":[{"startOffset":22755,"endOffset":22910,"count":0}],"isBlockCoverage":false},{"functionName":"headerNameToString","ranges":[{"startOffset":22975,"endOffset":23088,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":23147,"endOffset":23997,"count":0}],"isBlockCoverage":false},{"functionName":"parseRawHeaders","ranges":[{"startOffset":24044,"endOffset":24933,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":24986,"endOffset":25089,"count":0}],"isBlockCoverage":false},{"functionName":"validateHandler","ranges":[{"startOffset":25128,"endOffset":26338,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":26391,"endOffset":26645,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":26690,"endOffset":26858,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":26899,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketInfo","ranges":[{"startOffset":27114,"endOffset":27495,"count":0}],"isBlockCoverage":false},{"functionName":"convertIterableToBuffer","ranges":[{"startOffset":27544,"endOffset":27720,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":27813,"endOffset":28779,"count":0}],"isBlockCoverage":false},{"functionName":"isFormDataLike","ranges":[{"startOffset":28838,"endOffset":29198,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":29249,"endOffset":29604,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortListener","ranges":[{"startOffset":29655,"endOffset":29998,"count":0}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":30112,"endOffset":30328,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeHeader","ranges":[{"startOffset":30373,"endOffset":30733,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/constants.js","ranges":[{"startOffset":31807,"endOffset":36358,"count":1},{"startOffset":34964,"endOffset":35100,"count":0},{"startOffset":35172,"endOffset":35801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34968,"endOffset":35097,"count":0}],"isBlockCoverage":true},{"functionName":"structuredClone2","ranges":[{"startOffset":35385,"endOffset":35781,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/global.js","ranges":[{"startOffset":36423,"endOffset":37484,"count":1}],"isBlockCoverage":true},{"functionName":"getGlobalOrigin","ranges":[{"startOffset":36548,"endOffset":36621,"count":0}],"isBlockCoverage":false},{"functionName":"setGlobalOrigin","ranges":[{"startOffset":36674,"endOffset":37356,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/util.js","ranges":[{"startOffset":37546,"endOffset":59798,"count":1},{"startOffset":38249,"endOffset":38262,"count":0},{"startOffset":58539,"endOffset":58606,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38193,"endOffset":38240,"count":52}],"isBlockCoverage":true},{"functionName":"responseURL","ranges":[{"startOffset":38267,"endOffset":38449,"count":0}],"isBlockCoverage":false},{"functionName":"responseLocationURL","ranges":[{"startOffset":38494,"endOffset":38942,"count":0}],"isBlockCoverage":false},{"functionName":"requestCurrentURL","ranges":[{"startOffset":39003,"endOffset":39104,"count":0}],"isBlockCoverage":false},{"functionName":"requestBadPort","ranges":[{"startOffset":39161,"endOffset":39373,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorLike","ranges":[{"startOffset":39424,"endOffset":39589,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReasonPhrase","ranges":[{"startOffset":39634,"endOffset":39950,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenCharCode","ranges":[{"startOffset":40011,"endOffset":40443,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHTTPToken","ranges":[{"startOffset":40496,"endOffset":40779,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderName","ranges":[{"startOffset":40834,"endOffset":40931,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":40988,"endOffset":41369,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestReferrerPolicyOnRedirect","ranges":[{"startOffset":41428,"endOffset":42004,"count":0}],"isBlockCoverage":false},{"functionName":"crossOriginResourcePolicyCheck","ranges":[{"startOffset":42095,"endOffset":42168,"count":0}],"isBlockCoverage":false},{"functionName":"corsCheck","ranges":[{"startOffset":42251,"endOffset":42303,"count":0}],"isBlockCoverage":false},{"functionName":"TAOCheck","ranges":[{"startOffset":42344,"endOffset":42395,"count":0}],"isBlockCoverage":false},{"functionName":"appendFetchMetadata","ranges":[{"startOffset":42434,"endOffset":42602,"count":0}],"isBlockCoverage":false},{"functionName":"appendRequestOriginHeader","ranges":[{"startOffset":42663,"endOffset":43785,"count":0}],"isBlockCoverage":false},{"functionName":"coarsenedSharedCurrentTime","ranges":[{"startOffset":43858,"endOffset":43965,"count":0}],"isBlockCoverage":false},{"functionName":"createOpaqueTimingInfo","ranges":[{"startOffset":44040,"endOffset":44516,"count":0}],"isBlockCoverage":false},{"functionName":"makePolicyContainer","ranges":[{"startOffset":44583,"endOffset":44703,"count":0}],"isBlockCoverage":false},{"functionName":"clonePolicyContainer","ranges":[{"startOffset":44764,"endOffset":44897,"count":0}],"isBlockCoverage":false},{"functionName":"determineRequestsReferrer","ranges":[{"startOffset":44960,"endOffset":46853,"count":0}],"isBlockCoverage":false},{"functionName":"stripURLForReferrer","ranges":[{"startOffset":46926,"endOffset":47320,"count":0}],"isBlockCoverage":false},{"functionName":"isURLPotentiallyTrustworthy","ranges":[{"startOffset":47381,"endOffset":48432,"count":0}],"isBlockCoverage":false},{"functionName":"bytesMatch","ranges":[{"startOffset":48509,"endOffset":49553,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetadata","ranges":[{"startOffset":49728,"endOffset":50352,"count":0}],"isBlockCoverage":false},{"functionName":"getStrongestMetadata","ranges":[{"startOffset":50401,"endOffset":50933,"count":0}],"isBlockCoverage":false},{"functionName":"filterMetadataListByAlgorithm","ranges":[{"startOffset":50996,"endOffset":51393,"count":0}],"isBlockCoverage":false},{"functionName":"compareBase64Mixed","ranges":[{"startOffset":51474,"endOffset":51945,"count":0}],"isBlockCoverage":false},{"functionName":"tryUpgradeRequestToAPotentiallyTrustworthyURL","ranges":[{"startOffset":52004,"endOffset":52075,"count":0}],"isBlockCoverage":false},{"functionName":"sameOrigin","ranges":[{"startOffset":52188,"endOffset":52446,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":52489,"endOffset":52724,"count":0}],"isBlockCoverage":false},{"functionName":"isAborted","ranges":[{"startOffset":52789,"endOffset":52885,"count":0}],"isBlockCoverage":false},{"functionName":"isCancelled","ranges":[{"startOffset":52926,"endOffset":53073,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeMethod","ranges":[{"startOffset":53466,"endOffset":53574,"count":0}],"isBlockCoverage":false},{"functionName":"serializeJavascriptValueToJSONString","ranges":[{"startOffset":53627,"endOffset":53896,"count":0}],"isBlockCoverage":false},{"functionName":"makeIterator","ranges":[{"startOffset":54090,"endOffset":55161,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorResult","ranges":[{"startOffset":55208,"endOffset":55580,"count":0}],"isBlockCoverage":false},{"functionName":"fullyReadBody","ranges":[{"startOffset":55631,"endOffset":56070,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":56171,"endOffset":56450,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":56554,"endOffset":56795,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":56850,"endOffset":57068,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicEncode","ranges":[{"startOffset":57129,"endOffset":57288,"count":0}],"isBlockCoverage":false},{"functionName":"readAllBytes","ranges":[{"startOffset":57343,"endOffset":57779,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsLocal","ranges":[{"startOffset":57826,"endOffset":58012,"count":0}],"isBlockCoverage":false},{"functionName":"urlHasHttpsScheme","ranges":[{"startOffset":58055,"endOffset":58220,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsHttpHttpsScheme","ranges":[{"startOffset":58277,"endOffset":58449,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":58543,"endOffset":58605,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/webidl.js","ranges":[{"startOffset":59863,"endOffset":72029,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.errors.exception","ranges":[{"startOffset":60137,"endOffset":60231,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.conversionFailed","ranges":[{"startOffset":60270,"endOffset":60568,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.invalidArgument","ranges":[{"startOffset":60606,"endOffset":60781,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.brandCheck","ranges":[{"startOffset":60807,"endOffset":61051,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.argumentLengthCheck","ranges":[{"startOffset":61086,"endOffset":61343,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.illegalConstructor","ranges":[{"startOffset":61377,"endOffset":61511,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Type","ranges":[{"startOffset":61536,"endOffset":62051,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.ConvertToInt","ranges":[{"startOffset":62084,"endOffset":63949,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.IntegerPart","ranges":[{"startOffset":63981,"endOffset":64107,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.sequenceConverter","ranges":[{"startOffset":64140,"endOffset":64906,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64175,"endOffset":64899,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.recordConverter","ranges":[{"startOffset":64937,"endOffset":65931,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64991,"endOffset":65924,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.interfaceConverter","ranges":[{"startOffset":65965,"endOffset":66265,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65992,"endOffset":66258,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.dictionaryConverter","ranges":[{"startOffset":66300,"endOffset":67813,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66336,"endOffset":67806,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.nullableConverter","ranges":[{"startOffset":67846,"endOffset":67989,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67881,"endOffset":67982,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString","ranges":[{"startOffset":68025,"endOffset":68290,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ByteString","ranges":[{"startOffset":68327,"endOffset":68727,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.boolean","ranges":[{"startOffset":68808,"endOffset":68871,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.any","ranges":[{"startOffset":68901,"endOffset":68936,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.long long","ranges":[{"startOffset":68975,"endOffset":69069,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long long","ranges":[{"startOffset":69117,"endOffset":69213,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long","ranges":[{"startOffset":69256,"endOffset":69352,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned short","ranges":[{"startOffset":69396,"endOffset":69504,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ArrayBuffer","ranges":[{"startOffset":69542,"endOffset":70038,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.TypedArray","ranges":[{"startOffset":70075,"endOffset":70608,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DataView","ranges":[{"startOffset":70643,"endOffset":71123,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BufferSource","ranges":[{"startOffset":71162,"endOffset":71565,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/headers.js","ranges":[{"startOffset":72096,"endOffset":85551,"count":1}],"isBlockCoverage":true},{"functionName":"isHTTPWhiteSpaceCharCode","ranges":[{"startOffset":72594,"endOffset":72711,"count":0}],"isBlockCoverage":false},{"functionName":"headerValueNormalize","ranges":[{"startOffset":72782,"endOffset":73178,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":73241,"endOffset":74177,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":74208,"endOffset":74893,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":74958,"endOffset":77732,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":74985,"endOffset":75038,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":77775,"endOffset":77824,"count":1}],"isBlockCoverage":true},{"functionName":"_Headers","ranges":[{"startOffset":77831,"endOffset":78132,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":78198,"endOffset":78502,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":78568,"endOffset":79245,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":79308,"endOffset":79747,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":79810,"endOffset":80254,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":80317,"endOffset":81214,"count":0}],"isBlockCoverage":false},{"functionName":"getSetCookie","ranges":[{"startOffset":81286,"endOffset":81479,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":81563,"endOffset":82327,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":82334,"endOffset":82738,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":82745,"endOffset":83155,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":83162,"endOffset":83581,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":83723,"endOffset":84205,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":84212,"endOffset":84344,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.HeadersInit","ranges":[{"startOffset":84999,"endOffset":85470,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/streamsearch/sbmh.js","ranges":[{"startOffset":85649,"endOffset":90156,"count":1}],"isBlockCoverage":true},{"functionName":"SBMH","ranges":[{"startOffset":85859,"endOffset":86729,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH.reset","ranges":[{"startOffset":86817,"endOffset":86916,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH.push","ranges":[{"startOffset":86944,"endOffset":87263,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_feed","ranges":[{"startOffset":87297,"endOffset":89733,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_lookup_char","ranges":[{"startOffset":89774,"endOffset":89883,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH._sbmh_memcmp","ranges":[{"startOffset":89919,"endOffset":90123,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js","ranges":[{"startOffset":90263,"endOffset":90718,"count":1}],"isBlockCoverage":true},{"functionName":"PartStream","ranges":[{"startOffset":90474,"endOffset":90546,"count":0}],"isBlockCoverage":false},{"functionName":"PartStream._read","ranges":[{"startOffset":90660,"endOffset":90679,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/getLimit.js","ranges":[{"startOffset":90816,"endOffset":91311,"count":1}],"isBlockCoverage":true},{"functionName":"getLimit","ranges":[{"startOffset":90953,"endOffset":91293,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js","ranges":[{"startOffset":91422,"endOffset":94473,"count":1}],"isBlockCoverage":true},{"functionName":"HeaderParser","ranges":[{"startOffset":91837,"endOffset":92785,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser.push","ranges":[{"startOffset":92904,"endOffset":93015,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser.reset","ranges":[{"startOffset":93052,"endOffset":93170,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser._finish","ranges":[{"startOffset":93209,"endOffset":93540,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser._parseHeader","ranges":[{"startOffset":93584,"endOffset":94432,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js","ranges":[{"startOffset":94570,"endOffset":101965,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":95038,"endOffset":95056,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer","ranges":[{"startOffset":95075,"endOffset":96139,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.emit","ranges":[{"startOffset":96232,"endOffset":97190,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._write","ranges":[{"startOffset":97221,"endOffset":98060,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.reset","ranges":[{"startOffset":98090,"endOffset":98195,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer.setBoundary","ranges":[{"startOffset":98231,"endOffset":98471,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._ignore","ranges":[{"startOffset":98503,"endOffset":98678,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._oninfo","ranges":[{"startOffset":98710,"endOffset":101703,"count":0}],"isBlockCoverage":false},{"functionName":"Dicer._unpause","ranges":[{"startOffset":101736,"endOffset":101931,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/decodeText.js","ranges":[{"startOffset":102067,"endOffset":105076,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":102328,"endOffset":103276,"count":0}],"isBlockCoverage":false},{"functionName":"utf8","ranges":[{"startOffset":103348,"endOffset":103596,"count":0}],"isBlockCoverage":false},{"functionName":"latin1","ranges":[{"startOffset":103612,"endOffset":103833,"count":0}],"isBlockCoverage":false},{"functionName":"utf16le","ranges":[{"startOffset":103850,"endOffset":104098,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":104114,"endOffset":104364,"count":0}],"isBlockCoverage":false},{"functionName":"other","ranges":[{"startOffset":104379,"endOffset":104817,"count":0}],"isBlockCoverage":false},{"functionName":"decodeText","ranges":[{"startOffset":104829,"endOffset":105000,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/parseParams.js","ranges":[{"startOffset":105180,"endOffset":117999,"count":1}],"isBlockCoverage":true},{"functionName":"encodedReplacer","ranges":[{"startOffset":115066,"endOffset":115140,"count":0}],"isBlockCoverage":false},{"functionName":"parseParams","ranges":[{"startOffset":115292,"endOffset":117920,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/basename.js","ranges":[{"startOffset":118097,"endOffset":118649,"count":1}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":118234,"endOffset":118631,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/types/multipart.js","ranges":[{"startOffset":118749,"endOffset":128379,"count":1}],"isBlockCoverage":true},{"functionName":"Multipart","ranges":[{"startOffset":119359,"endOffset":127435,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart.write","ranges":[{"startOffset":127504,"endOffset":127694,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart.end","ranges":[{"startOffset":127726,"endOffset":127995,"count":0}],"isBlockCoverage":false},{"functionName":"skipPart","ranges":[{"startOffset":128001,"endOffset":128053,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream","ranges":[{"startOffset":128092,"endOffset":128214,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream._read","ranges":[{"startOffset":128322,"endOffset":128341,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/utils/Decoder.js","ranges":[{"startOffset":128475,"endOffset":130885,"count":1}],"isBlockCoverage":true},{"functionName":"Decoder","ranges":[{"startOffset":129769,"endOffset":129823,"count":0}],"isBlockCoverage":false},{"functionName":"Decoder.write","ranges":[{"startOffset":129886,"endOffset":130771,"count":0}],"isBlockCoverage":false},{"functionName":"Decoder.reset","ranges":[{"startOffset":130803,"endOffset":130849,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/types/urlencoded.js","ranges":[{"startOffset":130987,"endOffset":137788,"count":1}],"isBlockCoverage":true},{"functionName":"UrlEncoded","ranges":[{"startOffset":131303,"endOffset":132336,"count":0}],"isBlockCoverage":false},{"functionName":"UrlEncoded.write","ranges":[{"startOffset":132408,"endOffset":137093,"count":0}],"isBlockCoverage":false},{"functionName":"UrlEncoded.end","ranges":[{"startOffset":137126,"endOffset":137749,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/@fastify/busboy/lib/main.js","ranges":[{"startOffset":137872,"endOffset":140400,"count":1}],"isBlockCoverage":true},{"functionName":"Busboy","ranges":[{"startOffset":138235,"endOffset":139041,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy.emit","ranges":[{"startOffset":139138,"endOffset":139427,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy.getParserByHeaders","ranges":[{"startOffset":139471,"endOffset":140149,"count":0}],"isBlockCoverage":false},{"functionName":"Busboy._write","ranges":[{"startOffset":140181,"endOffset":140255,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/dataURL.js","ranges":[{"startOffset":140467,"endOffset":150862,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLProcessor","ranges":[{"startOffset":140886,"endOffset":142203,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":142258,"endOffset":142536,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePoints","ranges":[{"startOffset":142585,"endOffset":142871,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":142950,"endOffset":143311,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":143398,"endOffset":143519,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":143580,"endOffset":144183,"count":0}],"isBlockCoverage":false},{"functionName":"parseMIMEType","ranges":[{"startOffset":144232,"endOffset":147008,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":147057,"endOffset":147608,"count":0}],"isBlockCoverage":false},{"functionName":"collectAnHTTPQuotedString","ranges":[{"startOffset":147661,"endOffset":148646,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAMimeType","ranges":[{"startOffset":148719,"endOffset":149267,"count":0}],"isBlockCoverage":false},{"functionName":"isHTTPWhiteSpace","ranges":[{"startOffset":149326,"endOffset":149442,"count":0}],"isBlockCoverage":false},{"functionName":"removeHTTPWhitespace","ranges":[{"startOffset":149497,"endOffset":149890,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":149953,"endOffset":150087,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":150144,"endOffset":150540,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/file.js","ranges":[{"startOffset":150923,"endOffset":156993,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":151407,"endOffset":151453,"count":1}],"isBlockCoverage":true},{"functionName":"_File","ranges":[{"startOffset":151460,"endOffset":152308,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":152315,"endOffset":152409,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":152416,"endOffset":152526,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":152533,"endOffset":152627,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":152678,"endOffset":152728,"count":1}],"isBlockCoverage":true},{"functionName":"_FileLike","ranges":[{"startOffset":152735,"endOffset":153024,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":153031,"endOffset":153154,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":153161,"endOffset":153294,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":153301,"endOffset":153422,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":153429,"endOffset":153548,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":153555,"endOffset":153662,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":153669,"endOffset":153776,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":153783,"endOffset":153881,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":153888,"endOffset":154002,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":154009,"endOffset":154068,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BlobPart","ranges":[{"startOffset":154388,"endOffset":154754,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":155033,"endOffset":155092,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":155264,"endOffset":155486,"count":0}],"isBlockCoverage":false},{"functionName":"processBlobParts","ranges":[{"startOffset":155544,"endOffset":156301,"count":0}],"isBlockCoverage":false},{"functionName":"convertLineEndingsNative","ranges":[{"startOffset":156356,"endOffset":156572,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":156643,"endOffset":156897,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/formdata.js","ranges":[{"startOffset":157062,"endOffset":163174,"count":1},{"startOffset":157432,"endOffset":157445,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":157490,"endOffset":157540,"count":1}],"isBlockCoverage":true},{"functionName":"_FormData","ranges":[{"startOffset":157547,"endOffset":157818,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":157825,"endOffset":158557,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":158564,"endOffset":158837,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":158844,"endOffset":159210,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":159217,"endOffset":159510,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":159517,"endOffset":159786,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":159793,"endOffset":160819,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":160826,"endOffset":161042,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":161049,"endOffset":161256,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":161263,"endOffset":161474,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":161617,"endOffset":162102,"count":0}],"isBlockCoverage":false},{"functionName":"makeEntry","ranges":[{"startOffset":162334,"endOffset":163098,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/body.js","ranges":[{"startOffset":163235,"endOffset":177316,"count":1},{"startOffset":164169,"endOffset":164182,"count":0}],"isBlockCoverage":true},{"functionName":"extractBody","ranges":[{"startOffset":164270,"endOffset":169139,"count":0}],"isBlockCoverage":false},{"functionName":"safelyExtractBody","ranges":[{"startOffset":169184,"endOffset":169583,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBody","ranges":[{"startOffset":169640,"endOffset":169968,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBody","ranges":[{"startOffset":170009,"endOffset":170485,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":170530,"endOffset":170679,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMixinMethods","ranges":[{"startOffset":170730,"endOffset":175149,"count":2}],"isBlockCoverage":true},{"functionName":"blob","ranges":[{"startOffset":170800,"endOffset":171175,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":171185,"endOffset":171335,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":171345,"endOffset":171430,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":171440,"endOffset":171528,"count":0}],"isBlockCoverage":false},{"functionName":"formData","ranges":[{"startOffset":171538,"endOffset":175112,"count":0}],"isBlockCoverage":false},{"functionName":"mixinBody","ranges":[{"startOffset":175204,"endOffset":175312,"count":2}],"isBlockCoverage":true},{"functionName":"specConsumeBody","ranges":[{"startOffset":175353,"endOffset":176201,"count":0}],"isBlockCoverage":false},{"functionName":"bodyUnusable","ranges":[{"startOffset":176254,"endOffset":176373,"count":0}],"isBlockCoverage":false},{"functionName":"utf8DecodeBytes","ranges":[{"startOffset":176420,"endOffset":176708,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSONFromBytes","ranges":[{"startOffset":176761,"endOffset":176852,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMimeType","ranges":[{"startOffset":176911,"endOffset":177162,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/response.js","ranges":[{"startOffset":177385,"endOffset":191207,"count":1},{"startOffset":178377,"endOffset":178416,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":178509,"endOffset":178559,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":178614,"endOffset":179064,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":179136,"endOffset":179876,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":179969,"endOffset":181044,"count":0}],"isBlockCoverage":false},{"functionName":"_Response","ranges":[{"startOffset":181104,"endOffset":181827,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":181882,"endOffset":181980,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":182063,"endOffset":182329,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":182403,"endOffset":182521,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":182564,"endOffset":182666,"count":0}],"isBlockCoverage":false},{"functionName":"get ok","ranges":[{"startOffset":182733,"endOffset":182868,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":182919,"endOffset":183029,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":183084,"endOffset":183182,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":183189,"endOffset":183321,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":183328,"endOffset":183478,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":183523,"endOffset":184293,"count":0}],"isBlockCoverage":false},{"functionName":"cloneResponse","ranges":[{"startOffset":184980,"endOffset":185376,"count":0}],"isBlockCoverage":false},{"functionName":"makeResponse","ranges":[{"startOffset":185425,"endOffset":185903,"count":0}],"isBlockCoverage":false},{"functionName":"makeNetworkError","ranges":[{"startOffset":185950,"endOffset":186249,"count":0}],"isBlockCoverage":false},{"functionName":"makeFilteredResponse","ranges":[{"startOffset":186304,"endOffset":186696,"count":0}],"isBlockCoverage":false},{"functionName":"filterResponse","ranges":[{"startOffset":186759,"endOffset":187640,"count":0}],"isBlockCoverage":false},{"functionName":"makeAppropriateNetworkError","ranges":[{"startOffset":187691,"endOffset":188043,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResponse","ranges":[{"startOffset":188120,"endOffset":189375,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.XMLHttpRequestBodyInit","ranges":[{"startOffset":189749,"endOffset":190353,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BodyInit","ranges":[{"startOffset":190388,"endOffset":190631,"count":0}],"isBlockCoverage":false},{"functionName":"lib/compat/dispatcher-weakref.js","ranges":[{"startOffset":191297,"endOffset":192505,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":191460,"endOffset":191515,"count":1}],"isBlockCoverage":true},{"functionName":"CompatWeakRef","ranges":[{"startOffset":191522,"endOffset":191578,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":191585,"endOffset":191696,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":191744,"endOffset":191801,"count":1}],"isBlockCoverage":true},{"functionName":"CompatFinalizer","ranges":[{"startOffset":191808,"endOffset":191876,"count":2}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":191883,"endOffset":192141,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports","ranges":[{"startOffset":192171,"endOffset":192500,"count":2},{"startOffset":192343,"endOffset":192407,"count":0},{"startOffset":192467,"endOffset":192485,"count":0}],"isBlockCoverage":true},{"functionName":"lib/fetch/request.js","ranges":[{"startOffset":192572,"endOffset":216302,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":193863,"endOffset":193943,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":193987,"endOffset":194036,"count":1}],"isBlockCoverage":true},{"functionName":"_Request","ranges":[{"startOffset":194095,"endOffset":205438,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":205512,"endOffset":205613,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":205669,"endOffset":205779,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":206019,"endOffset":206116,"count":0}],"isBlockCoverage":false},{"functionName":"get destination","ranges":[{"startOffset":206222,"endOffset":206333,"count":0}],"isBlockCoverage":false},{"functionName":"get referrer","ranges":[{"startOffset":206685,"endOffset":206980,"count":0}],"isBlockCoverage":false},{"functionName":"get referrerPolicy","ranges":[{"startOffset":207144,"endOffset":207261,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":207444,"endOffset":207541,"count":0}],"isBlockCoverage":false},{"functionName":"get credentials","ranges":[{"startOffset":207763,"endOffset":207831,"count":0}],"isBlockCoverage":false},{"functionName":"get cache","ranges":[{"startOffset":208012,"endOffset":208111,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":208341,"endOffset":208446,"count":0}],"isBlockCoverage":false},{"functionName":"get integrity","ranges":[{"startOffset":208660,"endOffset":208767,"count":0}],"isBlockCoverage":false},{"functionName":"get keepalive","ranges":[{"startOffset":208892,"endOffset":208999,"count":0}],"isBlockCoverage":false},{"functionName":"get isReloadNavigation","ranges":[{"startOffset":209104,"endOffset":209227,"count":0}],"isBlockCoverage":false},{"functionName":"get isHistoryNavigation","ranges":[{"startOffset":209365,"endOffset":209490,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":209680,"endOffset":209775,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":209782,"endOffset":209913,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":209920,"endOffset":210069,"count":0}],"isBlockCoverage":false},{"functionName":"get duplex","ranges":[{"startOffset":210076,"endOffset":210164,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":210208,"endOffset":211265,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":211301,"endOffset":212578,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRequest","ranges":[{"startOffset":212623,"endOffset":212845,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.RequestInfo","ranges":[{"startOffset":213902,"endOffset":214143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215914,"endOffset":216018,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher.js","ranges":[{"startOffset":216369,"endOffset":216832,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":216526,"endOffset":216578,"count":1}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":216585,"endOffset":216649,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":216656,"endOffset":216717,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":216724,"endOffset":216787,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher-base.js","ranges":[{"startOffset":216909,"endOffset":222277,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":217493,"endOffset":217549,"count":1}],"isBlockCoverage":true},{"functionName":"DispatcherBase","ranges":[{"startOffset":217556,"endOffset":217726,"count":1}],"isBlockCoverage":true},{"functionName":"get destroyed","ranges":[{"startOffset":217733,"endOffset":217791,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":217798,"endOffset":217850,"count":0}],"isBlockCoverage":false},{"functionName":"get interceptors","ranges":[{"startOffset":217857,"endOffset":217921,"count":0}],"isBlockCoverage":false},{"functionName":"set interceptors","ranges":[{"startOffset":217928,"endOffset":218341,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":218348,"endOffset":219516,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":219523,"endOffset":220905,"count":0}],"isBlockCoverage":false},{"functionName":"DispatcherBase","ranges":[{"startOffset":220912,"endOffset":221417,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":221424,"endOffset":222228,"count":0}],"isBlockCoverage":false},{"functionName":"lib/node/fixed-queue.js","ranges":[{"startOffset":222351,"endOffset":223847,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":222509,"endOffset":222570,"count":1}],"isBlockCoverage":true},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":222577,"endOffset":222711,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":222718,"endOffset":222778,"count":0}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":222785,"endOffset":222858,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":222865,"endOffset":222962,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":222969,"endOffset":223204,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":223259,"endOffset":223311,"count":1}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":223318,"endOffset":223400,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":223407,"endOffset":223462,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":223469,"endOffset":223629,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":223636,"endOffset":223836,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-stats.js","ranges":[{"startOffset":223914,"endOffset":224663,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":224108,"endOffset":224159,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStats","ranges":[{"startOffset":224166,"endOffset":224221,"count":0}],"isBlockCoverage":false},{"functionName":"get connected","ranges":[{"startOffset":224228,"endOffset":224293,"count":0}],"isBlockCoverage":false},{"functionName":"get free","ranges":[{"startOffset":224300,"endOffset":224355,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":224362,"endOffset":224423,"count":0}],"isBlockCoverage":false},{"functionName":"get queued","ranges":[{"startOffset":224430,"endOffset":224489,"count":0}],"isBlockCoverage":false},{"functionName":"get running","ranges":[{"startOffset":224496,"endOffset":224557,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":224564,"endOffset":224619,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-base.js","ranges":[{"startOffset":224728,"endOffset":229936,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":225637,"endOffset":225687,"count":1}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":225694,"endOffset":227086,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227093,"endOffset":227149,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227156,"endOffset":227261,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227268,"endOffset":227391,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227398,"endOffset":227577,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227584,"endOffset":227751,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227758,"endOffset":227925,"count":0}],"isBlockCoverage":false},{"functionName":"get stats","ranges":[{"startOffset":227932,"endOffset":227982,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":227989,"endOffset":228250,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":228257,"endOffset":228528,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":228535,"endOffset":228956,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":228963,"endOffset":229414,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":229421,"endOffset":229784,"count":0}],"isBlockCoverage":false},{"functionName":"lib/timers.js","ranges":[{"startOffset":229995,"endOffset":232200,"count":1}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":230133,"endOffset":230878,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":230919,"endOffset":231234,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":231313,"endOffset":231362,"count":1}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":231369,"endOffset":231556,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":231563,"endOffset":231784,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":231791,"endOffset":231833,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":231871,"endOffset":232021,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":232029,"endOffset":232189,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/request.js","ranges":[{"startOffset":232267,"endOffset":247152,"count":1},{"startOffset":233287,"endOffset":233559,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":233601,"endOffset":233650,"count":1}],"isBlockCoverage":true},{"functionName":"_Request","ranges":[{"startOffset":233657,"endOffset":239428,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":239435,"endOffset":239649,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestSent","ranges":[{"startOffset":239656,"endOffset":239983,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":239990,"endOffset":240242,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":240249,"endOffset":240691,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":240698,"endOffset":240931,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":240938,"endOffset":241120,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":241127,"endOffset":241500,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":241507,"endOffset":241803,"count":0}],"isBlockCoverage":false},{"functionName":"onFinally","ranges":[{"startOffset":241810,"endOffset":242087,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":242130,"endOffset":242223,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":242237,"endOffset":242342,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":242356,"endOffset":243302,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":243316,"endOffset":243743,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaderValue","ranges":[{"startOffset":243755,"endOffset":244144,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":244203,"endOffset":247073,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/connect.js","ranges":[{"startOffset":247218,"endOffset":253080,"count":1},{"startOffset":247555,"endOffset":248613,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":247611,"endOffset":247673,"count":0}],"isBlockCoverage":true},{"functionName":"WeakSessionCache","ranges":[{"startOffset":247682,"endOffset":248206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":248215,"endOffset":248343,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":248352,"endOffset":248598,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":248677,"endOffset":248741,"count":1}],"isBlockCoverage":true},{"functionName":"SimpleSessionCache","ranges":[{"startOffset":248750,"endOffset":248905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":248914,"endOffset":248994,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":249003,"endOffset":249378,"count":0}],"isBlockCoverage":false},{"functionName":"buildConnector","ranges":[{"startOffset":249398,"endOffset":252236,"count":0}],"isBlockCoverage":false},{"functionName":"setupTimeout","ranges":[{"startOffset":252287,"endOffset":252845,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectTimeout","ranges":[{"startOffset":252892,"endOffset":252988,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/utils.js","ranges":[{"startOffset":253144,"endOffset":253611,"count":1}],"isBlockCoverage":true},{"functionName":"enumToMap","ranges":[{"startOffset":253301,"endOffset":253535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":253380,"endOffset":253509,"count":92},{"startOffset":253462,"endOffset":253501,"count":46}],"isBlockCoverage":true},{"functionName":"lib/llhttp/constants.js","ranges":[{"startOffset":253684,"endOffset":265146,"count":1},{"startOffset":261816,"endOffset":261930,"count":26},{"startOffset":263277,"endOffset":263317,"count":128},{"startOffset":263776,"endOffset":263853,"count":224},{"startOffset":263799,"endOffset":263847,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254482,"endOffset":256132,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":256203,"endOffset":256363,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":256432,"endOffset":257010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":257090,"endOffset":257337,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":257435,"endOffset":259869,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261352,"endOffset":261467,"count":46},{"startOffset":261389,"endOffset":261461,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261491,"endOffset":261671,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":263921,"endOffset":263936,"count":224}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264042,"endOffset":264784,"count":1}],"isBlockCoverage":true},{"functionName":"lib/handler/RedirectHandler.js","ranges":[{"startOffset":265231,"endOffset":271137,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":265638,"endOffset":265697,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":265704,"endOffset":265792,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":265799,"endOffset":265947,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":265995,"endOffset":266052,"count":1}],"isBlockCoverage":true},{"functionName":"RedirectHandler","ranges":[{"startOffset":266059,"endOffset":267473,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":267480,"endOffset":267600,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":267607,"endOffset":267716,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":267723,"endOffset":267784,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":267791,"endOffset":268846,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":268853,"endOffset":268977,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":268984,"endOffset":269218,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":269225,"endOffset":269343,"count":0}],"isBlockCoverage":false},{"functionName":"parseLocation","ranges":[{"startOffset":269355,"endOffset":269668,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRemoveHeader","ranges":[{"startOffset":269717,"endOffset":270282,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRequestHeaders","ranges":[{"startOffset":270341,"endOffset":271038,"count":0}],"isBlockCoverage":false},{"functionName":"lib/interceptor/redirectInterceptor.js","ranges":[{"startOffset":271234,"endOffset":272072,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectInterceptor","ranges":[{"startOffset":271371,"endOffset":271951,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":271466,"endOffset":271944,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp-wasm.js","ranges":[{"startOffset":272148,"endOffset":346182,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp_simd-wasm.js","ranges":[{"startOffset":346268,"endOffset":420287,"count":1}],"isBlockCoverage":true},{"functionName":"lib/client.js","ranges":[{"startOffset":420346,"endOffset":482767,"count":1},{"startOffset":422196,"endOffset":422242,"count":0},{"startOffset":423090,"endOffset":423328,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":423383,"endOffset":423431,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":423567,"endOffset":430774,"count":0}],"isBlockCoverage":false},{"functionName":"get pipelining","ranges":[{"startOffset":430781,"endOffset":430841,"count":0}],"isBlockCoverage":false},{"functionName":"set pipelining","ranges":[{"startOffset":430848,"endOffset":430942,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":430949,"endOffset":431031,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431038,"endOffset":431118,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431125,"endOffset":431204,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431211,"endOffset":431321,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431328,"endOffset":431538,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431593,"endOffset":431674,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":431681,"endOffset":432378,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":432385,"endOffset":432597,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":432604,"endOffset":433538,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionError","ranges":[{"startOffset":433550,"endOffset":433720,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2FrameError","ranges":[{"startOffset":433781,"endOffset":434039,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionEnd","ranges":[{"startOffset":434096,"endOffset":434269,"count":0}],"isBlockCoverage":false},{"functionName":"onHTTP2GoAway","ranges":[{"startOffset":434326,"endOffset":435260,"count":0}],"isBlockCoverage":false},{"functionName":"lazyllhttp","ranges":[{"startOffset":435455,"endOffset":437854,"count":1},{"startOffset":435541,"endOffset":435564,"count":0},{"startOffset":435702,"endOffset":435826,"count":0}],"isBlockCoverage":true},{"functionName":"wasm_on_url","ranges":[{"startOffset":435956,"endOffset":436007,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_status","ranges":[{"startOffset":436035,"endOffset":436298,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_begin","ranges":[{"startOffset":436333,"endOffset":436463,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_field","ranges":[{"startOffset":436497,"endOffset":436765,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_value","ranges":[{"startOffset":436799,"endOffset":437067,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_headers_complete","ranges":[{"startOffset":437105,"endOffset":437330,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_body","ranges":[{"startOffset":437356,"endOffset":437617,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_complete","ranges":[{"startOffset":437655,"endOffset":437788,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":438228,"endOffset":438276,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":438283,"endOffset":439184,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":439191,"endOffset":439764,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":439771,"endOffset":440272,"count":0}],"isBlockCoverage":false},{"functionName":"readMore","ranges":[{"startOffset":440279,"endOffset":440490,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":440497,"endOffset":442287,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":442294,"endOffset":442622,"count":0}],"isBlockCoverage":false},{"functionName":"onStatus","ranges":[{"startOffset":442629,"endOffset":442694,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageBegin","ranges":[{"startOffset":442701,"endOffset":442947,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderField","ranges":[{"startOffset":442954,"endOffset":443232,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderValue","ranges":[{"startOffset":443239,"endOffset":443989,"count":0}],"isBlockCoverage":false},{"functionName":"trackHeader","ranges":[{"startOffset":443996,"endOffset":444185,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":444192,"endOffset":445457,"count":0}],"isBlockCoverage":false},{"functionName":"onHeadersComplete","ranges":[{"startOffset":445464,"endOffset":448337,"count":0}],"isBlockCoverage":false},{"functionName":"onBody","ranges":[{"startOffset":448344,"endOffset":449121,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageComplete","ranges":[{"startOffset":449128,"endOffset":450831,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":450843,"endOffset":451569,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketReadable","ranges":[{"startOffset":451622,"endOffset":451754,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":451809,"endOffset":452235,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":452284,"endOffset":452743,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketEnd","ranges":[{"startOffset":452780,"endOffset":453142,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":453187,"endOffset":454346,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":454395,"endOffset":459001,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":459038,"endOffset":459154,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":459195,"endOffset":459567,"count":0}],"isBlockCoverage":false},{"functionName":"_resume","ranges":[{"startOffset":459602,"endOffset":462768,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSendContentLength","ranges":[{"startOffset":462805,"endOffset":462975,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":463044,"endOffset":467055,"count":0}],"isBlockCoverage":false},{"functionName":"writeH2","ranges":[{"startOffset":467088,"endOffset":473246,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":473283,"endOffset":476006,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":476051,"endOffset":477067,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":477108,"endOffset":479008,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":479089,"endOffset":479142,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncWriter","ranges":[{"startOffset":479149,"endOffset":479514,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":479521,"endOffset":481055,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":481062,"endOffset":482230,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":482237,"endOffset":482486,"count":0}],"isBlockCoverage":false},{"functionName":"errorRequest","ranges":[{"startOffset":482498,"endOffset":482691,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool.js","ranges":[{"startOffset":482822,"endOffset":485694,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":483355,"endOffset":483439,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":483532,"endOffset":483578,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":483585,"endOffset":485241,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":485248,"endOffset":485655,"count":0}],"isBlockCoverage":false},{"functionName":"lib/agent.js","ranges":[{"startOffset":485751,"endOffset":490722,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":486618,"endOffset":486760,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":486860,"endOffset":486907,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":486914,"endOffset":489007,"count":1},{"startOffset":487065,"endOffset":487149,"count":0},{"startOffset":487178,"endOffset":487210,"count":0},{"startOffset":487211,"endOffset":487241,"count":0},{"startOffset":487243,"endOffset":487339,"count":0},{"startOffset":487411,"endOffset":487509,"count":0},{"startOffset":487530,"endOffset":487562,"count":0},{"startOffset":487564,"endOffset":487611,"count":0},{"startOffset":487663,"endOffset":487692,"count":0},{"startOffset":487693,"endOffset":487737,"count":0},{"startOffset":487738,"endOffset":487766,"count":0},{"startOffset":487944,"endOffset":487973,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":488243,"endOffset":488430,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":488495,"endOffset":488587,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":488616,"endOffset":488710,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":488742,"endOffset":488849,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":488886,"endOffset":488998,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":489014,"endOffset":489255,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":489262,"endOffset":490078,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":490085,"endOffset":490372,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":490379,"endOffset":490682,"count":0}],"isBlockCoverage":false},{"functionName":"lib/global.js","ranges":[{"startOffset":490782,"endOffset":491732,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobalDispatcher","ranges":[{"startOffset":491085,"endOffset":491446,"count":1},{"startOffset":491181,"endOffset":491269,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalDispatcher","ranges":[{"startOffset":491507,"endOffset":491588,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/index.js","ranges":[{"startOffset":491795,"endOffset":532222,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":493868,"endOffset":493915,"count":1}],"isBlockCoverage":true},{"functionName":"Fetch","ranges":[{"startOffset":493922,"endOffset":494135,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":494142,"endOffset":494355,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":494425,"endOffset":494784,"count":0}],"isBlockCoverage":false},{"functionName":"fetch2","ranges":[{"startOffset":494796,"endOffset":497174,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeAndReportTiming","ranges":[{"startOffset":497208,"endOffset":498102,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":498171,"endOffset":498455,"count":0}],"isBlockCoverage":false},{"functionName":"abortFetch","ranges":[{"startOffset":498514,"endOffset":499319,"count":0}],"isBlockCoverage":false},{"functionName":"fetching","ranges":[{"startOffset":499362,"endOffset":501556,"count":0}],"isBlockCoverage":false},{"functionName":"mainFetch","ranges":[{"startOffset":501595,"endOffset":505886,"count":0}],"isBlockCoverage":false},{"functionName":"schemeFetch","ranges":[{"startOffset":505927,"endOffset":508552,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResponse","ranges":[{"startOffset":508597,"endOffset":508826,"count":0}],"isBlockCoverage":false},{"functionName":"fetchFinale","ranges":[{"startOffset":508881,"endOffset":510850,"count":0}],"isBlockCoverage":false},{"functionName":"httpFetch","ranges":[{"startOffset":510895,"endOffset":512531,"count":0}],"isBlockCoverage":false},{"functionName":"httpRedirectFetch","ranges":[{"startOffset":512572,"endOffset":515249,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkOrCacheFetch","ranges":[{"startOffset":515306,"endOffset":520540,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkFetch","ranges":[{"startOffset":520609,"endOffset":532057,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/constants.js","ranges":[{"startOffset":532298,"endOffset":533136,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/symbols.js","ranges":[{"startOffset":533208,"endOffset":533635,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/events.js","ranges":[{"startOffset":533704,"endOffset":541031,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":533934,"endOffset":535572,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":533976,"endOffset":534030,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":535595,"endOffset":536395,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":535635,"endOffset":535687,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":536418,"endOffset":537449,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":536458,"endOffset":536510,"count":1}],"isBlockCoverage":true},{"functionName":"get defaultValue","ranges":[{"startOffset":539791,"endOffset":539842,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/util.js","ranges":[{"startOffset":541097,"endOffset":544406,"count":1}],"isBlockCoverage":true},{"functionName":"isEstablished","ranges":[{"startOffset":541371,"endOffset":541451,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":541500,"endOffset":541579,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":541620,"endOffset":541697,"count":0}],"isBlockCoverage":false},{"functionName":"fireEvent","ranges":[{"startOffset":541736,"endOffset":541909,"count":0}],"isBlockCoverage":false},{"functionName":"websocketMessageReceived","ranges":[{"startOffset":541950,"endOffset":542700,"count":0}],"isBlockCoverage":false},{"functionName":"isValidSubprotocol","ranges":[{"startOffset":542771,"endOffset":543375,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatusCode","ranges":[{"startOffset":543434,"endOffset":543694,"count":0}],"isBlockCoverage":false},{"functionName":"failWebsocketConnection","ranges":[{"startOffset":543751,"endOffset":544123,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/connection.js","ranges":[{"startOffset":544483,"endOffset":550136,"count":1},{"startOffset":545435,"endOffset":545448,"count":0}],"isBlockCoverage":true},{"functionName":"establishWebSocketConnection","ranges":[{"startOffset":545453,"endOffset":548843,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketData","ranges":[{"startOffset":548922,"endOffset":549036,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":549083,"endOffset":549745,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":549794,"endOffset":550022,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/frame.js","ranges":[{"startOffset":550203,"endOffset":551896,"count":1},{"startOffset":550386,"endOffset":550399,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":550443,"endOffset":550503,"count":1}],"isBlockCoverage":true},{"functionName":"WebsocketFrameSend","ranges":[{"startOffset":550570,"endOffset":550674,"count":0}],"isBlockCoverage":false},{"functionName":"createFrame","ranges":[{"startOffset":550681,"endOffset":551829,"count":0}],"isBlockCoverage":false},{"functionName":"lib/websocket/receiver.js","ranges":[{"startOffset":551969,"endOffset":560893,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":552643,"endOffset":560840,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":552674,"endOffset":552726,"count":1}],"isBlockCoverage":true},{"functionName":"lib/websocket/websocket.js","ranges":[{"startOffset":560968,"endOffset":575576,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":561960,"endOffset":572615,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":562005,"endOffset":562056,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.converters.DOMString or sequence<DOMString>","ranges":[{"startOffset":574095,"endOffset":574297,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":574482,"endOffset":574533,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":574597,"endOffset":574605,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":574615,"endOffset":574685,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString or sequence<DOMString> or WebSocketInit","ranges":[{"startOffset":574895,"endOffset":575132,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.WebSocketSendData","ranges":[{"startOffset":575176,"endOffset":575524,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":575685,"endOffset":575841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"node:internal/blob","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9579,"count":1}],"isBlockCoverage":false},{"functionName":"lazyURL","ranges":[{"startOffset":1754,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReadableStream","ranges":[{"startOffset":1841,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":2103,"endOffset":2172,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2174,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"Blob","ranges":[{"startOffset":3105,"endOffset":4217,"count":1},{"startOffset":3264,"endOffset":3343,"count":0},{"startOffset":3542,"endOffset":3565,"count":0},{"startOffset":3573,"endOffset":3633,"count":0},{"startOffset":3851,"endOffset":3894,"count":0},{"startOffset":4077,"endOffset":4087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3695,"endOffset":3814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4221,"endOffset":4491,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4495,"endOffset":4718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4722,"endOffset":4848,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":4899,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":5055,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":5290,"endOffset":6072,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":6125,"endOffset":7243,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":7291,"endOffset":7456,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":7503,"endOffset":8159,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob","ranges":[{"startOffset":8163,"endOffset":8258,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob.<computed>","ranges":[{"startOffset":8296,"endOffset":8304,"count":0}],"isBlockCoverage":false},{"functionName":"createBlob","ranges":[{"startOffset":8307,"endOffset":8510,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObjectURL","ranges":[{"startOffset":8863,"endOffset":9478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1}],"isBlockCoverage":false}]},{"scriptId":"759","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16610,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2363,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":2773,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":2858,"endOffset":3005,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3007,"endOffset":3078,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3080,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3270,"endOffset":8838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8842,"endOffset":9474,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9478,"endOffset":9574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9578,"endOffset":9747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9751,"endOffset":10644,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10648,"endOffset":11116,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11120,"endOffset":11265,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":11269,"endOffset":12103,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12107,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":12217,"endOffset":12329,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":12333,"endOffset":12432,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":12436,"endOffset":12494,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":12498,"endOffset":12558,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":12562,"endOffset":12622,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":12626,"endOffset":12762,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":12766,"endOffset":13175,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":13368,"endOffset":13447,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":13451,"endOffset":13529,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":13533,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":13929,"endOffset":14543,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":14545,"endOffset":14832,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":14834,"endOffset":16333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5722,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1039,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2144,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2589,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2736,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2923,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4220,"endOffset":4441,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4460,"endOffset":5665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64,"count":1}],"isBlockCoverage":false}]},{"scriptId":"762","url":"node:internal/webstreams/readablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90392,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasedError","ranges":[{"startOffset":3010,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasingError","ranges":[{"startOffset":3362,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":3762,"endOffset":3848,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5273,"endOffset":16860,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream","ranges":[{"startOffset":17351,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream.<computed>","ranges":[{"startOffset":17895,"endOffset":17903,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":17906,"endOffset":19973,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamBYOBRequest","ranges":[{"startOffset":20235,"endOffset":20428,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultReadRequest","ranges":[{"startOffset":20459,"endOffset":20522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20526,"endOffset":20599,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20603,"endOffset":20681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20685,"endOffset":20740,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":20744,"endOffset":20790,"count":0}],"isBlockCoverage":false},{"functionName":"ReadIntoRequest","ranges":[{"startOffset":20820,"endOffset":20883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20887,"endOffset":20960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20964,"endOffset":21036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21040,"endOffset":21095,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":21099,"endOffset":21145,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21149,"endOffset":23358,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23647,"endOffset":26695,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26978,"endOffset":28275,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28573,"endOffset":31876,"count":0}],"isBlockCoverage":false},{"functionName":"createTeeReadableStream","ranges":[{"startOffset":32204,"endOffset":33025,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamPipeTo","ranges":[{"startOffset":33458,"endOffset":39013,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamTee","ranges":[{"startOffset":39015,"endOffset":39243,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultTee","ranges":[{"startOffset":39245,"endOffset":42043,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamTee","ranges":[{"startOffset":42045,"endOffset":49955,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":49957,"endOffset":50532,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLocked","ranges":[{"startOffset":50534,"endOffset":50623,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamCancel","ranges":[{"startOffset":50625,"endOffset":51342,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":51344,"endOffset":51828,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamError","ranges":[{"startOffset":51830,"endOffset":52708,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasDefaultReader","ranges":[{"startOffset":52710,"endOffset":52952,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadRequests","ranges":[{"startOffset":52954,"endOffset":53117,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasBYOBReader","ranges":[{"startOffset":53119,"endOffset":53355,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadIntoRequests","ranges":[{"startOffset":53357,"endOffset":53525,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadRequest","ranges":[{"startOffset":53527,"endOffset":54120,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadIntoRequest","ranges":[{"startOffset":54122,"endOffset":54504,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadRequest","ranges":[{"startOffset":54506,"endOffset":54744,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadIntoRequest","ranges":[{"startOffset":54746,"endOffset":55005,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericCancel","ranges":[{"startOffset":55007,"endOffset":55192,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericInitialize","ranges":[{"startOffset":55194,"endOffset":55859,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRelease","ranges":[{"startOffset":55861,"endOffset":56061,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":56063,"endOffset":56283,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRelease","ranges":[{"startOffset":56285,"endOffset":56483,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":56485,"endOffset":56718,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericRelease","ranges":[{"startOffset":56720,"endOffset":57374,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRead","ranges":[{"startOffset":57376,"endOffset":57779,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":57781,"endOffset":58218,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamBYOBReader","ranges":[{"startOffset":58220,"endOffset":58663,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultReader","ranges":[{"startOffset":58665,"endOffset":58928,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClose","ranges":[{"startOffset":58930,"endOffset":59278,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerEnqueue","ranges":[{"startOffset":59280,"endOffset":60025,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":60027,"endOffset":60167,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":60169,"endOffset":60383,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":60385,"endOffset":60700,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":60702,"endOffset":61197,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":61199,"endOffset":61910,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":61912,"endOffset":62129,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerError","ranges":[{"startOffset":62131,"endOffset":62428,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCancelSteps","ranges":[{"startOffset":62430,"endOffset":62703,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerPullSteps","ranges":[{"startOffset":62705,"endOffset":63321,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultController","ranges":[{"startOffset":63323,"endOffset":64302,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultControllerFromSource","ranges":[{"startOffset":64304,"endOffset":65050,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClose","ranges":[{"startOffset":65052,"endOffset":65766,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":65768,"endOffset":66338,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":66340,"endOffset":66633,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":66635,"endOffset":66801,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":66803,"endOffset":66986,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":66988,"endOffset":67294,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShouldCallPull","ranges":[{"startOffset":67296,"endOffset":67944,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":67946,"endOffset":68363,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullInto","ranges":[{"startOffset":68365,"endOffset":70375,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInternal","ranges":[{"startOffset":70377,"endOffset":71202,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespond","ranges":[{"startOffset":71204,"endOffset":71984,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":71986,"endOffset":72507,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":72509,"endOffset":72810,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueue","ranges":[{"startOffset":72812,"endOffset":75122,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":75124,"endOffset":75598,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":75600,"endOffset":75880,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":75882,"endOffset":76311,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":76313,"endOffset":78281,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":78283,"endOffset":78878,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":78880,"endOffset":80290,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":80292,"endOffset":81677,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":81679,"endOffset":81870,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":81872,"endOffset":82571,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerError","ranges":[{"startOffset":82573,"endOffset":82929,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCancelSteps","ranges":[{"startOffset":82931,"endOffset":83231,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":83233,"endOffset":83712,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":83714,"endOffset":84197,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullSteps","ranges":[{"startOffset":84199,"endOffset":85304,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamController","ranges":[{"startOffset":85306,"endOffset":86391,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamControllerFromSource","ranges":[{"startOffset":86393,"endOffset":87329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"node:internal/webstreams/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6102,"count":1}],"isBlockCoverage":false},{"functionName":"extractHighWaterMark","ranges":[{"startOffset":1193,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"extractSizeAlgorithm","ranges":[{"startOffset":1488,"endOffset":1627,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":1629,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetBuffer","ranges":[{"startOffset":2045,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteLength","ranges":[{"startOffset":2155,"endOffset":2271,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteOffset","ranges":[{"startOffset":2273,"endOffset":2389,"count":0}],"isBlockCoverage":false},{"functionName":"cloneAsUint8Array","ranges":[{"startOffset":2391,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isBrandCheck","ranges":[{"startOffset":2698,"endOffset":2862,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2738,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"transferArrayBuffer","ranges":[{"startOffset":2864,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"isViewedArrayBufferDetached","ranges":[{"startOffset":3089,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"dequeueValue","ranges":[{"startOffset":3259,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":3646,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"peekQueueValue","ranges":[{"startOffset":3866,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueValueWithSize","ranges":[{"startOffset":4103,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIsPromise","ranges":[{"startOffset":4570,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"isPromisePending","ranges":[{"startOffset":4811,"endOffset":4974,"count":0}],"isBlockCoverage":false},{"functionName":"setPromiseHandled","ranges":[{"startOffset":4976,"endOffset":5255,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpFlush","ranges":[{"startOffset":5257,"endOffset":5287,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpStart","ranges":[{"startOffset":5289,"endOffset":5313,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpPull","ranges":[{"startOffset":5315,"endOffset":5344,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpCancel","ranges":[{"startOffset":5346,"endOffset":5377,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpWrite","ranges":[{"startOffset":5379,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"lazyTransfer","ranges":[{"startOffset":5425,"endOffset":5557,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"node:internal/webstreams/writablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37504,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWritableReleasedError","ranges":[{"startOffset":1610,"endOffset":2051,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":2094,"endOffset":2180,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3102,"endOffset":7558,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream","ranges":[{"startOffset":7819,"endOffset":9112,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream.<computed>","ranges":[{"startOffset":9165,"endOffset":9173,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9176,"endOffset":12752,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13137,"endOffset":14246,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStreamLocked","ranges":[{"startOffset":14715,"endOffset":14804,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultWriter","ranges":[{"startOffset":14806,"endOffset":16580,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAbort","ranges":[{"startOffset":16582,"endOffset":17371,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamClose","ranges":[{"startOffset":17373,"endOffset":18047,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamUpdateBackpressure","ranges":[{"startOffset":18049,"endOffset":18528,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamStartErroring","ranges":[{"startOffset":18530,"endOffset":19107,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":19109,"endOffset":19864,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":19866,"endOffset":20174,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":20176,"endOffset":20544,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":20546,"endOffset":20832,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":20834,"endOffset":21291,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWrite","ranges":[{"startOffset":21293,"endOffset":21585,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":21587,"endOffset":22397,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightClose","ranges":[{"startOffset":22399,"endOffset":23454,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishErroring","ranges":[{"startOffset":23456,"endOffset":24874,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDealWithRejection","ranges":[{"startOffset":24876,"endOffset":25145,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":25147,"endOffset":25366,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAddWriteRequest","ranges":[{"startOffset":25368,"endOffset":25718,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterWrite","ranges":[{"startOffset":25720,"endOffset":26700,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterRelease","ranges":[{"startOffset":26702,"endOffset":27180,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":27182,"endOffset":27531,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":27533,"endOffset":27902,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":27904,"endOffset":28274,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":28276,"endOffset":28761,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterClose","ranges":[{"startOffset":28763,"endOffset":28930,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterAbort","ranges":[{"startOffset":28932,"endOffset":29115,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerWrite","ranges":[{"startOffset":29117,"endOffset":29702,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":29704,"endOffset":30718,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessClose","ranges":[{"startOffset":30720,"endOffset":31278,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":31280,"endOffset":31466,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":31468,"endOffset":31763,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":31765,"endOffset":31993,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerError","ranges":[{"startOffset":31995,"endOffset":32266,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClose","ranges":[{"startOffset":32268,"endOffset":32451,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":32453,"endOffset":32719,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":32721,"endOffset":32865,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":32867,"endOffset":33455,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultControllerFromSink","ranges":[{"startOffset":33457,"endOffset":34306,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultController","ranges":[{"startOffset":34308,"endOffset":35619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1873,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":451,"endOffset":1635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"node:internal/webstreams/transformstream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15706,"count":1}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1473,"endOffset":1559,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2349,"endOffset":5760,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream","ranges":[{"startOffset":5964,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream.<computed>","ranges":[{"startOffset":6477,"endOffset":6485,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6488,"endOffset":8003,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransformAlgorithm","ranges":[{"startOffset":8464,"endOffset":8589,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTransformStream","ranges":[{"startOffset":8591,"endOffset":9906,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamError","ranges":[{"startOffset":9908,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamErrorWritableAndUnblockWrite","ranges":[{"startOffset":10175,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamSetBackpressure","ranges":[{"startOffset":10552,"endOffset":10896,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultController","ranges":[{"startOffset":10898,"endOffset":11229,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultControllerFromTransformer","ranges":[{"startOffset":11231,"endOffset":11783,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":11785,"endOffset":11959,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerEnqueue","ranges":[{"startOffset":11961,"endOffset":12773,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerError","ranges":[{"startOffset":12775,"endOffset":12902,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerPerformTransform","ranges":[{"startOffset":12904,"endOffset":13228,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerTerminate","ranges":[{"startOffset":13230,"endOffset":13690,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkWriteAlgorithm","ranges":[{"startOffset":13692,"endOffset":14468,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkAbortAlgorithm","ranges":[{"startOffset":14470,"endOffset":14585,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkCloseAlgorithm","ranges":[{"startOffset":14587,"endOffset":15239,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSourcePullAlgorithm","ranges":[{"startOffset":15241,"endOffset":15510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"node:stream/web","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1294,"count":1}],"isBlockCoverage":false}]},{"scriptId":"768","url":"node:internal/webstreams/queuingstrategies","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3851,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":931,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1114,"endOffset":1200,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1238,"endOffset":2284,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2544,"endOffset":3561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"node:internal/webstreams/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6227,"count":1}],"isBlockCoverage":false},{"functionName":"isTextEncoderStream","ranges":[{"startOffset":859,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"isTextDecoderStream","ranges":[{"startOffset":998,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoderStream","ranges":[{"startOffset":1165,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":2764,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":2969,"endOffset":3118,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3177,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3330,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"TextDecoderStream","ranges":[{"startOffset":3814,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":4424,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":4622,"endOffset":4762,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":4814,"endOffset":4962,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":5021,"endOffset":5170,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":5229,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5382,"endOffset":5779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"node:internal/webstreams/compression","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3764,"count":1}],"isBlockCoverage":false},{"functionName":"lazyZlib","ranges":[{"startOffset":443,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"isCompressionStream","ranges":[{"startOffset":770,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"isDecompressionStream","ranges":[{"startOffset":909,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"CompressionStream","ranges":[{"startOffset":1130,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":1600,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":1808,"endOffset":1957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1961,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"DecompressionStream","ranges":[{"startOffset":2319,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":2793,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3005,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3162,"endOffset":3442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"node:internal/webstreams/adapters","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25246,"count":1}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamWritable","ranges":[{"startOffset":1904,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamWritableFromWritableStream","ranges":[{"startOffset":5203,"endOffset":9526,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamReadable","ranges":[{"startOffset":9737,"endOffset":12255,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamReadableFromReadableStream","ranges":[{"startOffset":12470,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableWritablePairFromDuplex","ranges":[{"startOffset":14565,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamDuplexFromReadableWritablePair","ranges":[{"startOffset":16018,"endOffset":21248,"count":0}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamBase","ranges":[{"startOffset":21462,"endOffset":23301,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamBase","ranges":[{"startOffset":23411,"endOffset":24916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":false}]},{"scriptId":"773","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107992,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4594,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":4659,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":4886,"endOffset":5103,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5105,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5269,"endOffset":5397,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":8595,"endOffset":8666,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":8968,"endOffset":11675,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":11677,"endOffset":11860,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":12031,"endOffset":12332,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":12444,"endOffset":12554,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":12713,"endOffset":13293,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":13295,"endOffset":14040,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14153,"endOffset":14469,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":14471,"endOffset":14789,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":14791,"endOffset":14997,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":15384,"endOffset":16478,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":16570,"endOffset":16842,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":17035,"endOffset":17484,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":17596,"endOffset":18023,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":18025,"endOffset":18329,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":18331,"endOffset":18961,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":18963,"endOffset":19371,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":19774,"endOffset":20726,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":20928,"endOffset":22983,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23347,"endOffset":24186,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":24283,"endOffset":24455,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":24457,"endOffset":24924,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":24985,"endOffset":25378,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":25541,"endOffset":25964,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":26199,"endOffset":26416,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26449,"endOffset":27190,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":27194,"endOffset":27376,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27380,"endOffset":28022,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":28434,"endOffset":28633,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29242,"endOffset":30521,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":30658,"endOffset":31380,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":31666,"endOffset":33941,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":34055,"endOffset":34156,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":34158,"endOffset":34593,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":34595,"endOffset":35543,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":35545,"endOffset":36600,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":38753,"endOffset":41535,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":41662,"endOffset":41712,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":41892,"endOffset":41948,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":42315,"endOffset":42446,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":42523,"endOffset":42606,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":42670,"endOffset":42746,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":42812,"endOffset":42894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42930,"endOffset":43040,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":43256,"endOffset":43530,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":43703,"endOffset":44007,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":44206,"endOffset":44802,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44806,"endOffset":45164,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":45206,"endOffset":45393,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":45419,"endOffset":45459,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":45536,"endOffset":45614,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":45694,"endOffset":45773,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":45849,"endOffset":45919,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":45977,"endOffset":46084,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":46229,"endOffset":46492,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":46555,"endOffset":47014,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":47079,"endOffset":47654,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":47908,"endOffset":48503,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":48607,"endOffset":49023,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":49595,"endOffset":49892,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49896,"endOffset":50136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50275,"endOffset":50601,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":50605,"endOffset":50646,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":50650,"endOffset":50719,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":50723,"endOffset":50796,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":51014,"endOffset":51522,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":51526,"endOffset":51570,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":51819,"endOffset":53683,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":53728,"endOffset":54480,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":54786,"endOffset":54911,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":55021,"endOffset":58821,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":58825,"endOffset":59038,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":59040,"endOffset":59123,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":59125,"endOffset":59223,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":59225,"endOffset":59450,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":59452,"endOffset":59999,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":60001,"endOffset":60462,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":60544,"endOffset":61479,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":61481,"endOffset":61866,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":62022,"endOffset":63146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63150,"endOffset":63328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63332,"endOffset":63759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63763,"endOffset":64131,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":64135,"endOffset":64349,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":64353,"endOffset":64421,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":64425,"endOffset":64479,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":64483,"endOffset":64539,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":64543,"endOffset":64601,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":64605,"endOffset":64660,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":64755,"endOffset":64791,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":64845,"endOffset":64891,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":64895,"endOffset":64946,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":64995,"endOffset":65081,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":65138,"endOffset":65215,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":65260,"endOffset":65346,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":65413,"endOffset":65465,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":65512,"endOffset":65662,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65666,"endOffset":65798,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65802,"endOffset":65968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65972,"endOffset":68424,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":68428,"endOffset":68512,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":68516,"endOffset":68584,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":68588,"endOffset":68807,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":68811,"endOffset":69156,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":69160,"endOffset":69678,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":69682,"endOffset":70379,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":70383,"endOffset":70458,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":71238,"endOffset":71553,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":71771,"endOffset":74118,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74236,"endOffset":75251,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":75255,"endOffset":76163,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":76165,"endOffset":76219,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":76221,"endOffset":77751,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":77754,"endOffset":78004,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":78122,"endOffset":78294,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":78296,"endOffset":79105,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":79107,"endOffset":79553,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":79555,"endOffset":80978,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":80980,"endOffset":82991,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":82993,"endOffset":83504,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":83554,"endOffset":83791,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":83845,"endOffset":84051,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":84161,"endOffset":86343,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":86392,"endOffset":87860,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":88253,"endOffset":90336,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":90810,"endOffset":92441,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":92946,"endOffset":93994,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":94124,"endOffset":94356,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":94360,"endOffset":94490,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":94868,"endOffset":95319,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":95413,"endOffset":95582,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":95584,"endOffset":95755,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":95757,"endOffset":95879,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":96009,"endOffset":96263,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":96265,"endOffset":98629,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":98631,"endOffset":99845,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":99847,"endOffset":100179,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":100181,"endOffset":100304,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":100352,"endOffset":100722,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":100726,"endOffset":100924,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":100928,"endOffset":101107,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":101151,"endOffset":101459,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":101463,"endOffset":101661,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":101665,"endOffset":101844,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":101909,"endOffset":102835,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":102838,"endOffset":103226,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":103228,"endOffset":103675,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":103677,"endOffset":105152,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":105258,"endOffset":105406,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":105413,"endOffset":105512,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":105514,"endOffset":105695,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":105860,"endOffset":106044,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":106046,"endOffset":107481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22011,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2251,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2721,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3051,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3289,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3418,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3759,"endOffset":3896,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":3898,"endOffset":4183,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4185,"endOffset":4351,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4353,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4529,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4585,"endOffset":4641,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4643,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":4767,"endOffset":4968,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":4970,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5030,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5115,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5270,"endOffset":6379,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6383,"endOffset":6552,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6556,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7355,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":7807,"endOffset":7937,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":7985,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9000,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9050,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9206,"endOffset":9250,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9254,"endOffset":9300,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9304,"endOffset":9356,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9360,"endOffset":9408,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9412,"endOffset":9466,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9470,"endOffset":9512,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9516,"endOffset":9558,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":9562,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":9607,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":9838,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9888,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10141,"endOffset":10207,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10211,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10429,"endOffset":10491,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":10495,"endOffset":10561,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":10565,"endOffset":10626,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":10630,"endOffset":10693,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10697,"endOffset":10826,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":10830,"endOffset":10915,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":10917,"endOffset":11303,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11350,"endOffset":12058,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12255,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12307,"endOffset":12389,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12393,"endOffset":12470,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":12474,"endOffset":12879,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":12883,"endOffset":12929,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":12933,"endOffset":12977,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":12981,"endOffset":13042,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13046,"endOffset":13100,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13104,"endOffset":13171,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13175,"endOffset":13233,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13237,"endOffset":13304,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13308,"endOffset":13389,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":13393,"endOffset":13464,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":13468,"endOffset":13535,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":13539,"endOffset":13786,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":13790,"endOffset":13990,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":13994,"endOffset":14189,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14193,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":14351,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":14416,"endOffset":14524,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":14528,"endOffset":14713,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":14717,"endOffset":15039,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15043,"endOffset":15218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15222,"endOffset":15632,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":15636,"endOffset":15702,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":15706,"endOffset":15759,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":15763,"endOffset":15908,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":15912,"endOffset":17116,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":17120,"endOffset":17158,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":17162,"endOffset":17204,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17208,"endOffset":17874,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":17878,"endOffset":18885,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":18889,"endOffset":19021,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":19025,"endOffset":19148,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":19152,"endOffset":19562,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19566,"endOffset":19873,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":19913,"endOffset":20146,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":20150,"endOffset":20777,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":20781,"endOffset":21924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22317,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":6946,"endOffset":9190,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":9192,"endOffset":10825,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":10938,"endOffset":11653,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":11655,"endOffset":13552,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":13554,"endOffset":14414,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":14416,"endOffset":14852,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":14854,"endOffset":15266,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15316,"endOffset":15422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15482,"endOffset":15576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15635,"endOffset":15696,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":15858,"endOffset":17929,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":17967,"endOffset":18426,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":18430,"endOffset":18505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18548,"endOffset":18768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18817,"endOffset":19060,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":19066,"endOffset":21134,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":21136,"endOffset":21217,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":21219,"endOffset":21422,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":21424,"endOffset":21873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/test/reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":540,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":158,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":186,"endOffset":269,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":437,"endOffset":526,"count":1}],"isBlockCoverage":true}]}],"timestamp":178.809612,"source-map-cache":{"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/index.js":{"lineLengths":[25,13,0,46,13,3,40,19,23,28,3,3,45,19,23,32,3,3,45,19,23,27,3,3,54,19,23,36,3,3,45,19,23,27,3,3,52,19,23,34,3,3,49,19,23,35,3,3,43,19,23,24,3,3,44,19,23,26,3,3,48,19,23,30,3,3,46,19,23,29,3,3,46,19,23,29,3,3,48,19,23,31,3,3,46,19,23,29,3,3,41,19,23,24,3,3,51,19,23,35,3,3,55,19,23,39,3,3,47,19,23,31,3,3,55,19,23,36,3,3,55,19,23,36,3,3,0,23,3,25,54,23,1,0,3,25,40,23,1,0,3,25,30,23,1,0,3,25,30,23,1,0,3,25,38,23,1,0,3,25,28,23,1,0,3,25,30,23,1,0,3,25,32,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,35,23,1,0,3,25,31,23,1,0,3,25,31,23,1,0,123,0,23,3012,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {structuredPatch, createTwoFilesPatch, createPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/base.js":{"lineLengths":[25,13,0,46,13,3,26,0,23,18,0,18,27,0,25,45,29,7,27,85,36,0,40,25,19,5,0,27,20,0,26,21,32,37,14,20,14,21,7,63,0,0,42,42,59,59,34,34,23,40,21,17,20,76,0,74,0,67,48,20,36,31,10,91,0,0,31,95,22,33,14,31,9,0,49,52,74,0,22,72,49,9,0,60,71,0,36,50,45,19,81,80,57,0,0,73,43,67,16,80,0,28,67,9,0,143,0,69,106,16,77,44,9,7,0,19,89,86,19,0,0,19,24,32,60,0,36,43,30,11,0,34,19,11,14,11,12,43,35,0,18,21,9,7,5,4,0,27,0,25,69,49,0,67,71,31,43,30,21,24,8,12,23,17,21,24,9,5,4,0,27,0,25,87,34,34,33,39,24,0,117,15,15,20,5,0,22,32,26,9,5,0,29,18,4,0,27,0,25,40,34,50,12,101,5,4,0,27,0,25,44,17,0,44,21,27,7,5,0,15,4,0,27,0,25,40,17,4,0,27,0,25,38,27,4,0,27,0,25,30,26,3,2,0,79,23,39,17,17,0,55,45,0,29,48,70,47,47,67,11,43,14,87,7,0,47,0,29,34,7,12,85,113,89,63,0,63,47,64,39,7,5,78,83,44,0,0,51,0,158,62,21,3,0,20,1,0,26,10,24,40,4,1,22136,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","bestPath","newPos","components","oldPos","extractCommon","join","count","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","clonePath","pushComponent","buildValues","useLongestToken","exec","ret","added","removed","last","push","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","split","chars","componentPos","componentLen","component","slice","map","oldValue","tmp","lastComponent","pop","path"],"mappings":";;;;;;;;;AAAe,SAASA,IAAT,GAAgB,CAAE;;AAEjCA,IAAI,CAACC,SAAL,GAAiB;AAAA;;AAAA;AACfC,EAAAA,IADe,gBACVC,SADU,EACCC,SADD,EAC0B;AAAA;AAAA;AAAA;AAAdC,IAAAA,OAAc,uEAAJ,EAAI;AACvC,QAAIC,QAAQ,GAAGD,OAAO,CAACC,QAAvB;;AACA,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,SAAKA,OAAL,GAAeA,OAAf;AAEA,QAAIE,IAAI,GAAG,IAAX;;AAEA,aAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,UAAIH,QAAJ,EAAc;AACZI,QAAAA,UAAU,CAAC,YAAW;AAAEJ,UAAAA,QAAQ,CAACK,SAAD,EAAYF,KAAZ,CAAR;AAA6B,SAA3C,EAA6C,CAA7C,CAAV;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAOA,KAAP;AACD;AACF,KAjBsC,CAmBvC;;;AACAN,IAAAA,SAAS,GAAG,KAAKS,SAAL,CAAeT,SAAf,CAAZ;AACAC,IAAAA,SAAS,GAAG,KAAKQ,SAAL,CAAeR,SAAf,CAAZ;AAEAD,IAAAA,SAAS,GAAG,KAAKU,WAAL,CAAiB,KAAKC,QAAL,CAAcX,SAAd,CAAjB,CAAZ;AACAC,IAAAA,SAAS,GAAG,KAAKS,WAAL,CAAiB,KAAKC,QAAL,CAAcV,SAAd,CAAjB,CAAZ;AAEA,QAAIW,MAAM,GAAGX,SAAS,CAACY,MAAvB;AAAA,QAA+BC,MAAM,GAAGd,SAAS,CAACa,MAAlD;AACA,QAAIE,UAAU,GAAG,CAAjB;AACA,QAAIC,aAAa,GAAGJ,MAAM,GAAGE,MAA7B;AACA,QAAIG,QAAQ,GAAG,CAAC;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAAX;AAAcC,MAAAA,UAAU,EAAE;AAA1B,KAAD,CAAf,CA7BuC,CA+BvC;;AACA,QAAIC,MAAM,GAAG,KAAKC,aAAL,CAAmBJ,QAAQ,CAAC,CAAD,CAA3B,EAAgChB,SAAhC,EAA2CD,SAA3C,EAAsD,CAAtD,CAAb;;AACA,QAAIiB,QAAQ,CAAC,CAAD,CAAR,CAAYC,MAAZ,GAAqB,CAArB,IAA0BN,MAA1B,IAAoCQ,MAAM,GAAG,CAAT,IAAcN,MAAtD,EAA8D;AAC5D;AACA,aAAOT,IAAI,CAAC,CAAC;AAACC,QAAAA,KAAK,EAAE,KAAKgB,IAAL,CAAUrB,SAAV,CAAR;AAA8BsB,QAAAA,KAAK,EAAEtB,SAAS,CAACY;AAA/C,OAAD,CAAD,CAAX;AACD,KApCsC,CAsCvC;;;AACA,aAASW,cAAT,GAA0B;AACxB,WAAK,IAAIC,YAAY,GAAG,CAAC,CAAD,GAAKV,UAA7B,EAAyCU,YAAY,IAAIV,UAAzD,EAAqEU,YAAY,IAAI,CAArF,EAAwF;AACtF,YAAIC,QAAQ;AAAA;AAAA;AAAZ;AAAA;;AACA,YAAIC,OAAO,GAAGV,QAAQ,CAACQ,YAAY,GAAG,CAAhB,CAAtB;AAAA,YACIG,UAAU,GAAGX,QAAQ,CAACQ,YAAY,GAAG,CAAhB,CADzB;AAAA,YAEIL,OAAM,GAAG,CAACQ,UAAU,GAAGA,UAAU,CAACV,MAAd,GAAuB,CAAlC,IAAuCO,YAFpD;;AAGA,YAAIE,OAAJ,EAAa;AACX;AACAV,UAAAA,QAAQ,CAACQ,YAAY,GAAG,CAAhB,CAAR,GAA6BjB,SAA7B;AACD;;AAED,YAAIqB,MAAM,GAAGF,OAAO,IAAIA,OAAO,CAACT,MAAR,GAAiB,CAAjB,GAAqBN,MAA7C;AAAA,YACIkB,SAAS,GAAGF,UAAU,IAAI,KAAKR,OAAnB,IAA6BA,OAAM,GAAGN,MADtD;;AAEA,YAAI,CAACe,MAAD,IAAW,CAACC,SAAhB,EAA2B;AACzB;AACAb,UAAAA,QAAQ,CAACQ,YAAD,CAAR,GAAyBjB,SAAzB;AACA;AACD,SAhBqF,CAkBtF;AACA;AACA;;;AACA,YAAI,CAACqB,MAAD,IAAYC,SAAS,IAAIH,OAAO,CAACT,MAAR,GAAiBU,UAAU,CAACV,MAAzD,EAAkE;AAChEQ,UAAAA,QAAQ,GAAGK,SAAS,CAACH,UAAD,CAApB;AACAxB,UAAAA,IAAI,CAAC4B,aAAL,CAAmBN,QAAQ,CAACP,UAA5B,EAAwCX,SAAxC,EAAmD,IAAnD;AACD,SAHD,MAGO;AACLkB,UAAAA,QAAQ,GAAGC,OAAX,CADK,CACe;;AACpBD,UAAAA,QAAQ,CAACR,MAAT;AACAd,UAAAA,IAAI,CAAC4B,aAAL,CAAmBN,QAAQ,CAACP,UAA5B,EAAwC,IAAxC,EAA8CX,SAA9C;AACD;;AAEDY,QAAAA,OAAM,GAAGhB,IAAI,CAACiB,aAAL,CAAmBK,QAAnB,EAA6BzB,SAA7B,EAAwCD,SAAxC,EAAmDyB,YAAnD,CAAT,CA9BsF,CAgCtF;;AACA,YAAIC,QAAQ,CAACR,MAAT,GAAkB,CAAlB,IAAuBN,MAAvB,IAAiCQ,OAAM,GAAG,CAAT,IAAcN,MAAnD,EAA2D;AACzD,iBAAOT,IAAI,CAAC4B,WAAW,CAAC7B,IAAD,EAAOsB,QAAQ,CAACP,UAAhB,EAA4BlB,SAA5B,EAAuCD,SAAvC,EAAkDI,IAAI,CAAC8B,eAAvD,CAAZ,CAAX;AACD,SAFD,MAEO;AACL;AACAjB,UAAAA,QAAQ,CAACQ,YAAD,CAAR,GAAyBC,QAAzB;AACD;AACF;;AAEDX,MAAAA,UAAU;AACX,KAlFsC,CAoFvC;AACA;AACA;;;AACA,QAAIZ,QAAJ,EAAc;AACX,gBAASgC,IAAT,GAAgB;AACf5B,QAAAA,UAAU,CAAC,YAAW;AACpB;;AACA;AACA,cAAIQ,UAAU,GAAGC,aAAjB,EAAgC;AAC9B,mBAAOb,QAAQ,EAAf;AACD;;AAED,cAAI,CAACqB,cAAc,EAAnB,EAAuB;AACrBW,YAAAA,IAAI;AACL;AACF,SAVS,EAUP,CAVO,CAAV;AAWD,OAZA,GAAD;AAaD,KAdD,MAcO;AACL,aAAOpB,UAAU,IAAIC,aAArB,EAAoC;AAClC,YAAIoB,GAAG,GAAGZ,cAAc,EAAxB;;AACA,YAAIY,GAAJ,EAAS;AACP,iBAAOA,GAAP;AACD;AACF;AACF;AACF,GA9Gc;;AAAA;;AAAA;AAgHfJ,EAAAA,aAhHe,yBAgHDb,UAhHC,EAgHWkB,KAhHX,EAgHkBC,OAhHlB,EAgH2B;AACxC,QAAIC,IAAI,GAAGpB,UAAU,CAACA,UAAU,CAACN,MAAX,GAAoB,CAArB,CAArB;;AACA,QAAI0B,IAAI,IAAIA,IAAI,CAACF,KAAL,KAAeA,KAAvB,IAAgCE,IAAI,CAACD,OAAL,KAAiBA,OAArD,EAA8D;AAC5D;AACA;AACAnB,MAAAA,UAAU,CAACA,UAAU,CAACN,MAAX,GAAoB,CAArB,CAAV,GAAoC;AAACU,QAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAAL,GAAa,CAArB;AAAwBc,QAAAA,KAAK,EAAEA,KAA/B;AAAsCC,QAAAA,OAAO,EAAEA;AAA/C,OAApC;AACD,KAJD,MAIO;AACLnB,MAAAA,UAAU,CAACqB,IAAX,CAAgB;AAACjB,QAAAA,KAAK,EAAE,CAAR;AAAWc,QAAAA,KAAK,EAAEA,KAAlB;AAAyBC,QAAAA,OAAO,EAAEA;AAAlC,OAAhB;AACD;AACF,GAzHc;;AAAA;;AAAA;AA0HfjB,EAAAA,aA1He,yBA0HDK,QA1HC,EA0HSzB,SA1HT,EA0HoBD,SA1HpB,EA0H+ByB,YA1H/B,EA0H6C;AAC1D,QAAIb,MAAM,GAAGX,SAAS,CAACY,MAAvB;AAAA,QACIC,MAAM,GAAGd,SAAS,CAACa,MADvB;AAAA,QAEIK,MAAM,GAAGQ,QAAQ,CAACR,MAFtB;AAAA,QAGIE,MAAM,GAAGF,MAAM,GAAGO,YAHtB;AAAA,QAKIgB,WAAW,GAAG,CALlB;;AAMA,WAAOvB,MAAM,GAAG,CAAT,GAAaN,MAAb,IAAuBQ,MAAM,GAAG,CAAT,GAAaN,MAApC,IAA8C,KAAK4B,MAAL,CAAYzC,SAAS,CAACiB,MAAM,GAAG,CAAV,CAArB,EAAmClB,SAAS,CAACoB,MAAM,GAAG,CAAV,CAA5C,CAArD,EAAgH;AAC9GF,MAAAA,MAAM;AACNE,MAAAA,MAAM;AACNqB,MAAAA,WAAW;AACZ;;AAED,QAAIA,WAAJ,EAAiB;AACff,MAAAA,QAAQ,CAACP,UAAT,CAAoBqB,IAApB,CAAyB;AAACjB,QAAAA,KAAK,EAAEkB;AAAR,OAAzB;AACD;;AAEDf,IAAAA,QAAQ,CAACR,MAAT,GAAkBA,MAAlB;AACA,WAAOE,MAAP;AACD,GA7Ic;;AAAA;;AAAA;AA+IfsB,EAAAA,MA/Ie,kBA+IRC,IA/IQ,EA+IFC,KA/IE,EA+IK;AAClB,QAAI,KAAK1C,OAAL,CAAa2C,UAAjB,EAA6B;AAC3B,aAAO,KAAK3C,OAAL,CAAa2C,UAAb,CAAwBF,IAAxB,EAA8BC,KAA9B,CAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,KAAKC,KAAT,IACD,KAAK1C,OAAL,CAAa4C,UAAb,IAA2BH,IAAI,CAACI,WAAL,OAAuBH,KAAK,CAACG,WAAN,EADxD;AAED;AACF,GAtJc;;AAAA;;AAAA;AAuJfrC,EAAAA,WAvJe,uBAuJHsC,KAvJG,EAuJI;AACjB,QAAIZ,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACnC,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACrC,UAAID,KAAK,CAACC,CAAD,CAAT,EAAc;AACZb,QAAAA,GAAG,CAACI,IAAJ,CAASQ,KAAK,CAACC,CAAD,CAAd;AACD;AACF;;AACD,WAAOb,GAAP;AACD,GA/Jc;;AAAA;;AAAA;AAgKf3B,EAAAA,SAhKe,qBAgKLH,KAhKK,EAgKE;AACf,WAAOA,KAAP;AACD,GAlKc;;AAAA;;AAAA;AAmKfK,EAAAA,QAnKe,oBAmKNL,KAnKM,EAmKC;AACd,WAAOA,KAAK,CAAC4C,KAAN,CAAY,EAAZ,CAAP;AACD,GArKc;;AAAA;;AAAA;AAsKf5B,EAAAA,IAtKe,gBAsKV6B,KAtKU,EAsKH;AACV,WAAOA,KAAK,CAAC7B,IAAN,CAAW,EAAX,CAAP;AACD;AAxKc,CAAjB;;AA2KA,SAASW,WAAT,CAAqBlC,IAArB,EAA2BoB,UAA3B,EAAuClB,SAAvC,EAAkDD,SAAlD,EAA6DkC,eAA7D,EAA8E;AAC5E,MAAIkB,YAAY,GAAG,CAAnB;AAAA,MACIC,YAAY,GAAGlC,UAAU,CAACN,MAD9B;AAAA,MAEIK,MAAM,GAAG,CAFb;AAAA,MAGIE,MAAM,GAAG,CAHb;;AAKA,SAAOgC,YAAY,GAAGC,YAAtB,EAAoCD,YAAY,EAAhD,EAAoD;AAClD,QAAIE,SAAS,GAAGnC,UAAU,CAACiC,YAAD,CAA1B;;AACA,QAAI,CAACE,SAAS,CAAChB,OAAf,EAAwB;AACtB,UAAI,CAACgB,SAAS,CAACjB,KAAX,IAAoBH,eAAxB,EAAyC;AACvC,YAAI5B,KAAK,GAAGL,SAAS,CAACsD,KAAV,CAAgBrC,MAAhB,EAAwBA,MAAM,GAAGoC,SAAS,CAAC/B,KAA3C,CAAZ;AACAjB,QAAAA,KAAK,GAAGA,KAAK,CAACkD,GAAN,CAAU,UAASlD,KAAT,EAAgB2C,CAAhB,EAAmB;AACnC,cAAIQ,QAAQ,GAAGzD,SAAS,CAACoB,MAAM,GAAG6B,CAAV,CAAxB;AACA,iBAAOQ,QAAQ,CAAC5C,MAAT,GAAkBP,KAAK,CAACO,MAAxB,GAAiC4C,QAAjC,GAA4CnD,KAAnD;AACD,SAHO,CAAR;AAKAgD,QAAAA,SAAS,CAAChD,KAAV,GAAkBP,IAAI,CAACuB,IAAL,CAAUhB,KAAV,CAAlB;AACD,OARD,MAQO;AACLgD,QAAAA,SAAS,CAAChD,KAAV,GAAkBP,IAAI,CAACuB,IAAL,CAAUrB,SAAS,CAACsD,KAAV,CAAgBrC,MAAhB,EAAwBA,MAAM,GAAGoC,SAAS,CAAC/B,KAA3C,CAAV,CAAlB;AACD;;AACDL,MAAAA,MAAM,IAAIoC,SAAS,CAAC/B,KAApB,CAZsB,CActB;;AACA,UAAI,CAAC+B,SAAS,CAACjB,KAAf,EAAsB;AACpBjB,QAAAA,MAAM,IAAIkC,SAAS,CAAC/B,KAApB;AACD;AACF,KAlBD,MAkBO;AACL+B,MAAAA,SAAS,CAAChD,KAAV,GAAkBP,IAAI,CAACuB,IAAL,CAAUtB,SAAS,CAACuD,KAAV,CAAgBnC,MAAhB,EAAwBA,MAAM,GAAGkC,SAAS,CAAC/B,KAA3C,CAAV,CAAlB;AACAH,MAAAA,MAAM,IAAIkC,SAAS,CAAC/B,KAApB,CAFK,CAIL;AACA;AACA;;AACA,UAAI6B,YAAY,IAAIjC,UAAU,CAACiC,YAAY,GAAG,CAAhB,CAAV,CAA6Bf,KAAjD,EAAwD;AACtD,YAAIqB,GAAG,GAAGvC,UAAU,CAACiC,YAAY,GAAG,CAAhB,CAApB;AACAjC,QAAAA,UAAU,CAACiC,YAAY,GAAG,CAAhB,CAAV,GAA+BjC,UAAU,CAACiC,YAAD,CAAzC;AACAjC,QAAAA,UAAU,CAACiC,YAAD,CAAV,GAA2BM,GAA3B;AACD;AACF;AACF,GAvC2E,CAyC5E;AACA;AACA;;;AACA,MAAIC,aAAa,GAAGxC,UAAU,CAACkC,YAAY,GAAG,CAAhB,CAA9B;;AACA,MAAIA,YAAY,GAAG,CAAf,IACG,OAAOM,aAAa,CAACrD,KAArB,KAA+B,QADlC,KAEIqD,aAAa,CAACtB,KAAd,IAAuBsB,aAAa,CAACrB,OAFzC,KAGGvC,IAAI,CAAC2C,MAAL,CAAY,EAAZ,EAAgBiB,aAAa,CAACrD,KAA9B,CAHP,EAG6C;AAC3Ca,IAAAA,UAAU,CAACkC,YAAY,GAAG,CAAhB,CAAV,CAA6B/C,KAA7B,IAAsCqD,aAAa,CAACrD,KAApD;AACAa,IAAAA,UAAU,CAACyC,GAAX;AACD;;AAED,SAAOzC,UAAP;AACD;;AAED,SAASY,SAAT,CAAmB8B,IAAnB,EAAyB;AACvB,SAAO;AAAE3C,IAAAA,MAAM,EAAE2C,IAAI,CAAC3C,MAAf;AAAuBC,IAAAA,UAAU,EAAE0C,IAAI,CAAC1C,UAAL,CAAgBoC,KAAhB,CAAsB,CAAtB;AAAnC,GAAP;AACD","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    let bestPath = [{ newPos: -1, components: [] }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (let diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        let basePath;\n        let addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          // This should not happen, but we want to be safe.\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  pushComponent(components, added, removed) {\n    let last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n    } else {\n      components.push({count: 1, added: added, removed: removed });\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({count: commonCount});\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let lastComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof lastComponent.value === 'string'\n      && (lastComponent.added || lastComponent.removed)\n      && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) };\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/character.js":{"lineLengths":[25,13,0,46,13,3,30,31,0,23,3,25,49,23,1,0,123,0,23,23,25,5,23,1,25,9,23,4,0,25,38,0,23,45,53,1,880,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/word.js":{"lineLengths":[25,13,0,46,13,3,30,48,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,65,2,25,32,35,29,30,30,28,38,29,29,33,34,30,35,43,39,88,24,18,25,5,23,1,25,9,23,4,0,25,28,0,23,42,32,30,32,3,0,114,2,0,38,97,184,0,47,103,120,33,30,10,5,3,0,16,2,0,45,11,27,5,25,0,27,9,25,3,27,18,25,13,26,5,48,1,0,54,48,1,5824,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/params.js":{"lineLengths":[25,13,0,46,13,3,42,0,23,45,38,32,23,31,32,41,39,7,5,3,0,18,1,1248,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/line.js":{"lineLengths":[25,13,0,46,13,3,30,44,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,18,25,5,23,1,25,9,23,4,0,25,28,0,23,38,20,129,0,55,27,63,0,0,53,35,0,48,44,12,42,27,7,0,26,5,3,0,18,2,0,46,49,1,0,53,15,27,5,25,0,27,9,25,3,27,18,25,14,26,5,48,1,3728,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","retLines","linesAndNewlines","split","length","pop","i","line","options","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGF,KAAK,CAACG,KAAN,CAAY,WAAZ,CADvB,CADkC,CAIlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAPiC,CASlC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKE,OAAL,CAAaC,cAA3B,EAA2C;AACzCR,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKC,OAAL,CAAaE,gBAAjB,EAAmC;AACjCH,QAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;AACD;;AACDV,MAAAA,QAAQ,CAACW,IAAT,CAAcL,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CAxBD;;AA0BO,SAASY,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOnB,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIR,OAAO;AAAG;AAAA;AAAA;;AAAAW;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOb,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BP,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[25,13,0,46,13,3,38,30,0,23,3,25,49,23,1,0,123,0,23,22,25,5,23,1,25,9,23,4,0,25,36,0,23,42,46,2,0,50,53,1,1196,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/css.js":{"lineLengths":[25,13,0,46,13,3,26,25,0,23,3,25,49,23,1,0,123,0,23,17,25,5,23,1,25,9,23,4,0,25,26,0,23,37,38,2,0,44,48,1,1128,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/json.js":{"lineLengths":[25,13,0,46,13,3,28,36,26,0,23,3,25,49,23,1,0,3,25,25,23,1,0,123,0,378,0,23,56,18,25,5,23,1,25,9,23,97,105,0,25,28,0,23,32,19,25,5,23,1,25,8,23,10,0,39,27,21,25,15,64,62,76,27,3,12,29,57,6,28,137,2,0,42,10,29,9,27,5,29,13,27,106,4,2,0,44,48,98,95,0,0,68,22,44,0,17,29,3,0,8,0,41,27,33,5,3,0,23,0,63,20,45,44,0,41,89,5,0,16,27,28,3,0,26,23,3,0,6,27,10,25,38,20,26,44,0,24,13,0,23,32,37,30,7,5,0,22,0,48,27,96,5,0,16,27,10,27,3,0,26,1,8576,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":"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","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/diff/array.js":{"lineLengths":[25,13,0,46,13,3,32,27,0,23,3,25,49,23,1,0,123,0,23,19,25,5,23,1,25,9,23,4,0,25,30,0,23,39,23,2,0,59,15,2,0,47,50,1,1376,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/apply.js":{"lineLengths":[25,13,0,46,13,3,32,36,0,23,3,25,27,23,1,0,3,25,80,23,1,0,123,0,23,38,27,5,25,83,0,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,31,29,68,5,0,25,34,0,0,50,62,28,95,27,3,12,29,27,6,4,21,43,18,17,18,15,5,61,5,0,0,34,49,31,54,60,0,51,31,72,23,0,40,25,11,9,0,16,7,5,0,16,71,0,0,42,24,47,24,43,18,29,7,27,0,29,21,27,5,29,13,27,32,0,65,48,44,14,7,5,0,36,19,80,39,0,0,58,24,0,0,21,0,45,26,64,0,50,0,50,32,54,60,46,0,30,17,37,32,37,34,37,41,48,17,38,82,0,40,29,47,26,9,7,5,37,0,0,20,38,18,23,5,24,19,26,3,0,49,43,3,0,24,63,0,0,41,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,23,0,27,40,0,17,32,5,0,50,16,37,7,0,60,61,18,39,9,0,23,9,7,3,0,17,1,14196,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":"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","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/parse.js":{"lineLengths":[25,13,0,46,13,3,32,0,23,30,27,5,25,83,53,63,16,12,0,25,19,44,0,32,76,0,47,14,21,0,0,73,0,19,32,7,0,10,80,79,0,0,27,42,0,21,0,32,29,0,57,14,37,38,43,58,81,14,12,7,5,66,18,0,0,35,62,0,21,62,46,52,0,36,59,7,0,47,59,10,5,20,53,0,0,24,29,39,90,16,32,76,32,76,16,24,60,59,64,0,30,25,5,0,30,25,5,0,21,24,0,37,84,88,149,14,7,0,94,0,94,36,56,0,32,21,39,24,39,21,24,9,14,14,7,42,0,0,43,24,5,0,46,24,41,0,0,25,39,101,7,0,42,103,7,5,0,16,3,0,30,17,3,0,14,1,13176,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":";;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,OAApB,EAA2C;AAAA;AAAA;AAAA;AAAdC,EAAAA,OAAc,uEAAJ,EAAI;AAChD,MAAIC,OAAO,GAAGF,OAAO,CAACG,KAAR,CAAc,qBAAd,CAAd;AAAA,MACIC,UAAU,GAAGJ,OAAO,CAACK,KAAR,CAAc,sBAAd,KAAyC,EAD1D;AAAA,MAEIC,IAAI,GAAG,EAFX;AAAA,MAGIC,CAAC,GAAG,CAHR;;AAKA,WAASC,UAAT,GAAsB;AACpB,QAAIC,KAAK,GAAG,EAAZ;AACAH,IAAAA,IAAI,CAACI,IAAL,CAAUD,KAAV,EAFoB,CAIpB;;AACA,WAAOF,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzB,UAAIC,IAAI,GAAGV,OAAO,CAACK,CAAD,CAAlB,CADyB,CAGzB;;AACA,UAAK,uBAAD,CAA0BM,IAA1B,CAA+BD,IAA/B,CAAJ,EAA0C;AACxC;AACD,OANwB,CAQzB;;;AACA,UAAIE,MAAM,GAAI,0CAAD,CAA6CC,IAA7C,CAAkDH,IAAlD,CAAb;;AACA,UAAIE,MAAJ,EAAY;AACVL,QAAAA,KAAK,CAACA,KAAN,GAAcK,MAAM,CAAC,CAAD,CAApB;AACD;;AAEDP,MAAAA,CAAC;AACF,KApBmB,CAsBpB;AACA;;;AACAS,IAAAA,eAAe,CAACP,KAAD,CAAf;AACAO,IAAAA,eAAe,CAACP,KAAD,CAAf,CAzBoB,CA2BpB;;AACAA,IAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;;AAEA,WAAOV,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzB,UAAIC,KAAI,GAAGV,OAAO,CAACK,CAAD,CAAlB;;AAEA,UAAK,gCAAD,CAAmCM,IAAnC,CAAwCD,KAAxC,CAAJ,EAAmD;AACjD;AACD,OAFD,MAEO,IAAK,KAAD,CAAQC,IAAR,CAAaD,KAAb,CAAJ,EAAwB;AAC7BH,QAAAA,KAAK,CAACQ,KAAN,CAAYP,IAAZ,CAAiBQ,SAAS,EAA1B;AACD,OAFM,MAEA,IAAIN,KAAI,IAAIX,OAAO,CAACkB,MAApB,EAA4B;AACjC;AACA,cAAM,IAAIC,KAAJ,CAAU,mBAAmBb,CAAC,GAAG,CAAvB,IAA4B,GAA5B,GAAkCc,IAAI,CAACC,SAAL,CAAeV,KAAf,CAA5C,CAAN;AACD,OAHM,MAGA;AACLL,QAAAA,CAAC;AACF;AACF;AACF,GAlD+C,CAoDhD;AACA;;;AACA,WAASS,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,QAAMc,UAAU,GAAI,uBAAD,CAA0BR,IAA1B,CAA+Bb,OAAO,CAACK,CAAD,CAAtC,CAAnB;;AACA,QAAIgB,UAAJ,EAAgB;AACd,UAAIC,SAAS,GAAGD,UAAU,CAAC,CAAD,CAAV,KAAkB,KAAlB,GAA0B,KAA1B,GAAkC,KAAlD;AACA,UAAME,IAAI,GAAGF,UAAU,CAAC,CAAD,CAAV,CAAcpB,KAAd,CAAoB,IAApB,EAA0B,CAA1B,CAAb;AACA,UAAIuB,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,OAAhB,EAAyB,IAAzB,CAAf;;AACA,UAAK,QAAD,CAAWd,IAAX,CAAgBa,QAAhB,CAAJ,EAA+B;AAC7BA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBF,QAAQ,CAACf,MAAT,GAAkB,CAArC,CAAX;AACD;;AACDF,MAAAA,KAAK,CAACe,SAAS,GAAG,UAAb,CAAL,GAAgCE,QAAhC;AACAjB,MAAAA,KAAK,CAACe,SAAS,GAAG,QAAb,CAAL,GAA8B,CAACC,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAZ,EAAgBI,IAAhB,EAA9B;AAEAtB,MAAAA,CAAC;AACF;AACF,GApE+C,CAsEhD;AACA;;;AACA,WAASW,SAAT,GAAqB;AACnB,QAAIY,gBAAgB,GAAGvB,CAAvB;AAAA,QACIwB,eAAe,GAAG7B,OAAO,CAACK,CAAC,EAAF,CAD7B;AAAA,QAEIyB,WAAW,GAAGD,eAAe,CAAC5B,KAAhB,CAAsB,4CAAtB,CAFlB;AAIA,QAAI8B,IAAI,GAAG;AACTC,MAAAA,QAAQ,EAAE,CAACF,WAAW,CAAC,CAAD,CADb;AAETG,MAAAA,QAAQ,EAAE,OAAOH,WAAW,CAAC,CAAD,CAAlB,KAA0B,WAA1B,GAAwC,CAAxC,GAA4C,CAACA,WAAW,CAAC,CAAD,CAFzD;AAGTI,MAAAA,QAAQ,EAAE,CAACJ,WAAW,CAAC,CAAD,CAHb;AAITK,MAAAA,QAAQ,EAAE,OAAOL,WAAW,CAAC,CAAD,CAAlB,KAA0B,WAA1B,GAAwC,CAAxC,GAA4C,CAACA,WAAW,CAAC,CAAD,CAJzD;AAKTM,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,cAAc,EAAE;AANP,KAAX,CALmB,CAcnB;AACA;AACA;;AACA,QAAIN,IAAI,CAACE,QAAL,KAAkB,CAAtB,EAAyB;AACvBF,MAAAA,IAAI,CAACC,QAAL,IAAiB,CAAjB;AACD;;AACD,QAAID,IAAI,CAACI,QAAL,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,IAAI,CAACG,QAAL,IAAiB,CAAjB;AACD;;AAED,QAAII,QAAQ,GAAG,CAAf;AAAA,QACIC,WAAW,GAAG,CADlB;;AAEA,WAAOlC,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2BJ,CAAC,EAA5B,EAAgC;AAC9B;AACA;AACA,UAAIL,OAAO,CAACK,CAAD,CAAP,CAAWmC,OAAX,CAAmB,MAAnB,MAA+B,CAA/B,IACMnC,CAAC,GAAG,CAAJ,GAAQL,OAAO,CAACS,MADtB,IAEKT,OAAO,CAACK,CAAC,GAAG,CAAL,CAAP,CAAemC,OAAf,CAAuB,MAAvB,MAAmC,CAFxC,IAGKxC,OAAO,CAACK,CAAC,GAAG,CAAL,CAAP,CAAemC,OAAf,CAAuB,IAAvB,MAAiC,CAH1C,EAG6C;AACzC;AACH;;AACD,UAAIC,SAAS,GAAIzC,OAAO,CAACK,CAAD,CAAP,CAAWI,MAAX,IAAqB,CAArB,IAA0BJ,CAAC,IAAKL,OAAO,CAACS,MAAR,GAAiB,CAAlD,GAAwD,GAAxD,GAA8DT,OAAO,CAACK,CAAD,CAAP,CAAW,CAAX,CAA9E;;AAEA,UAAIoC,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,GAAnC,IAA0CA,SAAS,KAAK,GAAxD,IAA+DA,SAAS,KAAK,IAAjF,EAAuF;AACrFV,QAAAA,IAAI,CAACK,KAAL,CAAW5B,IAAX,CAAgBR,OAAO,CAACK,CAAD,CAAvB;AACA0B,QAAAA,IAAI,CAACM,cAAL,CAAoB7B,IAApB,CAAyBN,UAAU,CAACG,CAAD,CAAV,IAAiB,IAA1C;;AAEA,YAAIoC,SAAS,KAAK,GAAlB,EAAuB;AACrBH,UAAAA,QAAQ;AACT,SAFD,MAEO,IAAIG,SAAS,KAAK,GAAlB,EAAuB;AAC5BF,UAAAA,WAAW;AACZ,SAFM,MAEA,IAAIE,SAAS,KAAK,GAAlB,EAAuB;AAC5BH,UAAAA,QAAQ;AACRC,UAAAA,WAAW;AACZ;AACF,OAZD,MAYO;AACL;AACD;AACF,KApDkB,CAsDnB;;;AACA,QAAI,CAACD,QAAD,IAAaP,IAAI,CAACI,QAAL,KAAkB,CAAnC,EAAsC;AACpCJ,MAAAA,IAAI,CAACI,QAAL,GAAgB,CAAhB;AACD;;AACD,QAAI,CAACI,WAAD,IAAgBR,IAAI,CAACE,QAAL,KAAkB,CAAtC,EAAyC;AACvCF,MAAAA,IAAI,CAACE,QAAL,GAAgB,CAAhB;AACD,KA5DkB,CA8DnB;;;AACA,QAAIlC,OAAO,CAACkB,MAAZ,EAAoB;AAClB,UAAIqB,QAAQ,KAAKP,IAAI,CAACI,QAAtB,EAAgC;AAC9B,cAAM,IAAIjB,KAAJ,CAAU,sDAAsDU,gBAAgB,GAAG,CAAzE,CAAV,CAAN;AACD;;AACD,UAAIW,WAAW,KAAKR,IAAI,CAACE,QAAzB,EAAmC;AACjC,cAAM,IAAIf,KAAJ,CAAU,wDAAwDU,gBAAgB,GAAG,CAA3E,CAAV,CAAN;AACD;AACF;;AAED,WAAOG,IAAP;AACD;;AAED,SAAO1B,CAAC,GAAGL,OAAO,CAACS,MAAnB,EAA2B;AACzBH,IAAAA,UAAU;AACX;;AAED,SAAOF,IAAP;AACD","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[25,13,0,46,13,3,30,0,23,63,65,47,8,25,8,23,27,25,32,31,22,30,43,30,22,14,28,79,71,0,0,43,27,7,0,30,5,0,29,30,27,82,31,0,0,43,30,7,0,31,24,80,51,0,4,1,3156,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/merge.js":{"lineLengths":[25,13,0,46,13,3,38,22,0,23,3,25,29,23,1,0,3,25,27,23,1,0,3,25,33,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,30,27,28,25,34,47,47,0,31,29,10,25,3,0,31,29,10,25,3,1,0,36,31,35,98,83,34,0,35,43,3,0,47,33,87,63,63,57,57,42,51,41,41,37,37,12,38,79,79,73,73,5,3,0,17,20,22,21,23,0,78,48,24,6,54,24,6,0,49,65,57,18,66,56,65,61,20,68,12,38,24,73,20,101,20,17,8,115,20,18,33,5,3,0,13,1,0,33,34,55,14,33,11,31,0,33,14,31,9,33,19,31,18,8,5,0,16,74,5,0,12,31,9,29,0,31,13,29,7,31,22,29,41,6,3,0,15,1,0,33,70,1,0,43,24,16,10,26,12,17,20,6,3,1,0,34,90,1,0,34,10,28,28,37,28,21,4,1,0,75,91,74,14,23,21,12,4,15,24,22,12,34,0,35,118,0,78,45,48,0,117,26,38,67,31,22,0,29,22,0,31,0,29,0,31,20,29,29,31,17,29,7,31,25,29,28,67,31,23,0,29,24,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,29,67,31,33,67,32,39,46,25,35,19,20,12,25,64,5,46,0,0,29,30,22,1,0,42,38,42,0,58,72,8,29,7,27,0,29,10,27,5,29,20,27,112,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,18,0,13,15,29,7,27,0,29,10,27,5,29,20,27,114,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,21,0,13,5,13,27,5,25,0,27,8,25,3,27,13,25,30,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,16,0,11,3,0,42,1,0,43,38,54,0,28,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,26,10,85,3,1,0,38,23,19,19,15,17,5,1,0,45,78,44,26,20,3,1,0,39,46,44,26,3,1,0,31,15,46,0,44,145,0,47,22,5,0,32,21,20,12,12,5,3,0,13,1,0,46,19,18,21,29,25,0,80,42,85,0,27,12,5,0,57,23,86,50,0,28,24,0,33,29,44,7,5,0,47,27,20,12,24,5,3,0,70,22,3,0,19,19,3,0,44,44,3,0,10,19,20,4,1,0,30,49,37,11,1,0,58,35,82,0,63,19,5,3,0,23,14,1,0,37,19,19,33,35,51,56,0,35,55,39,16,31,9,7,0,35,55,39,16,31,9,7,12,75,19,7,0,75,19,7,5,5,10,23,22,4,1,34588,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/patch/create.js":{"lineLengths":[25,13,0,46,13,3,42,34,50,34,0,23,3,25,31,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,99,17,17,3,0,47,24,3,0,12,27,5,25,0,27,7,25,3,27,12,25,28,13,14,13,53,0,32,39,25,7,3,0,17,24,24,20,18,18,0,27,29,25,6,26,78,26,0,43,31,20,0,29,53,27,31,32,32,0,19,97,43,43,9,29,0,0,31,0,29,0,31,18,29,27,31,15,29,7,31,25,29,34,51,46,0,0,26,32,14,32,7,12,52,26,76,73,35,25,0,33,24,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,32,16,35,25,0,33,37,68,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,54,0,22,36,60,36,60,27,12,0,72,38,51,51,86,0,72,99,80,80,13,0,70,60,13,11,0,27,28,28,24,9,7,0,30,30,5,4,0,41,29,10,27,7,3,0,10,29,29,25,25,16,4,1,0,28,15,0,45,43,3,0,82,109,109,0,47,83,59,64,0,30,25,5,0,30,25,5,0,112,36,3,0,31,1,0,103,111,1,0,79,96,1,15220,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","ret","apply","join","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/util/array.js":{"lineLengths":[25,13,0,46,13,3,32,42,0,23,27,30,17,3,0,31,1,0,40,36,17,3,0,42,32,19,5,3,0,14,1,1476,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,65,39,15,13,16,0,44,24,0,23,20,32,21,12,20,5,0,40,3,0,13,1,1644,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/lib/convert/xml.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,39,15,0,44,28,0,23,24,32,24,5,0,39,0,23,25,32,25,5,3,0,22,1,0,24,12,31,30,30,32,11,1,2564,0],"data":{"version":3,"sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///opt/hostedtoolcache/node/18.20.2/x64/lib/node_modules/bob/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/index.mjs":{"lineLengths":[86,7,35,38,41,48,46,54,44,7,54,6,91,98,97,142,150,91,91,105,108,120,185,7,226,35,223,9,25,19,25,20,20,60,10,76,479,9,15,37,64,41,43,33,11,53,39,51,41,43,41,53,43,51,39,45,32,29,41,31,5,20,42,5,26,16,42,53,43,44,10,5,23,58,5,1,12,19,40,34,54,68,52,44,44,46,48,56,56,60,66,31,43,269,35,47,20,34,46,41,27,39,29,49,31,29,41,31,39,39,27,33,41,28,22,34],"data":{"version":3,"file":"index.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/index.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/core.mjs":{"lineLengths":[114,76,97,182,110,2,107,97,183,98,2,25,40,41,119,80,48,107,44,31,31,90,85,84,42,91,9,66,5,66,34,20,5,41,24,5,61,114,17,43,81,20,5,39,77,63,16,1,3,62,32,3,41,72,28,85,86,36,26,11,47,43,5,28,113,5,7,71,12,6,74,52,6,59,63,78,65,48,7,18,60,5,7,69,6,78,40,6,6,59,63,78,65,48,7,26,86,34,5,13,34,79,9,34,5,35,58,5,23,46,5,24,47,5,1,24,74,42,31,76,67,35,45,5,23,18,5,7,66,6,9,36,38,9,7,26,16,39,47,46,36,38,10,5,7,56,7,47,29,49,5,21,53,5,22,54,5,23,55,5,21,53,5,24,56,5,39,95,5,34,75,5,34,39,48,66,13,53,50,53,49,13,9,20,5,27,71,70,66,23,64,47,33,64,56,86,47,62,65,79,113,79,55,56,9,57,40,70,69,9,82,21,19,40,32,51,75,53,43,10,37,5,56,30,28,57,9,60,52,45,70,68,46,9,50,26,5,7,78,7,37,7,70,6,82,54,7,55,27,29,42,84,34,5,54,66,5,47,75,5,55,43,39,69,9,43,65,57,52,38,42,9,49,103,40,42,46,13,35,68,13,49,54,13,62,9,72,27,65,88,98,85,13,87,46,61,111,106,100,22,9,49,5,35,56,52,5,27,41,25,114,49,40,50,9,74,52,9,30,5,27,36,65,36,103,81,13,33,53,13,332,10,23,5,55,50,19,71,65,39,104,82,28,34,12,5,24,37,5,27,46,73,71,41,24,42,25,37,36,24,34,36,24,32,36,24,33,35,24,21,5,68,26,123,75,37,65,43,42,13,9,110,66,49,64,48,54,13,18,74,13,9,94,66,82,69,98,9,35,63,5,70,38,34,57,64,98,78,48,44,5,20,56,5,1,27,50,47,72,31,33,25,5,19,47,26,25,43,5,25,45,24,123,9,48,76,77,9,37,112,48,58,13,42,55,9,123,5,24,68,24,19,36,44,23,9,5,77,52,58,27,13,9,5,1,3,92,2,101,2,53,25,7,3,45,40,124,5,7,69,6,57,29,11,7,37,32,40,23,9,5,1,51,40,17,25,27,40,60,10,7,2,89,85,72,28,17,15,16,15,18,21,17,18,20,17,25,27,24,2,42,38,23,27,70,2,37,60,16,37,51,63,63,42,125,10,5,45,16,37,51,40,55,42,59,10,5,23,110,16,37,51,66,60,42,59,10,5,41,22,16,37,51,40,42,68,63,10,5,52,12,33,47,36,38,41,49,6,2,142,27,57,20,5,36,29,73,71,77,77,79,104,6,38,53,56,20,40,40,40,75,9,5,16,1,33,17,56,17,55,23,21,44,21,23,21,47,23,13,31,21,2,41,22,60,22,55,54,38,56,61,53,82,33,21,31,25,30,23,29,25,31,25,31,25,29,23,17,35,21,2,21,34,78,2,35,9,32,5,17,25,5,2,39,66,32,44,2,79,46,56,60,5,16,68,5,13,2,37,29,19,26,2,41,22,93,17,2,3,32,2,43,2,89,3,33,41,55,5,38,44,5,21,2,41,34,33,34,35,93,2,39,34,21,34,33,93,2,41,35,21,34,32,26,2,46,30,25,5,32,2,44,30,25,5,30,2,46,30,25,5,32,2,39,33,13,20,25,21,16,1,61,34,58,1,3,57,39,43,42,3,53,33,35,21,41,22,21,34,27,43,9,37,42,9,5,1,40,79,55,5,1,3,38,3,21,75,43,50,30,7,2,41,12,17,36,21,49,21,42,2,47,46,2,55,50,37,79,58,95,94,43,24,29,13,9,5,57,53,39,38,36,114,32,13,25,9,5,55,2,3,37,3,34,13,18,40,51,5,38,25,5,99,2,28,73,1,33],"data":{"version":3,"file":"core.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/core.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/error.mjs":{"lineLengths":[86,41,40,1,43,50,65,29,31,52,27,26,35,37,35,5,48,36,47,29,47,43,26,28,38,9,21,53,9,18,23,9,42,5,62,22,81,9,47,29,72,9,29,76,9,29,78,9,29,70,9,29,70,9,29,81,9,29,71,9,28,76,9,61,5,1,49,35,82,32,5,1,50,37,79,32,72,21,18,31,5,1,67,35,60,5,1,47,19,28,26,5,1,51,19,28,26,5,1,53,19,28,26,5,1,45,19,28,26,5,1,45,19,28,26,5,1,56,19,28,26,5,1,46,19,28,26,5,1,51,1,34],"data":{"version":3,"file":"error.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/error.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/uploads.mjs":{"lineLengths":[97,50,57,32,36,37,53,32,37,45,22,3,98,81,3,53,32,37,37,39,40,44,40,79,2,3,110,147,121,49,61,68,52,3,52,37,24,57,107,32,40,92,47,5,39,54,24,35,39,43,9,5,41,1,32,19,36,73,39,26,5,33,46,5,86,7,42,60,9,5,10,97,54,5,17,1,31,52,56,1,25,51,51,28,68,1,41,30,17,61,25,21,2,139,135,3,108,39,3,65,39,20,45,50,2,60,45,50,2,43,32,104,16,2,39,28,20,29,46,45,32,45,28,9,5,17,2,50,28,15,24,116,5,45,95,40,5,35,41,31,5,36,87,5,41,116,5,10,149,5,2,36],"data":{"version":3,"file":"uploads.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/uploads.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/pagination.mjs":{"lineLengths":[86,42,3,79,3,40,50,47,36,34,5,25,31,5,54,7,85,51,7,22,20,5,20,20,5,1,46,50,47,36,5,25,31,5,54,22,41,18,24,29,31,65,40,24,22,5,20,46,27,24,9,45,18,24,9,41,5,1,39],"data":{"version":3,"file":"pagination.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/pagination.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,YAAY,EAAsD;AAQ3E;;GAEG;AACH,MAAM,OAAO,IAAW,SAAQ,YAAkB;IAKhD,YAAY,MAAiB,EAAE,QAAkB,EAAE,IAAwB,EAAE,OAA4B;QACvG,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,kDAAkD;IAClD;;;OAGG;IACH,cAAc;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAYD,MAAM,OAAO,UACX,SAAQ,YAAkB;IAK1B,YACE,MAAiB,EACjB,QAAkB,EAClB,IAA8B,EAC9B,OAA4B;QAE5B,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,kDAAkD;IAClD,cAAc;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;QACvB,IAAI,QAAQ,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC7C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY;QACV,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;QACrC,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,IAAI,CAAC;SACb;QAED,OAAO,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;IACnC,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/index.mjs":{"lineLengths":[86,33,29,42,54,39,49,46,54,59,39,50,48,34],"data":{"version":3,"file":"index.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/index.ts"],"names":[],"mappings":"AAAA,sFAAsF;;;OAI/E,EAAE,KAAK,EAAE;OACT,EAML,WAAW,EACX,OAAO,GACR;OACM,EAAE,IAAI,EAAE;OACR,EAOL,WAAW,GACZ;OACM,EAA6D,UAAU,EAAE;OACzE,EAML,eAAe,EACf,KAAK,GACN;OACM,EAAE,UAAU,EAAE;OACd,EAML,MAAM,GACP;OACM,EAAuB,UAAU,EAAE,MAAM,EAAE;OAC3C,EAAgE,WAAW,EAAE"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/version.mjs":{"lineLengths":[60,36],"data":{"version":3,"file":"version.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/version.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,2BAA2B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/streaming.mjs":{"lineLengths":[52,42,40,21,39,33,37,5,50,29,36,27,108,13,28,29,17,81,29,33,56,36,33,21,45,33,29,56,25,35,90,66,36,25,49,92,25,35,21,26,33,29,56,25,35,90,66,36,25,74,51,95,25,63,21,17,28,13,23,98,66,27,24,13,21,67,26,39,13,9,48,5,7,65,39,7,59,29,37,50,69,45,63,31,17,13,53,27,13,9,36,27,108,13,28,29,17,55,29,33,29,47,17,28,13,23,98,66,27,24,13,21,67,26,39,13,9,48,5,30,31,5,7,54,51,7,11,24,25,41,40,20,29,45,55,42,43,21,41,18,14,10,16,65,66,10,5,7,68,44,81,7,24,26,17,42,35,27,52,14,30,21,62,29,44,79,40,17,29,36,17,14,28,38,14,11,5,1,63,25,27,83,5,40,42,60,55,58,48,20,26,9,5,45,44,16,22,5,1,3,69,65,3,41,32,41,28,21,9,80,73,24,71,26,46,23,25,70,46,44,9,5,26,19,5,1,41,84,77,47,31,32,49,65,19,25,9,67,19,25,9,37,40,36,41,40,23,25,9,5,14,1,18,19,26,23,25,5,18,34,54,9,20,73,49,28,25,34,43,33,14,30,27,29,23,9,31,35,24,9,57,36,39,9,36,31,9,40,34,9,20,5,1,3,84,27,2,104,3,19,19,25,32,5,19,42,30,31,36,9,34,35,37,9,20,22,9,91,59,79,43,30,24,9,53,39,22,9,37,73,29,9,31,46,9,21,5,23,26,22,38,25,16,44,42,40,13,46,53,13,229,9,18,49,78,81,54,13,158,9,128,5,13,54,22,9,45,25,32,21,5,1,18,50,44,71,39,38,21,33,45,5,17,1,36,41,23,93,5,25,1,3,74,80,2,120,3,53,37,22,38,12,22,17,51,33,84,30,13,23,81,24,13,10,24,50,33,32,52,10,34,24,10,6,1,38],"data":{"version":3,"file":"streaming.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/streaming.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/index.mjs":{"lineLengths":[86,49,34,34],"data":{"version":3,"file":"index.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/chat/index.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EA2BL,WAAW,GACZ;OACM,EAAa,IAAI,EAAE"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/shared.mjs":{"lineLengths":[86,10,35],"data":{"version":3,"file":"shared.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/shared.ts"],"names":[],"mappings":"AAAA,sFAAsF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/audio.mjs":{"lineLengths":[86,46,59,75,71,40,19,28,81,75,57,5,1,19,60,54,36,26,34],"data":{"version":3,"file":"audio.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/audio/audio.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,KAAK,SAAS,MAAM,+BAA+B;OACnD,KAAK,iBAAiB,MAAM,uCAAuC;OACnE,KAAK,eAAe,MAAM,qCAAqC;AAEtE,MAAM,OAAO,KAAM,SAAQ,WAAW;IAAtC;;QACE,mBAAc,GAAqC,IAAI,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtG,iBAAY,GAAiC,IAAI,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5F,WAAM,GAAqB,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChE,CAAC;CAAA;AAED,WAAiB,KAAK;IACN,oBAAc,GAAG,iBAAiB,CAAC,cAAc,CAAC;IAGlD,kBAAY,GAAG,eAAe,CAAC,YAAY,CAAC;IAG5C,YAAM,GAAG,SAAS,CAAC,MAAM,CAAC;AAE1C,CAAC,EATgB,KAAK,KAAL,KAAK,QASrB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/batches.mjs":{"lineLengths":[86,46,47,55,47,42,7,69,7,27,67,5,7,25,7,32,64,5,31,38,40,9,87,5,7,36,7,30,72,5,1,45,1,21,49,30,36],"data":{"version":3,"file":"batches.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/batches.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,UAAU,MAAM,0BAA0B;OAC/C,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,OAAQ,SAAQ,WAAW;IACtC;;OAEG;IACH,MAAM,CAAC,IAAuB,EAAE,OAA6B;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,OAAe,EAAE,OAA6B;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAOD,IAAI,CACF,QAA+C,EAAE,EACjD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,OAAe,EAAE,OAA6B;QACnD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,OAAO,SAAS,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC;CACF;AAED,MAAM,OAAO,WAAY,SAAQ,UAAiB;CAAG;AAmMrD,WAAiB,OAAO;IAIR,mBAAW,GAAG,UAAU,CAAC,WAAW,CAAC;AAGrD,CAAC,EAPgB,OAAO,KAAP,OAAO,QAOvB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/beta.mjs":{"lineLengths":[86,46,66,59,68,85,39,19,28,75,51,69,60,5,1,18,53,61,29,47,55,38,24,33],"data":{"version":3,"file":"beta.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/beta.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,KAAK,aAAa,MAAM,kCAAkC;OAC1D,KAAK,OAAO,MAAM,iCAAiC;OACnD,KAAK,UAAU,MAAM,uCAAuC;OAC5D,KAAK,eAAe,MAAM,mDAAmD;AAEpF,MAAM,OAAO,IAAK,SAAQ,WAAW;IAArC;;QACE,iBAAY,GAAiC,IAAI,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5F,SAAI,GAAiB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,eAAU,GAA6B,IAAI,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClF,YAAO,GAAuB,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;CAAA;AAED,WAAiB,IAAI;IACL,iBAAY,GAAG,eAAe,CAAC,YAAY,CAAC;IAG5C,qBAAgB,GAAG,eAAe,CAAC,gBAAgB,CAAC;IAIpD,SAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IACpB,eAAU,GAAG,aAAa,CAAC,UAAU,CAAC;IAYtC,mBAAc,GAAG,aAAa,CAAC,cAAc,CAAC;IAI9C,YAAO,GAAG,UAAU,CAAC,OAAO,CAAC;AAe7C,CAAC,EAxCgB,IAAI,KAAJ,IAAI,QAwCpB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/completions.mjs":{"lineLengths":[86,46,46,27,101,5,1,25,38,40],"data":{"version":3,"file":"completions.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/completions.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAI/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;AAI7C,MAAM,OAAO,WAAY,SAAQ,WAAW;IAa1C,MAAM,CACJ,IAA4B,EAC5B,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE,CAEzD,CAAC;IACrC,CAAC;CACF;AA8RD,WAAiB,WAAW;AAO5B,CAAC,EAPgB,WAAW,KAAX,WAAW,QAO3B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/embeddings.mjs":{"lineLengths":[86,46,45,7,63,7,27,70,5,1,24,36,39],"data":{"version":3,"file":"embeddings.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/embeddings.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;AAG7C,MAAM,OAAO,UAAW,SAAQ,WAAW;IACzC;;OAEG;IACH,MAAM,CACJ,IAA2B,EAC3B,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IAChE,CAAC;CACF;AAwGD,WAAiB,UAAU;AAI3B,CAAC,EAJgB,UAAU,KAAV,UAAU,QAI1B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/files.mjs":{"lineLengths":[86,46,47,36,57,51,58,41,40,7,83,62,6,86,26,85,87,22,6,82,22,7,27,94,5,7,49,7,31,61,5,31,38,40,9,89,5,7,21,7,26,64,5,7,50,7,30,100,5,7,50,6,65,7,38,61,23,73,11,5,7,76,7,89,75,33,43,67,38,43,47,53,119,19,13,9,20,5,1,3,79,3,43,1,19,53,26,34],"data":{"version":3,"file":"files.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/files.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OAEvC,EAAE,KAAK,EAAE,MAAM,aAAa;OAC5B,EAAE,yBAAyB,EAAE,MAAM,cAAc;OACjD,KAAK,QAAQ,MAAM,wBAAwB;OAC3C,EAAmB,2BAA2B,EAAE,MAAM,aAAa;OACnE,EAAE,IAAI,EAAE,MAAM,mBAAmB;AAExC,MAAM,OAAO,KAAM,SAAQ,WAAW;IACpC;;;;;;;;;;;;OAYG;IACH,MAAM,CAAC,IAAsB,EAAE,OAA6B;QAC1D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,2BAA2B,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;IACxF,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,MAAc,EAAE,OAA6B;QACpD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAOD,IAAI,CACF,QAA8C,EAAE,EAChD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,eAAe,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACnF,CAAC;IAED;;OAEG;IACH,GAAG,CAAC,MAAc,EAAE,OAA6B;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,MAAc,EAAE,OAA6B;QACnD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,UAAU,EAAE,EAAE,GAAG,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,MAAc,EAAE,OAA6B;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,UAAU,EAAE;YAClD,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SAC7D,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,iBAAiB,CACrB,EAAU,EACV,EAAE,YAAY,GAAG,IAAI,EAAE,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,KAAkD,EAAE;QAEnG,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QAEnE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEnC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACxD,MAAM,KAAK,CAAC,YAAY,CAAC,CAAC;YAE1B,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,OAAO,EAAE;gBAChC,MAAM,IAAI,yBAAyB,CAAC;oBAClC,OAAO,EAAE,iCAAiC,EAAE,+BAA+B,OAAO,gBAAgB;iBACnG,CAAC,CAAC;aACJ;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,eAAgB,SAAQ,IAAgB;CAAG;AAsFxD,WAAiB,KAAK;IAIN,qBAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;AAG3D,CAAC,EAPgB,KAAK,KAAL,KAAK,QAOrB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/fine-tuning.mjs":{"lineLengths":[86,46,66,45,19,28,51,5,1,24,35,63,73,36,40],"data":{"version":3,"file":"fine-tuning.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/fine-tuning/fine-tuning.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,KAAK,OAAO,MAAM,wCAAwC;AAEjE,MAAM,OAAO,UAAW,SAAQ,WAAW;IAA3C;;QACE,SAAI,GAAiB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;CAAA;AAED,WAAiB,UAAU;IACX,eAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAMpB,6BAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAChD,kCAAuB,GAAG,OAAO,CAAC,uBAAuB,CAAC;AAI1E,CAAC,EAZgB,UAAU,KAAV,UAAU,QAY1B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/images.mjs":{"lineLengths":[86,46,58,41,7,44,7,36,106,5,7,80,7,25,101,5,7,39,7,29,78,5,1,20,28,35],"data":{"version":3,"file":"images.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/images.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAEtC,EAAmB,2BAA2B,EAAE,MAAM,aAAa;AAE1E,MAAM,OAAO,MAAO,SAAQ,WAAW;IACrC;;OAEG;IACH,eAAe,CACb,IAAgC,EAChC,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,2BAA2B,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;IACpG,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,IAAqB,EAAE,OAA6B;QACvD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,2BAA2B,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,IAAyB,EAAE,OAA6B;QAC/D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACxE,CAAC;CACF;AAiLD,WAAiB,MAAM;AAMvB,CAAC,EANgB,MAAM,KAAN,MAAM,QAMtB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/models.mjs":{"lineLengths":[86,46,53,41,41,7,86,35,7,30,61,5,7,86,46,7,19,71,5,7,86,22,7,25,64,5,1,3,79,3,38,1,20,45,28,35],"data":{"version":3,"file":"models.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/models.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,KAAK,SAAS,MAAM,yBAAyB;OAC7C,EAAE,IAAI,EAAE,MAAM,mBAAmB;AAExC,MAAM,OAAO,MAAO,SAAQ,WAAW;IACrC;;;OAGG;IACH,QAAQ,CAAC,KAAa,EAAE,OAA6B;QACnD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,OAA6B;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAED;;;OAGG;IACH,GAAG,CAAC,KAAa,EAAE,OAA6B;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,UAAW,SAAQ,IAAW;CAAG;AAmC9C,WAAiB,MAAM;IAGP,iBAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAClD,CAAC,EAJgB,MAAM,KAAN,MAAM,QAItB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/moderations.mjs":{"lineLengths":[86,46,46,7,49,7,27,71,5,1,25,38,40],"data":{"version":3,"file":"moderations.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/moderations.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;AAG7C,MAAM,OAAO,WAAY,SAAQ,WAAW;IAC1C;;OAEG;IACH,MAAM,CACJ,IAA4B,EAC5B,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACjE,CAAC;CACF;AAiMD,WAAiB,WAAW;AAI5B,CAAC,EAJgB,WAAW,KAAX,WAAW,QAI3B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/registry.mjs":{"lineLengths":[24,28,29,31,32,31,32,28,28,38,50,39,36,38,60,15,119,5,15,113,5,24,22,24,28,30,28,30,22,22,42,66,44,38,42,1,37],"data":{"version":3,"file":"registry.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/_shims/registry.ts"],"names":[],"mappings":"AA0BA,MAAM,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,CAAC,IAAI,IAAI,GAA8B,SAAS,CAAC;AACvD,MAAM,CAAC,IAAI,KAAK,GAA+B,SAAS,CAAC;AACzD,MAAM,CAAC,IAAI,OAAO,GAAiC,SAAS,CAAC;AAC7D,MAAM,CAAC,IAAI,QAAQ,GAAkC,SAAS,CAAC;AAC/D,MAAM,CAAC,IAAI,OAAO,GAAiC,SAAS,CAAC;AAC7D,MAAM,CAAC,IAAI,QAAQ,GAAkC,SAAS,CAAC;AAC/D,MAAM,CAAC,IAAI,IAAI,GAA8B,SAAS,CAAC;AACvD,MAAM,CAAC,IAAI,IAAI,GAA8B,SAAS,CAAC;AACvD,MAAM,CAAC,IAAI,cAAc,GAAwC,SAAS,CAAC;AAC3E,MAAM,CAAC,IAAI,0BAA0B,GAAoD,SAAS,CAAC;AACnG,MAAM,CAAC,IAAI,eAAe,GAAyC,SAAS,CAAC;AAC7E,MAAM,CAAC,IAAI,YAAY,GAAsC,SAAS,CAAC;AACvE,MAAM,CAAC,IAAI,cAAc,GAAwC,SAAS,CAAC;AAE3E,MAAM,UAAU,QAAQ,CAAC,KAAY,EAAE,UAA6B,EAAE,IAAI,EAAE,KAAK,EAAE;IACjF,IAAI,IAAI,EAAE;QACR,MAAM,IAAI,KAAK,CACb,mCAAmC,KAAK,CAAC,IAAI,gDAAgD,CAC9F,CAAC;KACH;IACD,IAAI,IAAI,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,gCAAgC,KAAK,CAAC,IAAI,oCAAoC,IAAI,KAAK,CAAC,CAAC;KAC1G;IACD,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IACpB,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAClB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACpB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACxB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAC1B,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACxB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAClB,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAClB,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;IACtC,0BAA0B,GAAG,KAAK,CAAC,0BAA0B,CAAC;IAC9D,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;IACxC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;IAClC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;AACxC,CAAC"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/auto/runtime-node.mjs":{"lineLengths":[36,41],"data":{"version":3,"file":"runtime-node.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/_shims/auto/runtime-node.ts"],"names":[],"mappings":""},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/completions.mjs":{"lineLengths":[86,46,46,27,106,5,1,25,38,40],"data":{"version":3,"file":"completions.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/chat/completions.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAI/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;AAO7C,MAAM,OAAO,WAAY,SAAQ,WAAW;IAgB1C,MAAM,CACJ,IAAgC,EAChC,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE,CAErD,CAAC;IAC9C,CAAC;CACF;AAs4BD,WAAiB,WAAW;AA8B5B,CAAC,EA9BgB,WAAW,KAAX,WAAW,QA8B3B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/chat/chat.mjs":{"lineLengths":[86,46,68,39,19,28,72,5,1,18,50,24,33],"data":{"version":3,"file":"chat.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/chat/chat.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAEtC,KAAK,cAAc,MAAM,mCAAmC;AAEnE,MAAM,OAAO,IAAK,SAAQ,WAAW;IAArC;;QACE,gBAAW,GAA+B,IAAI,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzF,CAAC;CAAA;AAuBD,WAAiB,IAAI;IAEL,gBAAW,GAAG,cAAc,CAAC,WAAW,CAAC;AA8BzD,CAAC,EAhCgB,IAAI,KAAJ,IAAI,QAgCpB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resource.mjs":{"lineLengths":[86,26,25,30,5,1,37],"data":{"version":3,"file":"resource.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resource.ts"],"names":[],"mappings":"AAAA,sFAAsF;AAItF,MAAM,OAAO,WAAW;IAGtB,YAAY,MAAc;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/speech.mjs":{"lineLengths":[86,46,41,7,43,7,27,96,5,1,20,28,35],"data":{"version":3,"file":"speech.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/audio/speech.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;AAI7C,MAAM,OAAO,MAAO,SAAQ,WAAW;IACrC;;OAEG;IACH,MAAM,CAAC,IAAwB,EAAE,OAA6B;QAC5D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;CACF;AAmCD,WAAiB,MAAM;AAEvB,CAAC,EAFgB,MAAM,KAAN,MAAM,QAEtB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/translations.mjs":{"lineLengths":[86,46,58,47,7,37,7,27,107,5,1,26,40,41],"data":{"version":3,"file":"translations.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/audio/translations.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAEtC,EAAmB,2BAA2B,EAAE,MAAM,aAAa;AAE1E,MAAM,OAAO,YAAa,SAAQ,WAAW;IAC3C;;OAEG;IACH,MAAM,CAAC,IAA6B,EAAE,OAA6B;QACjE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,2BAA2B,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;IACrG,CAAC;CACF;AA2CD,WAAiB,YAAY;AAG7B,CAAC,EAHgB,YAAY,KAAZ,YAAY,QAG5B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/audio/transcriptions.mjs":{"lineLengths":[86,46,58,49,7,49,7,27,109,5,1,28,44,43],"data":{"version":3,"file":"transcriptions.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/audio/transcriptions.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAEtC,EAAmB,2BAA2B,EAAE,MAAM,aAAa;AAE1E,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C;;OAEG;IACH,MAAM,CAAC,IAA+B,EAAE,OAA6B;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,2BAA2B,CAAC,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;IACvG,CAAC;CACF;AAkED,WAAiB,cAAc;AAG/B,CAAC,EAHgB,cAAc,KAAd,cAAc,QAG9B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/chat/chat.mjs":{"lineLengths":[86,46,73,39,19,28,72,5,1,18,50,24,33],"data":{"version":3,"file":"chat.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/chat/chat.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAE/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,KAAK,cAAc,MAAM,wCAAwC;AAExE,MAAM,OAAO,IAAK,SAAQ,WAAW;IAArC;;QACE,gBAAW,GAA+B,IAAI,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzF,CAAC;CAAA;AAED,WAAiB,IAAI;IACL,gBAAW,GAAG,cAAc,CAAC,WAAW,CAAC;AACzD,CAAC,EAFgB,IAAI,KAAJ,IAAI,QAEpB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/assistants.mjs":{"lineLengths":[86,46,47,66,47,45,7,57,7,27,49,17,23,77,11,5,7,30,7,36,63,23,77,11,5,7,29,7,40,64,17,23,77,11,5,31,38,40,9,71,18,23,77,11,5,7,27,7,31,66,23,77,11,5,1,48,1,24,61,36,39],"data":{"version":3,"file":"assistants.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/assistants.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,aAAa,MAAM,kCAAkC;OAM1D,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,UAAW,SAAQ,WAAW;IACzC;;OAEG;IACH,MAAM,CAAC,IAA2B,EAAE,OAA6B;QAC/D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,WAAmB,EAAE,OAA6B;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,WAAW,EAAE,EAAE;YACpD,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,CACJ,WAAmB,EACnB,IAA2B,EAC3B,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,WAAW,EAAE,EAAE;YACrD,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAUD,IAAI,CACF,QAAmD,EAAE,EACrD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,EAAE,cAAc,EAAE;YAC5D,KAAK;YACL,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,GAAG,CAAC,WAAmB,EAAE,OAA6B;QACpD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,WAAW,EAAE,EAAE;YACvD,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,UAAqB;CAAG;AA0rC5D,WAAiB,UAAU;IAYX,yBAAc,GAAG,aAAa,CAAC,cAAc,CAAC;AAI9D,CAAC,EAhBgB,UAAU,KAAV,UAAU,QAgB1B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/threads.mjs":{"lineLengths":[86,46,47,61,70,67,42,19,28,51,63,5,32,37,41,9,46,17,23,77,11,5,7,26,7,33,57,23,77,11,5,7,25,7,37,58,17,23,77,11,5,7,23,7,28,60,23,77,11,5,33,51,17,23,77,41,11,5,7,83,60,82,7,43,59,68,5,7,46,7,39,101,5,1,21,32,40,44,52,30,36],"data":{"version":3,"file":"threads.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/threads/threads.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/vector-stores.mjs":{"lineLengths":[86,46,47,85,83,70,47,47,19,28,54,72,5,7,29,7,27,52,17,23,77,11,5,7,32,7,38,68,23,77,11,5,7,31,7,42,69,17,23,77,11,5,31,38,40,9,76,18,23,77,11,5,7,29,7,33,71,23,77,11,5,1,50,1,26,69,40,70,58,40,42],"data":{"version":3,"file":"vector-stores.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/vector-stores/vector-stores.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,eAAe,MAAM,mDAAmD;OAC7E,KAAK,cAAc,MAAM,kDAAkD;OAC3E,KAAK,QAAQ,MAAM,2CAA2C;OAC9D,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,YAAa,SAAQ,WAAW;IAA7C;;QACE,UAAK,GAAmB,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,gBAAW,GAA+B,IAAI,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAqEzF,CAAC;IAnEC;;OAEG;IACH,MAAM,CAAC,IAA6B,EAAE,OAA6B;QACjE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACzC,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,aAAqB,EAAE,OAA6B;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,aAAa,EAAE,EAAE;YACzD,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,CACJ,aAAqB,EACrB,IAA6B,EAC7B,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,aAAa,EAAE,EAAE;YAC1D,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAUD,IAAI,CACF,QAAqD,EAAE,EACvD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,EAAE,gBAAgB,EAAE;YACjE,KAAK;YACL,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,GAAG,CAAC,aAAqB,EAAE,OAA6B;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,aAAa,EAAE,EAAE;YAC5D,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,gBAAiB,SAAQ,UAAuB;CAAG;AAyNhE,WAAiB,YAAY;IAGb,6BAAgB,GAAG,eAAe,CAAC,gBAAgB,CAAC;IAIpD,kBAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAGvB,iCAAoB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;IAGrD,wBAAW,GAAG,cAAc,CAAC,WAAW,CAAC;AAIzD,CAAC,EAjBgB,YAAY,KAAZ,YAAY,QAiB5B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs":{"lineLengths":[86,46,47,66,80,47,39,19,28,72,5,7,86,23,6,86,46,6,90,7,27,76,5,7,40,6,90,7,40,81,5,31,38,40,9,103,5,7,42,7,38,89,5,54,38,63,9,112,18,23,11,5,1,52,1,57,1,18,57,67,50,84,24,33],"data":{"version":3,"file":"jobs.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/fine-tuning/jobs/jobs.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,OAAO,MAAM,wCAAwC;OAC1D,KAAK,cAAc,MAAM,+CAA+C;OACxE,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,IAAK,SAAQ,WAAW;IAArC;;QACE,gBAAW,GAA+B,IAAI,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IA0EzF,CAAC;IAxEC;;;;;;;;OAQG;IACH,MAAM,CAAC,IAAqB,EAAE,OAA6B;QACzD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACtE,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,eAAuB,EAAE,OAA6B;QAC7D,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,eAAe,EAAE,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAUD,IAAI,CACF,QAA6C,EAAE,EAC/C,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,mBAAmB,EAAE,kBAAkB,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACjG,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,eAAuB,EAAE,OAA6B;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,eAAe,SAAS,EAAE,OAAO,CAAC,CAAC;IACnF,CAAC;IAcD,UAAU,CACR,eAAuB,EACvB,QAAmD,EAAE,EACrD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,qBAAqB,eAAe,SAAS,EAAE,uBAAuB,EAAE;YACrG,KAAK;YACL,GAAG,OAAO;SACX,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,kBAAmB,SAAQ,UAAyB;CAAG;AAEpE,MAAM,OAAO,uBAAwB,SAAQ,UAA8B;CAAG;AA4V9E,WAAiB,IAAI;IAML,uBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAChD,4BAAuB,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAI1D,gBAAW,GAAG,cAAc,CAAC,WAAW,CAAC;IAEzC,iCAA4B,GAAG,cAAc,CAAC,4BAA4B,CAAC;AAE3F,CAAC,EAfgB,IAAI,KAAJ,IAAI,QAepB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/node-runtime.mjs":{"lineLengths":[33,36,44,78,53,52,39,52,78,31,44,107,89,30,109,34,5,17,46,1,89,101,55,46,44,45,21,24,27,48,6,44,1,30,40,49,88,61,5,12,21,26,28,30,28,30,22,22,23,35,99,21,65,6,1,41],"data":{"version":3,"file":"node-runtime.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/_shims/node-runtime.ts"],"names":[],"mappings":"OAGO,KAAK,EAAE,MAAM,YAAY;OACzB,KAAK,EAAE,MAAM,eAAe;OAE5B,cAAc,MAAM,gBAAgB;OACpC,EAAE,eAAe,IAAI,uBAAuB,EAAE,MAAM,kBAAkB;OACtE,EAAE,UAAU,IAAI,YAAY,EAAE,MAAM,SAAS;OAE7C,EAAE,eAAe,EAAE,MAAM,mBAAmB;OAC5C,EAAE,QAAQ,EAAE,MAAM,aAAa;OAE/B,EAAE,aAAa,EAAE;OAIjB,EAAE,cAAc,EAAE,MAAM,8CAA8C;AAI7E,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAS/B,KAAK,UAAU,YAAY,CAAC,IAAY,EAAE,GAAG,IAAW;IACtD,uGAAuG;IACvG,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC;IAErF,IAAI,CAAC,kBAAkB,EAAE;QACvB,OAAO,CAAC,IAAI,CAAC,uDAAuD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrG,kBAAkB,GAAG,IAAI,CAAC;KAC3B;IACD,aAAa;IACb,OAAO,MAAM,aAAa,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,gBAAgB,GAAU,IAAI,cAAc,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AAChG,MAAM,iBAAiB,GAAU,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AAE5G,KAAK,UAAU,0BAA0B,CACvC,IAAiB,EACjB,IAAuB;IAEvB,MAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG;QACd,GAAG,IAAI,CAAC,OAAO;QACf,GAAG,OAAO,CAAC,OAAO;QAClB,gBAAgB,EAAE,OAAO,CAAC,aAAa;KACxC,CAAC;IAEF,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,IAAW,EAAE,OAAO,EAAE,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,UAAU;IACxB,oCAAoC;IACpC,IAAI,OAAO,eAAe,KAAK,WAAW,EAAE;QAC1C,gFAAgF;QAChF,UAAU,CAAC,eAAe,GAAG,uBAAuB,CAAC;KACtD;IACD,OAAO;QACL,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,EAAE,CAAC,OAAO;QACjB,OAAO,EAAE,EAAE,CAAC,OAAO;QACnB,QAAQ,EAAE,EAAE,CAAC,QAAQ;QACrB,OAAO,EAAE,EAAE,CAAC,OAAO;QACnB,QAAQ,EAAE,EAAE,CAAC,QAAQ;QACrB,IAAI,EAAE,EAAE,CAAC,IAAI;QACb,IAAI,EAAE,EAAE,CAAC,IAAI;QACb,cAAc;QACd,0BAA0B;QAC1B,eAAe,EAAE,CAAC,GAAW,EAAS,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,gBAAgB,CAAC;QACzG,YAAY;QACZ,cAAc,EAAE,CAAC,KAAU,EAAyB,EAAE,CAAC,KAAK,YAAY,YAAY;KACrF,CAAC;AACJ,CAAC"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/chat/completions.mjs":{"lineLengths":[86,46,71,71,90,90,84,71,71,46,33,26,108,9,95,5,29,26,104,9,91,5,7,39,7,27,103,5,1,40],"data":{"version":3,"file":"completions.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/chat/completions.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,oBAAoB,EAAsC,MAAM,iCAAiC;OACnG,EAAE,oBAAoB,EAAsC,MAAM,iCAAiC;OACnG,EACL,6BAA6B,GAE9B,MAAM,0CAA0C;OAC1C,EACL,6BAA6B,GAE9B,MAAM,0CAA0C;OAE1C,EAKL,eAAe,EACf,mBAAmB,GACpB,MAAM,6BAA6B;OAK7B,EAAE,oBAAoB,EAAmC,MAAM,iCAAiC;OAChG,EAAE,oBAAoB,EAAmC,MAAM,iCAAiC;AAEvG,MAAM,OAAO,WAAY,SAAQ,WAAW;IAY1C,YAAY,CACV,IAE8D,EAC9D,OAA6B;QAE7B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,6BAA6B,CAAC,YAAY,CAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAC7B,IAAkE,EAClE,OAAO,CACR,CAAC;SACH;QACD,OAAO,oBAAoB,CAAC,YAAY,CACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAC7B,IAAyD,EACzD,OAAO,CACR,CAAC;IACJ,CAAC;IAmBD,QAAQ,CACN,IAE0D,EAC1D,OAA6B;QAE7B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,6BAA6B,CAAC,QAAQ,CAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAC7B,IAA8D,EAC9D,OAAO,CACR,CAAC;SACH;QACD,OAAO,oBAAoB,CAAC,QAAQ,CAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAC7B,IAAqD,EACrD,OAAO,CACR,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAgC,EAAE,OAA6B;QACpE,OAAO,oBAAoB,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACjG,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/messages.mjs":{"lineLengths":[86,46,47,70,47,43,7,24,7,37,67,17,23,77,11,5,7,26,7,44,79,23,77,11,5,7,26,7,48,80,17,23,77,11,5,41,38,50,9,87,18,23,77,11,5,1,46,1,22,53,32,37],"data":{"version":3,"file":"messages.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/threads/messages.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,WAAW,MAAM,wCAAwC;OAE9D,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,QAAS,SAAQ,WAAW;IACvC;;OAEG;IACH,MAAM,CACJ,QAAgB,EAChB,IAAyB,EACzB,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,QAAQ,WAAW,EAAE;YACxD,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,QAAgB,EAAE,SAAiB,EAAE,OAA6B;QACzE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,aAAa,SAAS,EAAE,EAAE;YACpE,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,CACJ,QAAgB,EAChB,SAAiB,EACjB,IAAyB,EACzB,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,QAAQ,aAAa,SAAS,EAAE,EAAE;YACrE,IAAI;YACJ,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAWD,IAAI,CACF,QAAgB,EAChB,QAAiD,EAAE,EACnD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,QAAQ,WAAW,EAAE,YAAY,EAAE;YAC5E,KAAK;YACL,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,YAAa,SAAQ,UAAmB;CAAG;AAgfxD,WAAiB,QAAQ;IAqBT,qBAAY,GAAG,WAAW,CAAC,YAAY,CAAC;AAIxD,CAAC,EAzBgB,QAAQ,KAAR,QAAQ,QAyBxB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AssistantStream.mjs":{"lineLengths":[107,97,183,98,2,114,76,97,182,110,2,726,36,85,42,62,68,19,28,45,57,46,35,72,56,56,59,52,63,58,64,59,38,56,62,66,5,677,29,29,25,48,37,45,25,38,13,18,38,13,11,30,24,45,42,13,33,11,35,24,45,35,13,33,11,35,24,45,35,13,33,11,16,31,40,31,64,21,189,17,48,53,14,33,29,56,14,10,5,39,45,62,22,5,56,39,21,31,40,76,9,26,82,43,119,9,48,42,9,131,5,24,90,41,5,76,45,87,23,84,12,22,5,77,39,21,31,40,76,9,49,75,23,43,11,26,43,119,9,48,42,9,131,5,63,45,71,23,84,12,22,5,67,45,78,23,84,12,22,5,20,80,5,18,86,5,30,83,5,30,90,5,27,26,99,5,27,26,99,5,22,26,74,55,76,5,65,39,21,31,40,76,9,49,103,26,43,119,9,48,42,9,131,5,66,39,21,31,40,76,9,49,104,26,43,119,9,48,42,9,131,5,40,64,43,38,25,13,36,62,38,25,13,59,52,38,25,13,47,81,39,13,86,39,13,70,70,13,76,92,93,29,17,13,18,111,13,32,9,19,5,1,71,19,15,76,114,26,30,38,18,34,33,38,42,36,33,37,36,34,120,18,39,43,37,41,38,41,39,124,18,38,42,36,40,41,124,18,21,126,115,5,73,21,73,5,70,55,72,84,230,92,117,39,74,46,60,9,5,26,38,53,18,42,18,36,77,43,65,66,65,53,81,66,78,25,30,111,25,21,115,60,97,110,44,201,42,50,212,42,29,25,111,21,130,17,13,18,40,41,96,104,131,37,50,42,152,34,36,141,34,21,17,13,86,54,13,91,5,84,147,99,26,39,53,18,37,43,37,58,48,71,71,117,122,21,26,98,124,25,113,152,96,127,21,17,13,77,18,41,38,41,39,98,52,47,90,116,99,17,13,70,18,43,18,5,80,75,31,92,26,39,109,30,37,111,28,85,13,34,29,90,114,13,103,41,38,41,39,43,109,18,5,92,99,45,102,24,26,38,66,44,36,28,118,13,34,69,37,66,67,84,206,21,26,80,47,56,21,17,13,42,42,40,41,47,27,46,13,18,87,13,5,59,117,75,76,87,26,34,18,33,18,38,18,42,36,33,36,34,85,86,112,95,13,18,37,18,5,2,44],"data":{"version":3,"file":"AssistantStream.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/AssistantStream.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/runs/runs.mjs":{"lineLengths":[86,46,47,61,36,67,69,47,39,19,28,54,5,37,63,17,23,77,41,11,5,7,23,7,40,71,23,77,11,5,7,22,7,44,72,17,23,77,11,5,41,38,50,9,79,18,23,77,11,5,7,43,7,38,79,23,77,11,5,7,85,36,82,7,50,63,58,5,7,26,6,39,7,46,110,5,7,76,55,82,7,42,83,38,92,9,22,82,27,61,30,33,69,30,35,34,45,50,63,21,26,92,45,78,59,65,29,25,21,47,26,58,39,33,33,30,31,31,13,9,5,7,26,7,37,110,5,55,92,17,23,77,41,11,5,7,83,60,82,7,68,81,58,5,7,83,67,82,7,61,121,5,1,42,1,18,37,32,46,24,33],"data":{"version":3,"file":"runs.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/threads/runs/runs.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/file-batches.mjs":{"lineLengths":[86,46,47,36,54,81,46,7,40,7,42,82,17,23,77,11,5,7,43,7,47,92,23,77,11,5,7,82,47,7,45,100,23,77,11,5,7,80,7,55,61,65,5,60,38,69,9,215,5,7,53,6,85,64,7,49,83,38,92,9,22,91,27,24,30,35,35,45,50,63,21,26,92,45,78,59,65,29,25,21,47,26,30,33,33,13,9,5,7,87,6,82,7,74,50,61,9,67,105,79,36,44,40,100,125,47,40,106,44,13,9,42,85,46,43,56,33,11,5,1,25,38,32,41],"data":{"version":3,"file":"file-batches.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/vector-stores/file-batches.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/vector-stores/files.mjs":{"lineLengths":[86,46,47,36,70,47,40,7,48,72,91,7,42,75,17,23,77,11,5,7,37,7,46,84,23,77,11,5,46,38,55,9,103,18,23,77,11,5,7,86,71,81,16,7,41,87,23,77,11,5,7,79,7,55,69,64,5,7,59,6,83,60,7,48,83,38,92,9,22,77,27,24,30,43,34,35,45,50,63,21,26,105,45,78,59,65,29,25,21,47,26,30,33,32,13,9,5,7,85,82,65,7,48,105,77,5,7,74,7,55,105,68,5,1,54,1,19,63,26,34],"data":{"version":3,"file":"files.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/vector-stores/files.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs":{"lineLengths":[86,46,47,80,47,46,48,38,57,9,144,5,1,62,1,25,91,38,40],"data":{"version":3,"file":"checkpoints.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/fine-tuning/jobs/checkpoints.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,cAAc,MAAM,+CAA+C;OACxE,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,WAAY,SAAQ,WAAW;IAa1C,IAAI,CACF,eAAuB,EACvB,QAAoD,EAAE,EACtD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAC5B,qBAAqB,eAAe,cAAc,EAClD,4BAA4B,EAC5B,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CACtB,CAAC;IACJ,CAAC;CACF;AAED,MAAM,OAAO,4BAA6B,SAAQ,UAAmC;CAAG;AAkExF,WAAiB,WAAW;IAEZ,wCAA4B,GAAG,cAAc,CAAC,4BAA4B,CAAC;AAE3F,CAAC,EAJgB,WAAW,KAAX,WAAW,QAI3B"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/_shims/MultipartBody.mjs":{"lineLengths":[3,77,3,28,23,25,5,32,31,5,1,42],"data":{"version":3,"file":"MultipartBody.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/_shims/MultipartBody.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,OAAO,aAAa;IACxB,YAAmB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAG,CAAC;IAChC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QACtB,OAAO,eAAe,CAAC;IACzB,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionRunner.mjs":{"lineLengths":[83,63,72,55,55,50,22,23,90,10,75,22,5,51,50,22,23,86,10,71,22,5,26,35,61,51,9,5,1,49],"data":{"version":3,"file":"ChatCompletionRunner.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"names":[],"mappings":"OAMO,EACL,4BAA4B,GAG7B;OACM,EAAE,kBAAkB,EAAE;AAoB7B,MAAM,OAAO,oBAAqB,SAAQ,4BAAwD;IAChG,mDAAmD;IACnD,MAAM,CAAC,YAAY,CACjB,WAAwB,EACxB,MAAiD,EACjD,OAAuB;QAEvB,MAAM,MAAM,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC1C,MAAM,IAAI,GAAG;YACX,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,2BAA2B,EAAE,cAAc,EAAE;SAC9E,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,WAAwB,EACxB,MAA6C,EAC7C,OAAuB;QAEvB,MAAM,MAAM,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC1C,MAAM,IAAI,GAAG;YACX,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,2BAA2B,EAAE,UAAU,EAAE;SAC1E,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC;IAChB,CAAC;IAEQ,WAAW,CAAC,OAAmC;QACtD,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,kBAAkB,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;YAClD,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,OAAiB,CAAC,CAAC;SAClD;IACH,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs":{"lineLengths":[66,73,39,59,62,22,5,55,55,59,22,23,90,10,75,22,5,51,59,22,23,86,10,71,22,5,1,58],"data":{"version":3,"file":"ChatCompletionStreamingRunner.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/ChatCompletionStreamingRunner.ts"],"names":[],"mappings":"OAQO,EAA0B,oBAAoB,EAAE;AAqBvD,MAAM,OAAO,6BACX,SAAQ,oBAAoB;IAG5B,MAAM,CAAU,kBAAkB,CAAC,MAAsB;QACvD,MAAM,MAAM,GAAG,IAAI,6BAA6B,EAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,mDAAmD;IACnD,MAAM,CAAC,YAAY,CACjB,WAAwB,EACxB,MAAsD,EACtD,OAAuB;QAEvB,MAAM,MAAM,GAAG,IAAI,6BAA6B,EAAE,CAAC;QACnD,MAAM,IAAI,GAAG;YACX,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,2BAA2B,EAAE,cAAc,EAAE;SAC9E,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,WAAwB,EACxB,MAAkD,EAClD,OAAuB;QAEvB,MAAM,MAAM,GAAG,IAAI,6BAA6B,EAAE,CAAC;QACnD,MAAM,IAAI,GAAG;YACX,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,2BAA2B,EAAE,UAAU,EAAE;SAC1E,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC;IAChB,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/RunnableFunction.mjs":{"lineLengths":[49,42,1,3,81,49,2,56,3,30,24,39,33,43,45,31,5,1,3,81,49,3,34,24,31,30,5,1,45],"data":{"version":3,"file":"RunnableFunction.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/RunnableFunction.ts"],"names":[],"mappings":"AA6EA,MAAM,UAAU,2BAA2B,CACzC,EAAO;IAEP,OAAO,OAAQ,EAAU,CAAC,KAAK,KAAK,UAAU,CAAC;AACjD,CAAC;AAkBD;;;;;GAKG;AACH,MAAM,OAAO,eAAe;IAO1B,YAAY,KAAsC;QAChD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACzB,CAAC;CACF;AAED;;;GAGG;AACH,MAAM,OAAO,mBAAmB;IAI9B,YAAY,KAAsC;QAChD,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;CACF"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/ChatCompletionStream.mjs":{"lineLengths":[107,97,183,98,2,114,76,97,182,110,2,239,62,83,42,72,19,28,50,78,5,41,102,5,7,73,44,6,77,23,7,39,50,62,22,5,63,50,184,22,5,63,39,21,31,40,76,9,122,125,26,43,129,9,48,42,9,152,5,56,39,21,31,40,76,9,122,26,82,19,43,48,47,153,13,129,30,9,48,42,9,152,5,208,23,19,106,88,23,19,160,47,55,56,83,59,9,87,25,77,9,112,24,78,9,106,48,120,23,110,43,24,106,24,28,20,9,14,42,9,97,49,26,109,13,27,39,66,17,22,58,57,34,76,65,21,17,13,30,53,41,23,60,80,48,24,82,21,43,32,52,65,17,22,43,79,50,93,90,21,17,13,29,47,51,86,100,51,27,42,29,46,27,87,33,58,38,69,17,13,9,24,33,29,29,25,37,45,25,38,13,18,38,13,11,30,24,45,42,13,33,11,35,24,45,35,13,33,11,35,24,45,35,13,33,11,16,31,40,31,64,21,189,17,48,53,14,33,29,56,14,10,5,24,90,41,5,1,43,82,12,16,11,94,31,83,90,156,22,74,32,64,33,97,26,92,24,34,89,34,26,29,18,13,29,24,34,26,34,29,30,39,29,32,70,86,82,43,121,45,123,45,132,45,137,109,27,22,18,13,20,30,59,30,22,25,14,11,16,14,34,62,6,1,17,29,1,49],"data":{"version":3,"file":"ChatCompletionStream.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/ChatCompletionStream.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AbstractAssistantStreamRunner.mjs":{"lineLengths":[114,76,97,182,110,2,107,97,183,98,2,564,62,44,19,48,74,84,83,68,78,77,63,62,64,64,79,73,92,72,48,13,53,96,50,13,47,50,13,41,67,29,42,56,13,71,11,120,111,109,17,114,105,103,17,69,68,69,40,108,102,5,20,88,78,26,35,37,34,94,14,5,18,19,5,18,23,19,109,30,5,17,87,5,19,89,5,19,89,5,13,32,5,7,82,95,94,30,71,7,25,202,37,20,5,7,76,100,97,67,71,7,26,109,23,24,74,23,39,20,5,7,93,49,71,7,27,202,49,20,5,7,86,70,79,77,55,6,15,6,88,7,20,49,107,34,43,38,11,5,18,103,91,5,27,55,86,19,9,30,90,107,9,109,24,130,67,9,32,34,130,38,13,119,113,30,19,9,32,85,34,130,99,94,50,40,55,25,38,13,119,113,30,9,5,57,78,5,64,82,5,75,93,5,63,39,21,31,40,76,9,40,128,26,39,5,77,39,21,31,40,76,9,149,26,39,5,66,39,21,31,40,76,9,40,131,26,39,5,1,752,58],"data":{"version":3,"file":"AbstractAssistantStreamRunner.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/AbstractAssistantStreamRunner.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/resources/beta/threads/runs/steps.mjs":{"lineLengths":[86,46,47,69,47,40,7,28,7,48,87,23,77,11,5,48,38,57,9,98,18,23,77,11,5,1,46,1,19,47,26,34],"data":{"version":3,"file":"steps.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/resources/beta/threads/runs/steps.ts"],"names":[],"mappings":"AAAA,sFAAsF;OAG/E,EAAE,WAAW,EAAE,MAAM,iBAAiB;OACtC,EAAE,gBAAgB,EAAE,MAAM,aAAa;OACvC,KAAK,QAAQ,MAAM,0CAA0C;OAC7D,EAAE,UAAU,EAAyB,MAAM,mBAAmB;AAErE,MAAM,OAAO,KAAM,SAAQ,WAAW;IACpC;;OAEG;IACH,QAAQ,CACN,QAAgB,EAChB,KAAa,EACb,MAAc,EACd,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,SAAS,KAAK,UAAU,MAAM,EAAE,EAAE;YAC5E,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAgBD,IAAI,CACF,QAAgB,EAChB,KAAa,EACb,QAA8C,EAAE,EAChD,OAA6B;QAE7B,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,QAAQ,SAAS,KAAK,QAAQ,EAAE,YAAY,EAAE;YACvF,KAAK;YACL,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,YAAa,SAAQ,UAAmB;CAAG;AAqjBxD,WAAiB,KAAK;IAkBN,kBAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;AAErD,CAAC,EApBgB,KAAK,KAAL,KAAK,QAoBrB"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/Util.mjs":{"lineLengths":[3,80,3,56,55,78,26,40,41,9,87,5,82,22,35,44,38,9,5,18,2,33],"data":{"version":3,"file":"Util.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/Util.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAK,QAAsB,EAAgB,EAAE;IACnF,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnD,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAmC,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC;IAC3G,IAAI,QAAQ,CAAC,MAAM,EAAE;QACnB,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;YAC7B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B;QAED,MAAM,IAAI,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,2CAA2C,CAAC,CAAC;KAChF;IAED,8EAA8E;IAC9E,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,IAAI,MAAM,CAAC,MAAM,KAAK,WAAW,EAAE;YACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/AbstractChatCompletionRunner.mjs":{"lineLengths":[114,76,97,182,110,2,107,97,183,98,2,953,62,70,97,40,43,19,58,48,73,83,82,67,77,76,62,35,27,61,63,63,78,72,91,72,48,13,53,95,50,13,47,50,13,41,67,29,42,56,13,71,11,119,110,108,17,113,104,102,17,69,68,69,40,107,101,5,20,88,78,26,35,34,34,93,14,5,40,51,53,59,20,38,30,5,39,36,35,36,19,43,92,126,66,13,76,66,13,73,61,56,71,21,17,13,9,5,18,23,19,108,30,5,17,86,5,19,88,5,19,88,5,13,32,5,7,82,95,94,30,71,7,25,200,37,20,5,7,76,100,97,67,71,7,26,108,23,24,74,23,39,20,5,7,93,49,71,7,27,200,49,20,5,7,86,70,79,77,55,6,15,6,88,7,20,49,106,34,43,38,11,5,18,102,90,5,7,81,95,7,33,26,83,24,85,26,5,7,103,102,7,26,26,148,5,7,100,113,7,26,26,148,5,7,94,102,7,31,26,153,5,37,26,159,5,24,26,152,5,26,42,5,27,55,85,19,9,30,89,106,9,108,24,129,67,9,32,34,129,38,13,118,112,30,19,9,32,85,34,129,99,94,50,40,55,25,38,13,118,112,30,9,5,18,83,23,58,162,25,53,162,25,53,172,30,63,184,44,75,57,175,9,5,63,39,21,31,40,76,9,148,134,26,55,5,60,48,45,9,78,5,55,32,73,94,84,35,43,59,9,56,44,37,39,12,48,45,9,54,82,30,30,26,45,24,63,27,84,13,39,23,68,45,22,115,55,52,58,25,13,77,150,58,25,13,23,17,87,13,27,34,25,25,84,19,25,13,63,63,185,54,37,23,9,5,51,28,71,100,84,35,39,40,90,13,9,41,59,17,37,31,74,58,60,22,17,20,24,48,45,9,54,82,30,28,22,45,24,63,27,84,13,38,23,13,57,50,29,50,69,49,26,111,68,56,70,29,17,81,150,70,29,17,27,21,91,17,31,91,70,29,17,67,67,189,66,43,27,17,13,9,15,5,1,904,160,109,33,21,41,42,68,9,5,104,119,57,41,68,41,9,73,55,9,5,11,131,57,41,68,35,9,37,38,63,101,35,9,5,11,117,19,29,25,24,6,52,20,63,55,53,9,5,17,113,43,158,5,143,55,48,42,2,57],"data":{"version":3,"file":"AbstractChatCompletionRunner.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/AbstractChatCompletionRunner.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/lib/chatCompletionUtils.mjs":{"lineLengths":[48,41,2,47,40,2,43,36,2,32,23,1,48],"data":{"version":3,"file":"chatCompletionUtils.mjs","sourceRoot":"","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/openai/src/lib/chatCompletionUtils.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,OAAsD,EACN,EAAE;IAClD,OAAO,OAAO,EAAE,IAAI,KAAK,WAAW,CAAC;AACvC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAsD,EACP,EAAE;IACjD,OAAO,OAAO,EAAE,IAAI,KAAK,UAAU,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,OAAsD,EACX,EAAE;IAC7C,OAAO,OAAO,EAAE,IAAI,KAAK,MAAM,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,UAAU,SAAS,CAAI,GAAyB;IACpD,OAAO,GAAG,IAAI,IAAI,CAAC;AACrB,CAAC"},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/abort-controller/dist/abort-controller.js":{"lineLengths":[3,57,55,3,13,0,62,0,51,0,3,20,48,3,55,7,50,7,19,16,74,5,7,109,7,19,47,43,130,9,23,5,1,69,3,32,3,30,56,45,36,18,1,3,24,3,30,45,15,5,35,44,1,3,35,3,35,35,48,34,3,54,77,70,27,29,7,1,0,3,23,52,3,23,7,34,7,19,47,5,7,68,7,18,31,5,7,87,7,13,37,5,1,3,22,3,30,3,51,3,32,43,25,142,5,18,1,35,52,33,32,3,77,74,27,33,7,1,0,42,34,34,0,32,76,40,44,0],"data":{"version":3,"file":"abort-controller.js","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/abort-controller/src/abort-signal.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/abort-controller/src/abort-controller.ts"],"sourcesContent":["import {\n    // Event,\n    EventTarget,\n    // Type,\n    defineEventAttribute,\n} from \"event-target-shim\"\n\n// Known Limitation\n//   Use `any` because the type of `AbortSignal` in `lib.dom.d.ts` is wrong and\n//   to make assignable our `AbortSignal` into that.\n//   https://github.com/Microsoft/TSJS-lib-generator/pull/623\ntype Events = {\n    abort: any // Event & Type<\"abort\">\n}\ntype EventAttributes = {\n    onabort: any // Event & Type<\"abort\">\n}\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nexport default class AbortSignal extends EventTarget<Events, EventAttributes> {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    public constructor() {\n        super()\n        throw new TypeError(\"AbortSignal cannot be constructed directly\")\n    }\n\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    public get aborted(): boolean {\n        const aborted = abortedFlags.get(this)\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(\n                `Expected 'this' to be an 'AbortSignal' object, but got ${\n                    this === null ? \"null\" : typeof this\n                }`,\n            )\n        }\n        return aborted\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\")\n\n/**\n * Create an AbortSignal object.\n */\nexport function createAbortSignal(): AbortSignal {\n    const signal = Object.create(AbortSignal.prototype)\n    EventTarget.call(signal)\n    abortedFlags.set(signal, false)\n    return signal\n}\n\n/**\n * Abort a given signal.\n */\nexport function abortSignal(signal: AbortSignal): void {\n    if (abortedFlags.get(signal) !== false) {\n        return\n    }\n\n    abortedFlags.set(signal, true)\n    signal.dispatchEvent<\"abort\">({ type: \"abort\" })\n}\n\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap<AbortSignal, boolean>()\n\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n})\n\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    })\n}\n","import AbortSignal, { abortSignal, createAbortSignal } from \"./abort-signal\"\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nexport default class AbortController {\n    /**\n     * Initialize this controller.\n     */\n    public constructor() {\n        signals.set(this, createAbortSignal())\n    }\n\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    public get signal(): AbortSignal {\n        return getSignal(this)\n    }\n\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    public abort(): void {\n        abortSignal(getSignal(this))\n    }\n}\n\n/**\n * Associated signals.\n */\nconst signals = new WeakMap<AbortController, AbortSignal>()\n\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller: AbortController): AbortSignal {\n    const signal = signals.get(controller)\n    if (signal == null) {\n        throw new TypeError(\n            `Expected 'this' to be an 'AbortController' object, but got ${\n                controller === null ? \"null\" : typeof controller\n            }`,\n        )\n    }\n    return signal\n}\n\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n})\n\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    })\n}\n\nexport { AbortController, AbortSignal }\n"],"names":["EventTarget","defineEventAttribute"],"mappings":";;;;;;;;;;AAkBA;;;;AAIA,MAAqB,WAAY,SAAQA,2BAAoC;;;;IAIzE;QACI,KAAK,EAAE,CAAA;QACP,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAA;KACpE;;;;IAKD,IAAW,OAAO;QACd,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACtC,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;YAC9B,MAAM,IAAI,SAAS,CACf,0DACI,IAAI,KAAK,IAAI,GAAG,MAAM,GAAG,OAAO,IACpC,EAAE,CACL,CAAA;SACJ;QACD,OAAO,OAAO,CAAA;KACjB;CACJ;AACDC,oCAAoB,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;;;;AAKpD,SAAgB,iBAAiB;IAC7B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;IACnDD,2BAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACxB,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC/B,OAAO,MAAM,CAAA;CAChB;;;;AAKD,SAAgB,WAAW,CAAC,MAAmB;IAC3C,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE;QACpC,OAAM;KACT;IAED,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC9B,MAAM,CAAC,aAAa,CAAU,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;CACnD;;;;AAKD,MAAM,YAAY,GAAG,IAAI,OAAO,EAAwB,CAAA;;AAGxD,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE;IAC3C,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;CAChC,CAAC,CAAA;;AAGF,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,EAAE;IACxE,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;QAC7D,YAAY,EAAE,IAAI;QAClB,KAAK,EAAE,aAAa;KACvB,CAAC,CAAA;CACL;;ACpFD;;;;AAIA,MAAqB,eAAe;;;;IAIhC;QACI,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAA;KACzC;;;;IAKD,IAAW,MAAM;QACb,OAAO,SAAS,CAAC,IAAI,CAAC,CAAA;KACzB;;;;IAKM,KAAK;QACR,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;KAC/B;CACJ;;;;AAKD,MAAM,OAAO,GAAG,IAAI,OAAO,EAAgC,CAAA;;;;AAK3D,SAAS,SAAS,CAAC,UAA2B;IAC1C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACtC,IAAI,MAAM,IAAI,IAAI,EAAE;QAChB,MAAM,IAAI,SAAS,CACf,8DACI,UAAU,KAAK,IAAI,GAAG,MAAM,GAAG,OAAO,UAC1C,EAAE,CACL,CAAA;KACJ;IACD,OAAO,MAAM,CAAA;CAChB;;AAGD,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS,EAAE;IAC/C,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;IAC5B,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;CAC9B,CAAC,CAAA;AAEF,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,EAAE;IACxE,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;QACjE,YAAY,EAAE,IAAI;QAClB,KAAK,EAAE,iBAAiB;KAC3B,CAAC,CAAA;CACL;;;;;;;;;;;;;","sourceRoot":""},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/event-target-shim/dist/event-target-shim.js":{"lineLengths":[3,57,55,55,3,13,0,62,0,3,32,56,61,57,71,60,60,81,117,46,11,3,0,3,35,38,11,3,34,0,3,29,36,11,3,31,0,3,20,61,56,11,3,20,40,19,21,54,13,6,15,1,0,3,53,42,3,30,39,12,45,47,11,26,85,36,14,9,14,5,33,14,5,0,25,58,36,5,1,0,3,52,11,3,3,21,15,73,65,3,36,27,20,14,22,35,24,23,32,30,49,7,0,51,81,0,23,36,43,28,29,76,9,5,1,0,62,19,7,30,21,7,16,34,6,0,7,32,26,7,18,35,6,0,7,32,26,7,25,37,6,0,7,64,7,20,53,36,21,9,30,6,0,7,24,21,7,16,16,6,0,7,35,21,7,27,16,6,0,7,29,21,7,21,16,6,0,7,34,21,7,26,16,6,0,7,32,21,7,22,34,6,0,7,27,22,7,23,30,0,28,63,41,9,6,0,7,27,22,7,32,30,0,28,37,72,50,9,6,0,7,31,22,7,19,46,6,0,7,33,22,7,22,49,6,0,7,25,22,7,22,32,6,0,7,47,22,7,28,32,6,0,7,31,22,7,20,47,6,0,7,35,21,7,21,33,6,0,7,32,26,18,7,22,35,6,0,7,39,22,18,7,24,31,6,29,21,18,9,30,0,28,59,43,9,6,0,7,47,22,18,7,23,33,6,28,21,36,9,6,0,7,76,43,77,77,18,7,17,22,6,2,0,35,55,17,23,19,3,0,52,75,67,0,37,48,1,0,3,60,67,82,11,3,40,12,15,38,10,20,40,10,27,25,5,1,0,3,63,67,85,11,3,36,12,17,41,53,10,27,25,5,1,0,3,28,54,61,49,11,3,42,36,28,24,5,0,22,46,49,5,0,64,80,7,0,24,43,28,44,75,66,34,38,20,22,47,51,14,9,5,0,22,1,0,3,46,80,41,11,3,28,54,20,5,0,38,26,81,37,5,18,1,0,3,50,73,43,41,11,3,40,61,42,1,0,3,50,41,63,11,3,27,37,1,0,3,48,56,46,18,11,3,43,38,1,0,3,43,56,62,18,11,3,49,44,1,0,3,43,56,63,18,11,3,53,48,1,0,3,33,32,33,30,27,37,11,3,0,3,53,11,3,35,0,17,18,17,20,0,3,51,37,55,3,22,89,1,0,3,17,60,54,11,3,36,52,28,28,78,9,5,20,1,0,3,72,71,57,11,3,52,12,15,49,48,34,54,40,17,33,13,23,10,0,23,72,73,13,49,0,61,28,48,34,54,40,40,46,52,60,28,52,21,24,32,17,0,33,13,0,29,36,33,29,44,35,32,31,18,36,54,24,40,17,13,10,27,25,5,1,0,3,58,95,54,18,3,64,26,29,25,49,6,1,0,3,53,65,49,11,3,46,28,34,31,5,0,72,22,37,31,27,10,7,0,49,73,5,0,28,1,0,3,15,2,41,93,2,15,2,37,48,57,59,3,24,41,38,42,14,5,64,52,5,31,50,52,36,9,45,5,60,40,1,0,62,25,7,49,55,54,114,22,7,52,31,18,9,68,80,9,0,45,47,36,38,31,56,25,21,25,62,56,23,10,0,62,44,33,46,18,9,0,60,24,30,16,45,50,15,45,22,13,24,29,9,0,18,28,6,0,7,54,58,57,114,22,7,55,31,18,9,0,45,41,38,31,56,0,24,44,30,16,45,50,15,36,42,48,56,24,48,17,22,13,0,24,29,9,6,0,7,30,64,46,7,26,62,67,9,0,53,45,37,44,27,23,9,0,70,52,0,67,46,24,30,48,28,36,42,48,56,24,48,17,20,28,13,0,33,31,29,51,14,54,21,59,31,24,57,59,23,43,21,17,23,50,63,15,56,13,0,68,42,21,13,0,29,9,47,39,45,0,45,6,2,0,35,61,23,23,19,3,0,64,4,36,45,3,79,1,0,52,34,30,0,28,68,58,45,0],"data":{"version":3,"file":"event-target-shim.js","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/event-target-shim/src/event.mjs","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/event-target-shim/src/event-target.mjs"],"sourcesContent":["/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/dist/ponyfill.es2018.js":{"lineLengths":[3,11,30,77,47,31,3,29,85,79,120,44,0,21,25,5,0,30,80,5,48,40,13,47,28,34,15,9,20,93,131,9,5,0,36,55,71,52,35,45,5,62,41,53,5,62,42,45,5,67,116,25,74,5,110,89,131,60,124,5,52,42,5,49,52,5,82,81,5,49,79,5,39,51,45,9,14,67,76,9,41,6,38,38,62,9,57,5,38,13,64,9,23,46,9,5,0,29,151,39,7,30,6,76,75,7,23,23,29,27,51,27,30,32,14,37,65,81,84,29,78,27,9,22,30,9,68,24,48,37,23,39,34,72,27,34,36,18,13,78,26,44,38,37,40,13,25,9,83,28,57,41,36,43,42,48,48,53,42,30,13,46,25,37,40,39,13,62,44,27,9,68,84,84,79,79,82,84,48,27,33,35,42,71,44,38,46,26,48,30,21,17,38,20,13,9,79,39,56,38,40,43,9,5,0,48,48,50,46,52,0,68,45,32,43,57,9,46,67,9,14,88,9,5,124,13,64,51,52,5,57,51,43,152,9,14,161,9,57,35,48,5,40,40,85,5,60,59,65,52,50,11,5,77,53,57,5,69,53,50,5,63,57,19,9,57,45,50,49,5,72,71,5,56,58,19,9,49,50,49,5,0,39,112,60,52,6,0,39,107,50,52,6,0,56,30,64,5,45,54,64,9,5,62,41,38,65,9,5,50,26,80,5,39,27,64,9,5,59,30,86,9,5,53,30,73,9,5,63,47,29,5,36,31,5,29,48,5,62,70,29,51,30,34,33,69,9,27,47,121,9,44,21,9,40,48,49,34,17,5,0,47,35,71,9,5,0,50,57,55,5,50,64,55,5,68,38,57,19,38,9,14,43,9,5,55,51,5,53,38,35,25,9,53,25,9,20,5,7,59,6,14,7,39,29,77,60,49,115,13,64,51,9,11,83,117,11,22,55,87,13,39,9,11,110,11,36,55,87,13,58,74,13,67,9,11,113,10,116,11,16,55,85,13,58,77,13,31,30,61,41,39,15,33,84,84,50,14,63,27,9,11,126,120,65,10,119,120,84,11,23,55,70,13,58,23,13,53,9,5,68,37,35,42,36,7,76,72,86,49,90,49,30,11,5,43,47,31,25,9,72,25,9,56,5,67,51,33,41,38,9,47,57,9,14,69,9,5,57,51,55,64,5,70,50,49,45,39,11,5,60,53,128,5,0,48,61,114,0,48,43,44,45,37,34,48,9,16,54,57,82,28,40,9,23,63,41,86,30,9,22,35,73,13,40,31,30,61,41,39,15,33,39,53,122,80,89,18,36,53,44,63,69,18,40,53,44,63,42,17,14,65,27,9,29,35,62,13,36,40,39,80,59,83,13,55,62,9,5,50,16,55,91,13,50,10,23,55,93,13,57,9,6,88,50,72,66,80,77,43,24,5,47,31,25,9,77,25,9,13,49,50,48,9,20,25,9,5,47,59,117,5,0,39,109,54,51,23,6,0,19,44,74,81,32,5,70,80,5,38,47,62,9,57,92,9,14,40,51,9,38,6,35,46,57,9,14,40,65,9,35,6,51,63,76,27,44,9,35,46,60,21,5,40,36,50,29,9,41,69,9,20,5,62,103,87,87,30,64,10,72,51,39,13,46,46,68,5,62,246,54,35,35,61,43,71,84,75,17,13,18,57,13,9,35,62,9,54,38,77,9,41,53,5,43,91,36,84,9,22,5,43,40,5,40,32,5,0,37,36,25,9,29,25,9,20,25,9,20,5,35,93,38,5,0,38,46,47,44,42,9,26,5,59,62,89,9,47,42,5,40,45,26,5,36,45,38,5,0,42,33,5,31,55,5,47,42,21,9,38,5,0,7,69,6,14,7,37,23,55,9,11,107,11,20,53,61,13,30,9,31,53,64,13,63,100,77,78,13,54,119,13,108,9,34,53,75,13,66,44,84,13,77,78,13,48,118,13,111,9,5,66,38,49,34,7,76,98,49,88,47,30,11,5,7,100,6,14,7,40,23,55,9,11,79,11,27,56,77,13,68,9,11,119,126,11,27,56,77,13,68,9,11,122,78,11,17,56,71,13,39,98,13,68,39,120,13,52,9,24,56,73,13,56,45,74,13,41,75,13,48,84,13,39,68,13,68,39,125,13,61,9,11,119,11,30,56,71,13,55,9,24,31,68,29,57,62,26,9,24,34,62,43,88,23,13,70,54,27,21,68,17,33,53,27,17,44,27,60,34,54,35,35,35,48,41,18,64,13,62,63,9,24,26,52,68,50,59,59,13,9,5,69,36,38,36,42,41,7,75,79,75,49,91,50,30,11,5,64,48,31,25,9,88,25,9,57,5,45,31,25,9,98,25,9,54,5,71,82,26,19,9,34,41,19,9,35,41,56,40,40,40,46,73,13,24,17,61,24,11,5,76,70,57,5,95,25,41,24,9,101,58,71,9,14,75,9,5,88,59,59,139,5,106,67,49,5,112,24,13,88,9,24,66,25,9,96,5,102,46,159,9,69,5,106,132,79,55,26,79,64,114,70,64,89,25,9,40,47,45,92,93,126,57,30,13,18,54,54,13,54,112,53,9,21,5,107,47,5,71,77,68,74,9,14,69,9,5,76,47,19,9,84,45,39,5,91,57,51,23,13,75,110,77,131,13,9,5,84,72,49,51,23,13,61,90,9,5,91,64,38,61,48,46,19,13,54,9,19,43,19,9,36,19,48,23,23,27,24,24,34,30,10,54,66,76,49,99,70,19,9,41,100,51,19,9,45,110,109,73,56,23,13,45,99,65,47,23,13,9,62,66,65,5,92,52,73,9,64,50,70,104,97,13,9,5,111,109,55,103,89,19,9,78,118,74,19,9,69,94,32,87,141,9,56,123,85,5,84,68,70,70,33,90,9,14,106,9,65,5,75,64,26,5,69,64,43,25,9,41,25,9,35,25,9,101,24,9,102,24,9,83,30,24,9,21,5,70,46,48,5,103,60,64,73,19,9,45,46,19,9,54,77,92,99,65,24,13,9,64,36,5,69,64,73,19,9,57,39,89,9,62,54,77,64,131,13,74,91,61,109,13,9,53,82,65,119,13,18,62,81,17,98,81,13,9,55,109,115,89,9,14,115,9,65,5,63,64,43,19,9,70,31,64,39,5,92,48,55,65,86,38,5,69,90,72,180,83,74,50,9,39,5,69,70,34,24,9,33,21,9,68,5,76,68,70,33,37,104,13,9,14,37,119,13,90,66,13,9,77,78,5,79,68,70,33,40,121,13,9,14,40,136,13,9,91,92,9,74,95,9,89,92,9,47,66,80,5,154,58,38,36,39,113,67,31,43,36,48,50,54,66,57,54,45,61,39,69,24,17,61,24,11,5,113,81,27,26,28,55,74,9,14,45,9,54,72,9,14,65,9,56,76,9,14,67,9,81,42,80,9,148,5,72,69,29,5,58,51,124,5,61,60,130,5,0,53,43,84,16,125,10,5,61,25,30,118,9,20,5,55,15,43,124,16,97,10,5,0,50,54,52,5,50,72,63,5,72,38,65,19,47,9,14,47,9,5,59,55,5,50,38,35,25,9,50,25,9,20,5,7,56,6,14,7,36,29,74,60,49,115,13,84,125,30,13,64,55,9,11,124,76,11,22,52,84,13,39,9,11,110,11,36,52,84,13,58,74,13,67,9,37,52,82,13,44,95,13,40,96,13,47,105,13,48,94,13,24,17,72,13,23,46,13,36,28,96,13,36,40,123,17,13,45,123,13,58,77,13,31,30,61,41,39,15,37,84,83,50,14,75,27,9,11,126,120,65,10,119,117,84,11,23,52,67,13,58,23,13,50,9,5,65,37,35,42,36,7,73,69,83,49,87,46,30,11,5,43,44,31,25,9,76,25,9,53,5,79,51,33,42,61,9,14,111,9,5,54,51,55,65,5,71,58,53,53,43,11,5,57,50,122,5,0,57,43,42,30,9,62,58,9,29,5,45,34,20,27,9,20,5,0,52,40,93,75,16,110,120,10,5,54,36,61,5,0,55,44,89,89,89,87,89,16,40,27,106,40,27,106,40,27,106,40,27,106,16,10,5,72,36,63,5,72,36,51,5,72,36,71,5,72,36,85,5,0,47,35,71,9,5,0,35,58,25,9,13,54,9,20,76,25,9,5,74,7,69,6,16,7,38,38,41,9,25,5,0,7,85,6,14,7,26,63,50,41,13,18,67,13,85,95,43,45,37,66,13,65,68,119,9,11,76,11,22,42,60,13,48,9,11,120,119,44,10,125,122,57,11,35,42,81,13,47,109,13,53,9,11,123,114,10,121,124,101,11,17,42,81,13,47,109,13,60,100,13,45,9,11,122,81,10,121,124,112,11,21,42,63,13,60,9,5,55,36,36,40,36,7,61,61,69,49,77,36,30,11,5,50,57,55,5,51,143,63,41,84,159,22,5,47,35,121,69,40,35,94,43,53,120,68,50,118,117,49,118,29,41,118,112,49,119,48,57,37,5,34,31,25,9,84,25,9,43,5,45,43,25,9,20,5,50,15,72,50,9,63,119,90,103,66,36,56,50,9,56,56,9,39,35,38,72,31,9,57,43,36,34,32,32,55,14,11,55,34,56,9,23,5,42,36,56,138,9,57,34,34,31,14,48,11,38,83,53,9,79,23,5,50,52,57,34,34,31,14,53,11,23,5,61,36,35,55,19,9,45,5,58,60,35,37,38,35,82,9,87,49,9,5,51,34,55,48,55,46,11,50,56,70,19,9,57,48,47,46,70,19,9,91,36,36,70,24,24,41,70,24,11,5,56,57,49,5,72,52,49,55,5,56,57,49,36,35,71,44,60,55,56,13,9,33,38,35,54,9,5,72,52,49,57,56,55,52,9,55,5,43,58,95,25,9,20,5,63,103,25,9,20,5,61,60,41,5,66,69,5,72,49,62,45,9,38,35,74,9,5,69,38,76,31,55,13,18,57,13,9,44,5,7,59,6,14,7,39,29,77,60,49,115,13,47,34,40,39,91,62,17,22,72,17,59,13,44,89,59,13,42,68,69,13,18,56,81,82,13,9,11,124,76,11,22,55,87,13,39,9,11,119,94,10,125,122,41,11,27,55,70,13,58,64,13,67,9,11,121,122,116,10,119,20,11,21,55,86,13,38,9,11,108,11,35,55,86,13,58,80,13,66,9,11,102,11,17,55,86,13,53,39,80,13,62,100,13,58,9,11,126,125,60,10,119,126,124,65,11,23,55,70,13,53,39,23,13,53,9,34,55,86,13,58,83,13,65,9,5,68,36,36,42,36,37,42,35,7,74,74,86,74,49,90,49,30,11,5,63,47,31,25,9,79,25,9,56,5,102,63,51,51,5,55,51,43,5,75,51,36,80,50,9,34,60,9,56,5,84,55,60,9,14,69,9,5,83,54,59,9,14,68,9,5,64,51,36,58,24,9,33,21,9,95,5,57,51,128,85,119,89,86,35,48,5,62,51,60,89,53,79,9,36,34,60,9,80,114,9,35,60,9,62,75,23,5,29,7,95,6,14,7,43,23,55,9,11,101,10,22,115,82,11,27,59,76,13,37,9,11,118,11,22,59,71,13,54,108,109,119,105,13,48,9,11,119,10,120,124,69,11,30,59,70,13,64,39,128,44,23,13,58,9,24,30,56,65,26,9,24,24,29,9,5,72,42,37,35,7,49,94,53,30,11,5,81,51,31,25,9,84,25,9,60,5,165,54,54,113,38,47,31,44,62,36,58,48,52,52,52,88,63,45,62,41,39,76,24,17,39,55,24,11,5,123,84,27,27,27,27,49,68,9,14,45,9,49,78,9,14,66,9,49,58,9,14,66,9,49,68,9,14,66,9,159,5,123,73,47,47,47,54,5,63,59,72,5,77,13,60,9,28,81,21,9,5,72,68,5,81,13,63,9,26,79,19,9,60,91,92,67,9,72,5,67,78,60,35,19,9,57,19,9,36,35,49,19,9,45,19,9,49,38,68,9,14,75,9,5,78,73,68,9,5,70,60,55,33,62,67,45,54,24,22,71,24,11,5,77,60,60,67,45,54,40,37,87,96,71,13,76,24,22,47,75,13,71,24,11,5,73,86,32,5,106,70,60,67,51,5,47,48,102,5,64,59,136,5,60,53,128,5,47,85,5,59,65,52,50,51,11,5,77,53,57,5,69,53,50,5,63,57,19,9,57,45,50,49,48,5,72,71,5,56,58,19,9,49,50,49,48,5,58,64,51,49,11,46,5,76,52,56,5,68,52,49,5,62,56,19,9,56,44,49,48,47,5,53,52,5,71,70,5,55,57,19,9,48,49,48,48,5,0,31,27,48,30,9,47,24,9,49,26,9,25,5,33,0,34,46,72,25,9,43,25,9,13,23,24,9,20,25,9,5,7,15,21,108,7,30,92,66,5,7,15,22,7,31,64,59,41,40,42,64,13,10,46,56,114,20,5,63,61,0,100,66,64,33,33,112,58,48,31,39,40,122,39,40,44,61,72,29,66,27,21,41,44,63,75,29,66,27,21,104,18,37,37,27,17,65,13,88,46,48,33,64,41,35,42,25,30,89,99,77,25,21,32,19,13,33,35,53,17,71,68,65,51,132,51,30,65,51,27,23,19,13,48,78,36,104,17,22,48,17,28,15,49,76,37,107,17,22,48,17,28,15,49,68,36,107,17,22,31,17,28,15,50,88,128,37,105,17,22,47,17,13,50,46,123,32,53,134,13,66,50,48,17,22,51,17,13,65,49,29,17,22,53,17,13,81,35,27,17,36,95,72,17,22,32,17,38,128,32,17,13,47,35,27,17,36,95,93,17,22,45,17,13,47,59,59,43,72,17,30,34,17,22,39,17,28,13,11,5,0,7,95,6,14,7,43,23,55,9,11,119,121,11,27,59,76,13,71,9,11,122,78,11,17,59,70,13,74,87,13,55,9,36,59,72,13,74,89,13,71,9,11,119,11,30,59,70,13,58,9,24,31,29,57,65,26,9,24,34,58,41,49,71,73,48,17,22,74,17,47,13,18,66,70,13,9,24,26,26,9,5,72,36,38,36,41,7,78,82,78,49,94,53,30,11,5,67,51,31,25,9,84,25,9,60,5,74,85,26,19,9,34,41,19,9,35,56,40,40,40,46,76,13,24,17,64,24,11,5,72,60,76,25,9,35,25,9,93,24,9,86,30,24,9,21,5,73,46,48,54,5,106,63,76,19,9,60,42,45,71,40,9,5,72,76,19,9,60,93,67,9,14,26,17,69,13,32,77,33,13,17,67,13,30,75,31,13,9,68,5,66,60,43,19,9,31,67,39,5,72,66,34,24,9,33,21,9,68,5,61,73,72,25,9,20,5,75,66,66,24,9,21,5,149,54,38,47,31,36,43,38,36,58,48,50,54,54,45,61,39,72,24,17,64,24,11,5,127,84,27,26,28,51,70,9,14,45,9,50,68,9,14,65,9,52,72,9,14,67,9,143,5,64,59,136,5,0,57,79,49,9,48,5,64,66,28,30,30,30,20,20,20,20,33,53,43,11,34,26,33,54,13,27,33,39,121,131,109,43,42,45,45,112,100,63,89,28,41,110,25,41,110,25,40,40,44,25,23,18,36,36,37,96,21,37,96,21,51,56,21,18,36,36,17,14,65,50,9,43,29,29,28,80,83,51,13,33,9,43,29,29,28,80,83,51,13,33,9,35,25,9,88,88,53,87,87,43,48,13,24,11,34,5,44,64,28,40,40,30,30,20,20,20,20,33,53,43,11,49,59,44,32,17,88,88,47,52,17,28,15,9,42,53,59,68,43,13,33,39,121,131,109,43,52,52,45,43,55,33,66,29,44,109,109,91,39,29,25,41,107,25,41,107,25,40,50,45,25,55,45,25,23,18,36,36,37,93,21,37,93,21,89,98,21,89,98,21,51,56,21,18,36,36,17,14,65,9,55,56,59,65,43,13,62,63,37,39,121,131,109,43,52,52,80,81,45,44,33,71,29,44,112,113,91,39,29,48,124,29,116,25,49,120,25,40,50,45,25,55,45,25,23,18,39,36,76,77,40,96,21,41,97,21,46,44,120,25,115,106,25,21,58,56,21,18,36,36,17,14,75,9,35,26,43,54,13,27,110,39,40,13,18,61,13,50,9,35,26,43,54,13,27,110,39,40,13,18,60,13,50,9,43,29,29,28,80,83,51,13,33,9,43,29,29,28,80,83,51,13,33,9,35,19,9,93,93,35,34,5,0,43,79,5,0,41,43,71,9,50,5,56,19,67,36,34,27,17,58,13,23,46,13,64,68,48,122,17,58,27,91,17,22,60,100,17,15,9,42,53,29,17,61,13,23,46,13,45,54,13,29,17,77,13,23,46,13,68,70,48,124,17,33,15,9,89,22,5,54,19,36,34,28,17,44,13,23,46,13,68,48,120,17,38,91,17,22,51,100,17,15,9,42,17,66,13,23,46,13,9,89,22,5,0,68,42,32,121,91,87,89,87,16,72,27,133,42,27,111,38,27,105,40,27,108,119,10,5,75,36,63,5,73,36,71,5,74,36,71,5,55,25,31,112,9,20,5,0,55,43,102,57,5,0,51,43,100,102,100,88,35,77,9,16,48,50,48,18,10,5,49,37,69,9,5,0,57,40,83,74,80,83,74,80,38,5,0,7,78,6,14,7,26,65,52,43,13,18,69,13,85,114,43,52,50,103,17,72,109,13,18,69,72,127,13,9,11,106,11,22,42,60,13,48,9,11,88,10,125,51,11,36,42,82,13,47,110,13,54,9,43,42,63,13,80,45,64,13,57,9,52,42,65,13,67,91,79,47,118,13,61,118,13,158,47,38,9,46,42,82,13,44,83,13,49,135,13,24,17,77,13,23,46,13,47,135,13,54,135,13,142,9,11,108,48,10,95,116,56,10,109,66,11,15,42,57,13,53,49,9,40,42,60,13,82,83,9,40,52,40,9,11,89,10,85,78,11,36,53,9,5,45,34,7,55,37,40,42,37,34,37,36,7,49,63,69,73,63,57,63,49,77,36,30,11,5,74,47,23,26,7,50,51,127,63,41,84,143,22,5,51,87,63,41,81,124,22,5,47,35,35,40,34,5,34,31,25,9,84,25,9,43,5,45,43,25,9,20,5,50,51,33,41,50,9,42,60,9,36,38,73,62,57,57,55,15,9,90,63,5,42,33,38,35,19,9,50,52,54,53,49,42,15,9,5,45,34,32,38,35,19,9,52,52,68,9,14,69,9,5,47,48,102,5,0,56,40,93,83,16,67,10,5,0,80,47,32,6,52,7,72,6,14,7,37,30,76,77,81,9,11,67,11,29,53,69,13,64,9,11,92,11,20,53,60,13,42,9,5,66,44,34,7,49,88,47,30,11,5,58,50,124,5,45,31,25,9,98,25,9,54,5,0,80,37,17,6,47,7,59,6,14,7,32,30,71,77,76,9,11,67,11,29,48,64,13,59,9,11,62,98,11,20,48,55,13,37,9,5,61,44,34,7,49,83,42,30,11,5,53,45,114,5,40,31,25,9,93,25,9,49,5,0,52,44,91,89,103,89,97,103,16,42,27,106,40,27,103,25,40,27,103,48,27,115,24,10,5,69,36,71,5,69,36,71,5,73,36,85,5,70,36,63,5,0,28,7,100,110,117,57,6,14,7,27,94,47,38,13,101,100,86,57,71,13,57,71,13,84,81,84,81,37,56,47,15,150,84,50,89,13,18,48,13,9,11,53,11,24,43,60,13,34,9,11,53,11,24,43,60,13,34,9,5,56,39,38,7,49,78,37,30,11,5,154,35,32,9,40,75,9,41,76,9,35,68,9,158,34,69,9,42,79,9,142,121,41,54,62,53,54,5,35,31,25,9,85,25,9,44,5,57,46,92,63,5,69,91,100,44,5,50,35,127,128,36,58,9,5,67,55,62,56,9,67,64,11,44,5,45,7,121,6,14,7,44,23,55,9,11,126,11,27,60,74,13,107,85,9,36,60,70,13,65,9,11,116,118,11,35,60,68,13,64,9,11,124,98,11,21,60,72,13,60,9,5,73,38,36,40,41,7,83,79,87,49,95,54,30,11,5,62,52,31,25,9,85,25,9,61,5,125,55,55,60,52,54,46,54,53,5,88,85,31,27,28,50,83,9,14,43,21,79,58,17,42,65,17,14,9,46,65,9,14,66,9,47,67,9,14,67,9,119,5,74,51,47,48,5,73,61,78,84,88,9,106,66,13,78,9,19,64,67,48,9,96,52,57,9,5,67,71,5,82,71,71,75,20,11,5,68,61,78,65,66,67,5,44,70,61,35,80,74,50,46,43,48,17,91,15,9,83,5,71,61,54,45,9,111,42,104,51,69,56,54,11,66,68,42,48,88,13,18,97,66,13,24,17,88,64,24,11,41,5,63,61,54,45,9,111,42,103,50,69,56,54,11,58,68,41,48,88,13,18,89,66,13,24,17,88,64,24,11,41,5,46,64,78,54,68,49,5,74,61,54,45,9,111,42,93,97,27,69,56,54,11,66,68,42,48,88,13,18,105,52,66,13,24,17,96,48,64,24,11,41,5,65,57,138,5,64,62,19,9,44,54,53,5,71,61,19,9,61,49,54,53,5,48,46,104,5,0,66,56,72,44,64,66,78,70,46,80,44,78,70,0,4,43,0],"data":{"version":3,"file":"ponyfill.es2018.js","sources":["file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/utils.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/simple-queue.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/stub/number-isfinite.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/stub/math-trunc.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/basic.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/stub/number-isnan.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/helpers/array-buffer-view.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/abort-signal.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/writable-stream.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/globals.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/stub/dom-exception.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/readable-stream-like.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream/from.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/readable-stream.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/validators/transformer.ts","file:///home/runner/work/mineflayer-chatgpt/mineflayer-chatgpt/node_modules/web-streams-polyfill/src/lib/transform-stream.ts"],"sourcesContent":["export function noop(): undefined {\n  return undefined;\n}\n","import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n\nexport function setFunctionName(fn: Function, name: string): void {\n  try {\n    Object.defineProperty(fn, 'name', {\n      value: name,\n      configurable: true\n    });\n  } catch {\n    // This property is non-configurable in older browsers, so ignore if this throws.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n  }\n}\n","import { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\n// https://webidl.spec.whatwg.org/#a-new-promise\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\n// https://webidl.spec.whatwg.org/#a-promise-resolved-with\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return newPromise(resolve => resolve(value));\n}\n\n// https://webidl.spec.whatwg.org/#a-promise-rejected-with\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\n// Bluebird logs a warning when a promise is created within a fulfillment handler, but then isn't returned\n// from that handler. To prevent this, return null instead of void from all handlers.\n// http://bluebirdjs.com/docs/warning-explanations.html#warning-a-promise-was-created-in-a-handler-but-was-not-returned-from-it\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => null | PromiseLike<null>,\n  onRejected?: (reason: any) => null | PromiseLike<null>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => null | PromiseLike<null>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => null | PromiseLike<null>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nlet _queueMicrotask: (callback: () => void) => void = callback => {\n  if (typeof queueMicrotask === 'function') {\n    _queueMicrotask = queueMicrotask;\n  } else {\n    const resolvedPromise = promiseResolvedWith(undefined);\n    _queueMicrotask = cb => PerformPromiseThen(resolvedPromise, cb);\n  }\n  return _queueMicrotask(callback);\n};\n\nexport { _queueMicrotask as queueMicrotask };\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n","import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n","export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\nexport const ReleaseSteps = Symbol('[[ReleaseSteps]]');\n","import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, type ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\nimport { ReleaseSteps } from '../abstract-ops/internal-methods';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  assert(stream._reader === reader);\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  stream._readableStreamController[ReleaseSteps]();\n\n  stream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n","import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T>(x: T | undefined,\n                                          position: number,\n                                          context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T>(x: T | undefined,\n                                       field: string,\n                                       context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n","import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { setFunctionName, typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    ReadableStreamDefaultReaderRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nsetFunctionName(ReadableStreamDefaultReader.prototype.cancel, 'cancel');\nsetFunctionName(ReadableStreamDefaultReader.prototype.read, 'read');\nsetFunctionName(ReadableStreamDefaultReader.prototype.releaseLock, 'releaseLock');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\nexport function ReadableStreamDefaultReaderRelease(reader: ReadableStreamDefaultReader) {\n  ReadableStreamReaderGenericRelease(reader);\n  const e = new TypeError('Reader was released');\n  ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n}\n\nexport function ReadableStreamDefaultReaderErrorReadRequests(reader: ReadableStreamDefaultReader, e: any) {\n  const readRequests = reader._readRequests;\n  reader._readRequests = new SimpleQueue();\n  readRequests.forEach(readRequest => {\n    readRequest._errorSteps(e);\n  });\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n","/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n","/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  type ReadableStreamDefaultReadResult,\n  type ReadRequest\n} from './default-reader';\nimport { ReadableStreamReaderGenericCancel, ReadableStreamReaderGenericRelease } from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterableIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    assert(reader._ownerReadableStream !== undefined);\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ninterface ReadableStreamAsyncIteratorInstance<R> extends ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nObject.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","import { reflectCall } from 'lib/helpers/webidl';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport assert from '../../stub/assert';\n\ndeclare global {\n  interface ArrayBuffer {\n    readonly detached: boolean;\n\n    transfer(): ArrayBuffer;\n  }\n\n  function structuredClone<T>(value: T, options: { transfer: ArrayBuffer[] }): T;\n}\n\nexport function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\nexport let TransferArrayBuffer = (O: ArrayBuffer): ArrayBuffer => {\n  if (typeof O.transfer === 'function') {\n    TransferArrayBuffer = buffer => buffer.transfer();\n  } else if (typeof structuredClone === 'function') {\n    TransferArrayBuffer = buffer => structuredClone(buffer, { transfer: [buffer] });\n  } else {\n    // Not implemented correctly\n    TransferArrayBuffer = buffer => buffer;\n  }\n  return TransferArrayBuffer(O);\n};\n\nexport function CanTransferArrayBuffer(O: ArrayBuffer): boolean {\n  return !IsDetachedBuffer(O);\n}\n\nexport let IsDetachedBuffer = (O: ArrayBuffer): boolean => {\n  if (typeof O.detached === 'boolean') {\n    IsDetachedBuffer = buffer => buffer.detached;\n  } else {\n    // Not implemented correctly\n    IsDetachedBuffer = buffer => buffer.byteLength === 0;\n  }\n  return IsDetachedBuffer(O);\n};\n\nexport function ArrayBufferSlice(buffer: ArrayBuffer, begin: number, end: number): ArrayBuffer {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n\nexport type MethodName<T> = {\n  [P in keyof T]: T[P] extends Function | undefined ? P : never;\n}[keyof T];\n\nexport function GetMethod<T, K extends MethodName<T>>(receiver: T, prop: K): T[K] | undefined {\n  const func = receiver[prop];\n  if (func === undefined || func === null) {\n    return undefined;\n  }\n  if (typeof func !== 'function') {\n    throw new TypeError(`${String(prop)} is not a function`);\n  }\n  return func;\n}\n\nexport interface SyncIteratorRecord<T> {\n  iterator: Iterator<T>,\n  nextMethod: Iterator<T>['next'],\n  done: boolean;\n}\n\nexport interface AsyncIteratorRecord<T> {\n  iterator: AsyncIterator<T>,\n  nextMethod: AsyncIterator<T>['next'],\n  done: boolean;\n}\n\nexport type SyncOrAsyncIteratorRecord<T> = SyncIteratorRecord<T> | AsyncIteratorRecord<T>;\n\nexport function CreateAsyncFromSyncIterator<T>(syncIteratorRecord: SyncIteratorRecord<T>): AsyncIteratorRecord<T> {\n  // Instead of re-implementing CreateAsyncFromSyncIterator and %AsyncFromSyncIteratorPrototype%,\n  // we use yield* inside an async generator function to achieve the same result.\n\n  // Wrap the sync iterator inside a sync iterable, so we can use it with yield*.\n  const syncIterable = {\n    [Symbol.iterator]: () => syncIteratorRecord.iterator\n  };\n  // Create an async generator function and immediately invoke it.\n  const asyncIterator = (async function* () {\n    return yield* syncIterable;\n  }());\n  // Return as an async iterator record.\n  const nextMethod = asyncIterator.next;\n  return { iterator: asyncIterator, nextMethod, done: false };\n}\n\n// Aligns with core-js/modules/es.symbol.async-iterator.js\nexport const SymbolAsyncIterator: (typeof Symbol)['asyncIterator'] =\n  Symbol.asyncIterator ??\n  Symbol.for?.('Symbol.asyncIterator') ??\n  '@@asyncIterator';\n\nexport type SyncOrAsyncIterable<T> = Iterable<T> | AsyncIterable<T>;\nexport type SyncOrAsyncIteratorMethod<T> = () => (Iterator<T> | AsyncIterator<T>);\n\nfunction GetIterator<T>(\n  obj: SyncOrAsyncIterable<T>,\n  hint: 'async',\n  method?: SyncOrAsyncIteratorMethod<T>\n): AsyncIteratorRecord<T>;\nfunction GetIterator<T>(\n  obj: Iterable<T>,\n  hint: 'sync',\n  method?: SyncOrAsyncIteratorMethod<T>\n): SyncIteratorRecord<T>;\nfunction GetIterator<T>(\n  obj: SyncOrAsyncIterable<T>,\n  hint = 'sync',\n  method?: SyncOrAsyncIteratorMethod<T>\n): SyncOrAsyncIteratorRecord<T> {\n  assert(hint === 'sync' || hint === 'async');\n  if (method === undefined) {\n    if (hint === 'async') {\n      method = GetMethod(obj as AsyncIterable<T>, SymbolAsyncIterator);\n      if (method === undefined) {\n        const syncMethod = GetMethod(obj as Iterable<T>, Symbol.iterator);\n        const syncIteratorRecord = GetIterator(obj as Iterable<T>, 'sync', syncMethod);\n        return CreateAsyncFromSyncIterator(syncIteratorRecord);\n      }\n    } else {\n      method = GetMethod(obj as Iterable<T>, Symbol.iterator);\n    }\n  }\n  if (method === undefined) {\n    throw new TypeError('The object is not iterable');\n  }\n  const iterator = reflectCall(method, obj, []);\n  if (!typeIsObject(iterator)) {\n    throw new TypeError('The iterator method must return an object');\n  }\n  const nextMethod = iterator.next;\n  return { iterator, nextMethod, done: false } as SyncOrAsyncIteratorRecord<T>;\n}\n\nexport { GetIterator };\n\nexport function IteratorNext<T>(iteratorRecord: AsyncIteratorRecord<T>): Promise<IteratorResult<T>> {\n  const result = reflectCall(iteratorRecord.nextMethod, iteratorRecord.iterator, []);\n  if (!typeIsObject(result)) {\n    throw new TypeError('The iterator.next() method must return an object');\n  }\n  return result;\n}\n\nexport function IteratorComplete<TReturn>(\n  iterResult: IteratorResult<unknown, TReturn>\n): iterResult is IteratorReturnResult<TReturn> {\n  assert(typeIsObject(iterResult));\n  return Boolean(iterResult.done);\n}\n\nexport function IteratorValue<T>(iterResult: IteratorYieldResult<T>): T {\n  assert(typeIsObject(iterResult));\n  return iterResult.value;\n}\n","import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\nimport type { NonShared } from '../helpers/array-buffer-view';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: NonShared<ArrayBufferView>): NonShared<Uint8Array> {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer) as NonShared<Uint8Array>;\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n","export type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\nexport type NonShared<T extends ArrayBufferView> = T & {\n  buffer: ArrayBuffer;\n}\n\nexport interface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBuffer, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n}\n\nexport interface TypedArrayConstructor<T extends TypedArray = TypedArray> extends ArrayBufferViewConstructor<T> {\n  readonly BYTES_PER_ELEMENT: number;\n}\n\nexport type DataViewConstructor = ArrayBufferViewConstructor<DataView>;\n\nfunction isDataViewConstructor(ctor: Function): ctor is DataViewConstructor {\n  return ctor === DataView;\n}\n\nexport function isDataView(view: ArrayBufferView): view is DataView {\n  return isDataViewConstructor(view.constructor);\n}\n\nexport function arrayBufferViewElementSize<T extends ArrayBufferView>(ctor: ArrayBufferViewConstructor<T>): number {\n  if (isDataViewConstructor(ctor)) {\n    return 1;\n  }\n  return (ctor as unknown as TypedArrayConstructor).BYTES_PER_ELEMENT;\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  IsReadableStreamDefaultReader,\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  type ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  type ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  type ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport type { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { setFunctionName, typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps, ReleaseSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\nimport {\n  type ArrayBufferViewConstructor,\n  arrayBufferViewElementSize,\n  type NonShared,\n  type TypedArrayConstructor\n} from '../helpers/array-buffer-view';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: NonShared<ArrayBufferView> | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: NonShared<ArrayBufferView>): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nsetFunctionName(ReadableStreamBYOBRequest.prototype.respond, 'respond');\nsetFunctionName(ReadableStreamBYOBRequest.prototype.respondWithNewView, 'respondWithNewView');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBuffer;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends NonShared<ArrayBufferView> = NonShared<ArrayBufferView>> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBuffer;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  minimumFill: number;\n  elementSize: number;\n  viewConstructor: TypedArrayConstructor<Uint8Array>;\n  readerType: 'default' | 'none';\n}\n\ninterface BYOBPullIntoDescriptor<T extends NonShared<ArrayBufferView> = NonShared<ArrayBufferView>> {\n  buffer: ArrayBuffer;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  minimumFill: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob' | 'none';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: NonShared<ArrayBufferView>): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<NonShared<Uint8Array>>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      ReadableByteStreamControllerFillReadRequestFromQueue(this, readRequest);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        minimumFill: 1,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n\n  /** @internal */\n  [ReleaseSteps](): void {\n    if (this._pendingPullIntos.length > 0) {\n      const firstPullInto = this._pendingPullIntos.peek();\n      firstPullInto.readerType = 'none';\n\n      this._pendingPullIntos = new SimpleQueue();\n      this._pendingPullIntos.push(firstPullInto);\n    }\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nsetFunctionName(ReadableByteStreamController.prototype.close, 'close');\nsetFunctionName(ReadableByteStreamController.prototype.enqueue, 'enqueue');\nsetFunctionName(ReadableByteStreamController.prototype.error, 'error');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n\n      return null;\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n      return null;\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends NonShared<ArrayBufferView>>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n  assert(pullIntoDescriptor.readerType !== 'none');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as NonShared<Uint8Array>, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends NonShared<ArrayBufferView>>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBuffer,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller: ReadableByteStreamController,\n                                                               buffer: ArrayBuffer,\n                                                               byteOffset: number,\n                                                               byteLength: number) {\n  let clonedChunk;\n  try {\n    clonedChunk = ArrayBufferSlice(buffer, byteOffset, byteOffset + byteLength);\n  } catch (cloneE) {\n    ReadableByteStreamControllerError(controller, cloneE);\n    throw cloneE;\n  }\n  ReadableByteStreamControllerEnqueueChunkToQueue(controller, clonedChunk, 0, byteLength);\n}\n\nfunction ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller: ReadableByteStreamController,\n                                                                    firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.readerType === 'none');\n  if (firstDescriptor.bytesFilled > 0) {\n    ReadableByteStreamControllerEnqueueClonedChunkToQueue(\n      controller,\n      firstDescriptor.buffer,\n      firstDescriptor.byteOffset,\n      firstDescriptor.bytesFilled\n    );\n  }\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill);\n  const remainderBytes = maxBytesFilled % pullIntoDescriptor.elementSize;\n  const maxAlignedBytes = maxBytesFilled - remainderBytes;\n  // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n  // of the queue, so the underlying source can keep filling it.\n  if (maxAlignedBytes >= pullIntoDescriptor.minimumFill) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n    assert(pullIntoDescriptor.readerType !== 'none');\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller: ReadableByteStreamController) {\n  const reader = controller._controlledReadableByteStream._reader;\n  assert(IsReadableStreamDefaultReader(reader));\n  while (reader._readRequests.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n    const readRequest = reader._readRequests.shift();\n    ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest);\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends NonShared<ArrayBufferView>>(\n  controller: ReadableByteStreamController,\n  view: T,\n  min: number,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n  const elementSize = arrayBufferViewElementSize(ctor);\n\n  const { byteOffset, byteLength } = view;\n\n  const minimumFill = min * elementSize;\n  assert(minimumFill >= elementSize && minimumFill <= byteLength);\n  assert(minimumFill % elementSize === 0);\n\n  let buffer: ArrayBuffer;\n  try {\n    buffer = TransferArrayBuffer(view.buffer);\n  } catch (e) {\n    readIntoRequest._errorSteps(e);\n    return;\n  }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset,\n    byteLength,\n    bytesFilled: 0,\n    minimumFill,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled % firstDescriptor.elementSize === 0);\n\n  if (firstDescriptor.readerType === 'none') {\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n  }\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.readerType === 'none') {\n    ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    return;\n  }\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill) {\n    // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n    // of the queue, so the underlying source can keep filling it.\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    ReadableByteStreamControllerEnqueueClonedChunkToQueue(\n      controller,\n      pullIntoDescriptor.buffer,\n      end - remainderSize,\n      remainderSize\n    );\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(\n  controller: ReadableByteStreamController,\n  chunk: NonShared<ArrayBufferView>\n) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const { buffer, byteOffset, byteLength } = chunk;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n    if (firstPendingPullInto.readerType === 'none') {\n      ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstPendingPullInto);\n    }\n  }\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller._pendingPullIntos.length === 0);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n      if (controller._pendingPullIntos.length > 0) {\n        assert(controller._pendingPullIntos.peek().readerType === 'default');\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView as NonShared<Uint8Array>, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerFillReadRequestFromQueue(\n  controller: ReadableByteStreamController,\n  readRequest: ReadRequest<NonShared<Uint8Array>>\n) {\n  assert(controller._queueTotalSize > 0);\n\n  const entry = controller._queue.shift();\n  controller._queueTotalSize -= entry.byteLength;\n\n  ReadableByteStreamControllerHandleQueueDrain(controller);\n\n  const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n  readRequest._chunkSteps(view as NonShared<Uint8Array>);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view as NonShared<Uint8Array>);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: NonShared<ArrayBufferView>) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  const viewByteLength = view.byteLength;\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n      return null;\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n      return null;\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void>;\n  let pullAlgorithm: () => Promise<void>;\n  let cancelAlgorithm: (reason: any) => Promise<void>;\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  } else {\n    startAlgorithm = () => undefined;\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  } else {\n    pullAlgorithm = () => promiseResolvedWith(undefined);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  } else {\n    cancelAlgorithm = () => promiseResolvedWith(undefined);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: NonShared<ArrayBufferView>) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n","import { assertDictionary, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport type {\n  ReadableStreamBYOBReaderReadOptions,\n  ReadableStreamGetReaderOptions,\n  ValidatedReadableStreamBYOBReaderReadOptions\n} from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n\nexport function convertByobReadOptions(\n  options: ReadableStreamBYOBReaderReadOptions | null | undefined,\n  context: string\n): ValidatedReadableStreamBYOBReaderReadOptions {\n  assertDictionary(options, context);\n  const min = options?.min ?? 1;\n  return {\n    min: convertUnsignedLongLongWithEnforceRange(\n      min,\n      `${context} has member 'min' that`\n    )\n  };\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, type ReadableByteStream, type ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { setFunctionName, typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\nimport type {\n  ReadableStreamBYOBReaderReadOptions,\n  ValidatedReadableStreamBYOBReaderReadOptions\n} from './reader-options';\nimport { convertByobReadOptions } from '../validators/reader-options';\nimport { isDataView, type NonShared, type TypedArray } from '../helpers/array-buffer-view';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream as ReadableStream<Uint8Array>);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends NonShared<ArrayBufferView>>(\n  stream: ReadableByteStream,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends NonShared<ArrayBufferView>> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableStream<Uint8Array>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(\n    view: T,\n    options?: ReadableStreamBYOBReaderReadOptions\n  ): Promise<ReadableStreamBYOBReadResult<T>>;\n  read<T extends NonShared<ArrayBufferView>>(\n    view: T,\n    rawOptions: ReadableStreamBYOBReaderReadOptions | null | undefined = {}\n  ): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    let options: ValidatedReadableStreamBYOBReaderReadOptions;\n    try {\n      options = convertByobReadOptions(rawOptions, 'options');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n    const min = options.min;\n    if (min === 0) {\n      return promiseRejectedWith(new TypeError('options.min must be greater than 0'));\n    }\n    if (!isDataView(view)) {\n      if (min > (view as unknown as TypedArray).length) {\n        return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s length'));\n      }\n    } else if (min > view.byteLength) {\n      return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s byteLength'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, min, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    ReadableStreamBYOBReaderRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nsetFunctionName(ReadableStreamBYOBReader.prototype.cancel, 'cancel');\nsetFunctionName(ReadableStreamBYOBReader.prototype.read, 'read');\nsetFunctionName(ReadableStreamBYOBReader.prototype.releaseLock, 'releaseLock');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends NonShared<ArrayBufferView>>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  min: number,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      min,\n      readIntoRequest\n    );\n  }\n}\n\nexport function ReadableStreamBYOBReaderRelease(reader: ReadableStreamBYOBReader) {\n  ReadableStreamReaderGenericRelease(reader);\n  const e = new TypeError('Reader was released');\n  ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n}\n\nexport function ReadableStreamBYOBReaderErrorReadIntoRequests(reader: ReadableStreamBYOBReader, e: any) {\n  const readIntoRequests = reader._readIntoRequests;\n  reader._readIntoRequests = new SimpleQueue();\n  readIntoRequests.forEach(readIntoRequest => {\n    readIntoRequest._errorSteps(e);\n  });\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n","import type { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n","import type { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n","import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport type {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n","import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n","/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * If aborted, returns the reason for aborting.\n   */\n  readonly reason?: any;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(reason?: any): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n","import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  type QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport type { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { setFunctionName, typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport type {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { type AbortController, type AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nsetFunctionName(WritableStream.prototype.abort, 'abort');\nsetFunctionName(WritableStream.prototype.close, 'close');\nsetFunctionName(WritableStream.prototype.getWriter, 'getWriter');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight\n};\n\nexport type {\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort(reason);\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return null;\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return null;\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer’s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer’s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nsetFunctionName(WritableStreamDefaultWriter.prototype.abort, 'abort');\nsetFunctionName(WritableStreamDefaultWriter.prototype.close, 'close');\nsetFunctionName(WritableStreamDefaultWriter.prototype.releaseLock, 'releaseLock');\nsetFunctionName(WritableStreamDefaultWriter.prototype.write, 'write');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   *\n   * @deprecated\n   *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n   *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  abortReason: { enumerable: true },\n  signal: { enumerable: true },\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      return null;\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n      return null;\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void>;\n  let writeAlgorithm: (chunk: W) => Promise<void>;\n  let closeAlgorithm: () => Promise<void>;\n  let abortAlgorithm: (reason: any) => Promise<void>;\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  } else {\n    startAlgorithm = () => undefined;\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  } else {\n    writeAlgorithm = () => promiseResolvedWith(undefined);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  } else {\n    closeAlgorithm = () => promiseResolvedWith(undefined);\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  } else {\n    abortAlgorithm = () => promiseResolvedWith(undefined);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n      return null;\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n      return null;\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      return null;\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n      return null;\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n","/// <reference lib=\"dom\" />\n\nfunction getGlobals(): typeof globalThis | undefined {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","/// <reference types=\"node\" />\nimport { globals } from '../globals';\nimport { setFunctionName } from '../lib/helpers/miscellaneous';\n\ninterface DOMException extends Error {\n  name: string;\n  message: string;\n}\n\ntype DOMExceptionConstructor = new (message?: string, name?: string) => DOMException;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  if ((ctor as DOMExceptionConstructor).name !== 'DOMException') {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Support:\n * - Web browsers\n * - Node 18 and higher (https://github.com/nodejs/node/commit/e4b1fb5e6422c1ff151234bb9de792d45dd88d87)\n */\nfunction getFromGlobal(): DOMExceptionConstructor | undefined {\n  const ctor = globals?.DOMException;\n  return isDOMExceptionConstructor(ctor) ? ctor : undefined;\n}\n\n/**\n * Support:\n * - All platforms\n */\nfunction createPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  setFunctionName(ctor, 'DOMException');\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst DOMException: DOMExceptionConstructor = getFromGlobal() || createPolyfill();\n\nexport { DOMException };\n","import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { type AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = signal.reason !== undefined ? signal.reason : new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n      return null;\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n      return null;\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n      return null;\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => null) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => null) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest(): null {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n        return null;\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any): null {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n\n      return null;\n    }\n  });\n}\n","import type { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, type QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  type ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport type { ValidatedUnderlyingSource } from './underlying-source';\nimport { setFunctionName, typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps, ReleaseSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n\n  /** @internal */\n  [ReleaseSteps](): void {\n    // Do nothing.\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nsetFunctionName(ReadableStreamDefaultController.prototype.close, 'close');\nsetFunctionName(ReadableStreamDefaultController.prototype.enqueue, 'enqueue');\nsetFunctionName(ReadableStreamDefaultController.prototype.error, 'error');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n\n      return null;\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n      return null;\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      return null;\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n      return null;\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void>;\n  let pullAlgorithm: () => Promise<void>;\n  let cancelAlgorithm: (reason: any) => Promise<void>;\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  } else {\n    startAlgorithm = () => undefined;\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  } else {\n    pullAlgorithm = () => promiseResolvedWith(undefined);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  } else {\n    cancelAlgorithm = () => promiseResolvedWith(undefined);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n","import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  type DefaultReadableStream,\n  IsReadableStream,\n  type ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  type ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  type ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  type ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\nimport type { NonShared } from '../helpers/array-buffer-view';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(\n  stream: ReadableStream<R>,\n  cloneForBranch2: boolean\n): [DefaultReadableStream<R>, DefaultReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: DefaultReadableStream<R>;\n  let branch2: DefaultReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      readAgain = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgain = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgain) {\n            pullAlgorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n    return null;\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<NonShared<Uint8Array>> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<NonShared<Uint8Array>>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return null;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n      return null;\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<NonShared<Uint8Array>> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: NonShared<ArrayBufferView>, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<NonShared<Uint8Array>>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<NonShared<ArrayBufferView>> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, 1, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n","import { typeIsObject } from '../helpers/miscellaneous';\nimport type { ReadableStreamDefaultReadResult } from './default-reader';\n\n/**\n * A common interface for a `ReadadableStream` implementation.\n *\n * @public\n */\nexport interface ReadableStreamLike<R = any> {\n  readonly locked: boolean;\n\n  getReader(): ReadableStreamDefaultReaderLike<R>;\n}\n\n/**\n * A common interface for a `ReadableStreamDefaultReader` implementation.\n *\n * @public\n */\nexport interface ReadableStreamDefaultReaderLike<R = any> {\n  readonly closed: Promise<undefined>;\n\n  cancel(reason?: any): Promise<void>;\n\n  read(): Promise<ReadableStreamDefaultReadResult<R>>;\n\n  releaseLock(): void;\n}\n\nexport function isReadableStreamLike<R>(stream: unknown): stream is ReadableStreamLike<R> {\n  return typeIsObject(stream) && typeof (stream as ReadableStreamLike<R>).getReader !== 'undefined';\n}\n","import { CreateReadableStream, type DefaultReadableStream } from '../readable-stream';\nimport {\n  isReadableStreamLike,\n  type ReadableStreamDefaultReaderLike,\n  type ReadableStreamLike\n} from './readable-stream-like';\nimport { ReadableStreamDefaultControllerClose, ReadableStreamDefaultControllerEnqueue } from './default-controller';\nimport { GetIterator, GetMethod, IteratorComplete, IteratorNext, IteratorValue } from '../abstract-ops/ecmascript';\nimport { promiseRejectedWith, promiseResolvedWith, reflectCall, transformPromiseWith } from '../helpers/webidl';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { noop } from '../../utils';\n\nexport function ReadableStreamFrom<R>(\n  source: Iterable<R> | AsyncIterable<R> | ReadableStreamLike<R>\n): DefaultReadableStream<R> {\n  if (isReadableStreamLike(source)) {\n    return ReadableStreamFromDefaultReader(source.getReader());\n  }\n  return ReadableStreamFromIterable(source);\n}\n\nexport function ReadableStreamFromIterable<R>(asyncIterable: Iterable<R> | AsyncIterable<R>): DefaultReadableStream<R> {\n  let stream: DefaultReadableStream<R>;\n  const iteratorRecord = GetIterator(asyncIterable, 'async');\n\n  const startAlgorithm = noop;\n\n  function pullAlgorithm(): Promise<void> {\n    let nextResult;\n    try {\n      nextResult = IteratorNext(iteratorRecord);\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n    const nextPromise = promiseResolvedWith(nextResult);\n    return transformPromiseWith(nextPromise, iterResult => {\n      if (!typeIsObject(iterResult)) {\n        throw new TypeError('The promise returned by the iterator.next() method must fulfill with an object');\n      }\n      const done = IteratorComplete(iterResult);\n      if (done) {\n        ReadableStreamDefaultControllerClose(stream._readableStreamController);\n      } else {\n        const value = IteratorValue(iterResult);\n        ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n      }\n    });\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    const iterator = iteratorRecord.iterator;\n    let returnMethod: (typeof iterator)['return'] | undefined;\n    try {\n      returnMethod = GetMethod(iterator, 'return');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n    if (returnMethod === undefined) {\n      return promiseResolvedWith(undefined);\n    }\n    let returnResult: IteratorResult<R> | Promise<IteratorResult<R>>;\n    try {\n      returnResult = reflectCall(returnMethod, iterator, [reason]);\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n    const returnPromise = promiseResolvedWith(returnResult);\n    return transformPromiseWith(returnPromise, iterResult => {\n      if (!typeIsObject(iterResult)) {\n        throw new TypeError('The promise returned by the iterator.return() method must fulfill with an object');\n      }\n      return undefined;\n    });\n  }\n\n  stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n  return stream;\n}\n\nexport function ReadableStreamFromDefaultReader<R>(\n  reader: ReadableStreamDefaultReaderLike<R>\n): DefaultReadableStream<R> {\n  let stream: DefaultReadableStream<R>;\n\n  const startAlgorithm = noop;\n\n  function pullAlgorithm(): Promise<void> {\n    let readPromise;\n    try {\n      readPromise = reader.read();\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n    return transformPromiseWith(readPromise, readResult => {\n      if (!typeIsObject(readResult)) {\n        throw new TypeError('The promise returned by the reader.read() method must fulfill with an object');\n      }\n      if (readResult.done) {\n        ReadableStreamDefaultControllerClose(stream._readableStreamController);\n      } else {\n        const value = readResult.value;\n        ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n      }\n    });\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    try {\n      return promiseResolvedWith(reader.cancel(reason));\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n  }\n\n  stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n  return stream;\n}\n","import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport type {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n","import { assertDictionary } from './basic';\nimport type {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n","import { assertDictionary } from './basic';\nimport type { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { type AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n","import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n","import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport type { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, type ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderErrorReadRequests,\n  type ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderErrorReadIntoRequests,\n  type ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { ReadableStreamFrom } from './readable-stream/from';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport type {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { setFunctionName, typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList, SymbolAsyncIterator } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport type {\n  ReadableStreamBYOBReaderReadOptions,\n  ReadableStreamGetReaderOptions\n} from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport type { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport type { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport type { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\nimport type { ReadableStreamDefaultReaderLike, ReadableStreamLike } from './readable-stream/readable-stream-like';\nimport type { NonShared } from './helpers/array-buffer-view';\n\nexport type DefaultReadableStream<R = any> = ReadableStream<R> & {\n  _readableStreamController: ReadableStreamDefaultController<R>\n};\n\nexport type ReadableByteStream = ReadableStream<NonShared<Uint8Array>> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> implements AsyncIterable<R> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator](options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n\n  [SymbolAsyncIterator](options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R> {\n    // Stub implementation, overridden below\n    return this.values(options);\n  }\n\n  /**\n   * Creates a new ReadableStream wrapping the provided iterable or async iterable.\n   *\n   * This can be used to adapt various kinds of objects into a readable stream,\n   * such as an array, an async generator, or a Node.js readable stream.\n   */\n  static from<R>(asyncIterable: Iterable<R> | AsyncIterable<R> | ReadableStreamLike<R>): ReadableStream<R> {\n    return ReadableStreamFrom(asyncIterable);\n  }\n}\n\nObject.defineProperties(ReadableStream, {\n  from: { enumerable: true }\n});\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nsetFunctionName(ReadableStream.from, 'from');\nsetFunctionName(ReadableStream.prototype.cancel, 'cancel');\nsetFunctionName(ReadableStream.prototype.getReader, 'getReader');\nsetFunctionName(ReadableStream.prototype.pipeThrough, 'pipeThrough');\nsetFunctionName(ReadableStream.prototype.pipeTo, 'pipeTo');\nsetFunctionName(ReadableStream.prototype.tee, 'tee');\nsetFunctionName(ReadableStream.prototype.values, 'values');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nObject.defineProperty(ReadableStream.prototype, SymbolAsyncIterator, {\n  value: ReadableStream.prototype.values,\n  writable: true,\n  configurable: true\n});\n\nexport type {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  ReadableStreamBYOBReaderReadOptions,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions,\n  ReadableStreamLike,\n  ReadableStreamDefaultReaderLike\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>,\n  highWaterMark = 1,\n  sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1\n): DefaultReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: DefaultReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    const readIntoRequests = reader._readIntoRequests;\n    reader._readIntoRequests = new SimpleQueue();\n    readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    const readRequests = reader._readRequests;\n    reader._readRequests = new SimpleQueue();\n    readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n    ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n","import type { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n","import type { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { setFunctionName, typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\nsetFunctionName(byteLengthSizeFunction, 'size');\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n","import type { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { setFunctionName, typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\nsetFunctionName(countSizeFunction, 'size');\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n","import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport type {\n  Transformer,\n  TransformerCancelCallback,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const cancel = original?.cancel;\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    cancel: cancel === undefined ?\n      undefined :\n      convertTransformerCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n\nfunction convertTransformerCancelCallback<I, O>(\n  fn: TransformerCancelCallback,\n  original: Transformer<I, O>,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n","import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith,\n  uponPromise\n} from './helpers/webidl';\nimport { CreateReadableStream, type DefaultReadableStream, ReadableStream } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport type { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { setFunctionName, typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport type {\n  Transformer,\n  TransformerCancelCallback,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: DefaultReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport type {\n  Transformer,\n  TransformerCancelCallback,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            cancelAlgorithm: (reason: any) => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSourceCancelAlgorithm(stream, reason);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  TransformStreamUnblockWrite(stream);\n}\n\nfunction TransformStreamUnblockWrite(stream: TransformStream) {\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _finishPromise: Promise<undefined> | undefined;\n  /** @internal */\n  _finishPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _finishPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nsetFunctionName(TransformStreamDefaultController.prototype.enqueue, 'enqueue');\nsetFunctionName(TransformStreamDefaultController.prototype.error, 'error');\nsetFunctionName(TransformStreamDefaultController.prototype.terminate, 'terminate');\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>,\n                                                     cancelAlgorithm: (reason: any) => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._finishPromise = undefined;\n  controller._finishPromise_resolve = undefined;\n  controller._finishPromise_reject = undefined;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm: (chunk: I) => Promise<void>;\n  let flushAlgorithm: () => Promise<void>;\n  let cancelAlgorithm: (reason: any) => Promise<void>;\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  } else {\n    transformAlgorithm = chunk => {\n      try {\n        TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n        return promiseResolvedWith(undefined);\n      } catch (transformResultE) {\n        return promiseRejectedWith(transformResultE);\n      }\n    };\n  }\n\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  } else {\n    flushAlgorithm = () => promiseResolvedWith(undefined);\n  }\n\n  if (transformer.cancel !== undefined) {\n    cancelAlgorithm = reason => transformer.cancel!(reason);\n  } else {\n    cancelAlgorithm = () => promiseResolvedWith(undefined);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm<I, O>(stream: TransformStream<I, O>, reason: any): Promise<void> {\n  const controller = stream._transformStreamController;\n  if (controller._finishPromise !== undefined) {\n    return controller._finishPromise;\n  }\n\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  // Assign the _finishPromise now so that if _cancelAlgorithm calls readable.cancel() internally,\n  // we don't run the _cancelAlgorithm again.\n  controller._finishPromise = newPromise((resolve, reject) => {\n    controller._finishPromise_resolve = resolve;\n    controller._finishPromise_reject = reject;\n  });\n\n  const cancelPromise = controller._cancelAlgorithm(reason);\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  uponPromise(cancelPromise, () => {\n    if (readable._state === 'errored') {\n      defaultControllerFinishPromiseReject(controller, readable._storedError);\n    } else {\n      ReadableStreamDefaultControllerError(readable._readableStreamController, reason);\n      defaultControllerFinishPromiseResolve(controller);\n    }\n    return null;\n  }, r => {\n    ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n    defaultControllerFinishPromiseReject(controller, r);\n    return null;\n  });\n\n  return controller._finishPromise;\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  const controller = stream._transformStreamController;\n  if (controller._finishPromise !== undefined) {\n    return controller._finishPromise;\n  }\n\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  // Assign the _finishPromise now so that if _flushAlgorithm calls readable.cancel() internally,\n  // we don't also run the _cancelAlgorithm.\n  controller._finishPromise = newPromise((resolve, reject) => {\n    controller._finishPromise_resolve = resolve;\n    controller._finishPromise_reject = reject;\n  });\n\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  uponPromise(flushPromise, () => {\n    if (readable._state === 'errored') {\n      defaultControllerFinishPromiseReject(controller, readable._storedError);\n    } else {\n      ReadableStreamDefaultControllerClose(readable._readableStreamController);\n      defaultControllerFinishPromiseResolve(controller);\n    }\n    return null;\n  }, r => {\n    ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n    defaultControllerFinishPromiseReject(controller, r);\n    return null;\n  });\n\n  return controller._finishPromise;\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\nfunction TransformStreamDefaultSourceCancelAlgorithm<I, O>(stream: TransformStream<I, O>, reason: any): Promise<void> {\n  const controller = stream._transformStreamController;\n  if (controller._finishPromise !== undefined) {\n    return controller._finishPromise;\n  }\n\n  // stream._writable cannot change after construction, so caching it across a call to user code is safe.\n  const writable = stream._writable;\n\n  // Assign the _finishPromise now so that if _flushAlgorithm calls writable.abort() or\n  // writable.cancel() internally, we don't run the _cancelAlgorithm again, or also run the\n  // _flushAlgorithm.\n  controller._finishPromise = newPromise((resolve, reject) => {\n    controller._finishPromise_resolve = resolve;\n    controller._finishPromise_reject = reject;\n  });\n\n  const cancelPromise = controller._cancelAlgorithm(reason);\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  uponPromise(cancelPromise, () => {\n    if (writable._state === 'errored') {\n      defaultControllerFinishPromiseReject(controller, writable._storedError);\n    } else {\n      WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, reason);\n      TransformStreamUnblockWrite(stream);\n      defaultControllerFinishPromiseResolve(controller);\n    }\n    return null;\n  }, r => {\n    WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, r);\n    TransformStreamUnblockWrite(stream);\n    defaultControllerFinishPromiseReject(controller, r);\n    return null;\n  });\n\n  return controller._finishPromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\nexport function defaultControllerFinishPromiseResolve(controller: TransformStreamDefaultController<any>) {\n  if (controller._finishPromise_resolve === undefined) {\n    return;\n  }\n\n  controller._finishPromise_resolve();\n  controller._finishPromise_resolve = undefined;\n  controller._finishPromise_reject = undefined;\n}\n\nexport function defaultControllerFinishPromiseReject(controller: TransformStreamDefaultController<any>, reason: any) {\n  if (controller._finishPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(controller._finishPromise!);\n  controller._finishPromise_reject(reason);\n  controller._finishPromise_resolve = undefined;\n  controller._finishPromise_reject = undefined;\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n"],"names":["queueMicrotask","streamBrandCheckException","defaultControllerBrandCheckException"],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null}}}